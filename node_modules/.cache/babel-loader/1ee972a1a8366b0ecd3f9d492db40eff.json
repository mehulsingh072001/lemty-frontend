{"ast":null,"code":"var _jsxFileName = \"/home/lucifer/Projects/softwares/lemty/client/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignUpload.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from 'universal-cookie';\nimport { GlobalContext } from \"../../../../GlobalProvider\";\nimport UploadModalBar from \"./CampaignUploadModalBar\";\nimport DragAndDrop from \"./CampaignDragAndDrop\";\nimport UploadNav from \"./CampaignUploadNav\";\nimport MapColumns from \"./CampaignMapColumns\";\nimport AssignList from \"./CampaignAssignList\";\nimport CampaignReview from \"../../CampaignReview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nfunction Upload() {\n  _s();\n\n  const {\n    addProspectCampaign,\n    addProspect,\n    upload,\n    selectedCampaign,\n    review\n  } = useContext(GlobalContext);\n  const [campaignProspectAdd, setCampaignProspectAdd] = addProspectCampaign;\n  const [progress, setProgress] = useState(1);\n  const [csvHeaders, setCsvHeaders] = useState(null);\n  const [prospectData, setProspectData] = useState([]);\n  const [list, setList] = useState(\"\");\n  const [newUpload, setNewUpload] = upload;\n  const [file, setFile] = useState(null);\n  const [prospectIds, setProspectIds] = useState([]);\n  const [reviewModal, setReviewModal] = review;\n  const token = cookies.get(\"access_token\");\n  const user_id = cookies.get(\"userId\");\n\n  const handleFileUpload = f => {\n    let data = new FormData();\n    setFile(f);\n    data.append('file', f);\n    axios.post(\"/csv/getCsvHeaders\", data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setCsvHeaders(res.data);\n        setProgress(progress + 1);\n      }\n    });\n  };\n\n  const importProspect = () => {\n    let data = new FormData();\n    data.append(\"file\", file);\n    data.append(\"firstName\", prospectData.firstName);\n    data.append(\"lastName\", prospectData.lastName);\n    data.append(\"prospectEmail\", prospectData.prospectEmail);\n    data.append(\"prospectCompany\", prospectData.prospectCompany);\n    data.append(\"prospectMobileNumber\", prospectData.prospectMobileNumber);\n    data.append(\"prospectAccount\", prospectData.prospectAccount);\n    data.append(\"prospectCompanyEmail\", prospectData.prospectCompanyEmail);\n    data.append(\"prospectDepartment\", prospectData.prospectDepartment);\n    data.append(\"prospectTitle\", prospectData.prospectTitle);\n    data.append(\"prospectCompanyDomain\", prospectData.prospectCompanyDomain);\n    data.append(\"prospectLinkedinUrl\", prospectData.prospectLinkedinUrl);\n    data.append(\"prospectTwitterUrl\", prospectData.prospectTwitterUrl);\n    data.append(\"prospectLocation\", prospectData.prospectLocation);\n    data.append(\"prospectCountry\", prospectData.prospectCountry);\n    const params = {\n      listId: list,\n      userId: user_id\n    }; // axios.post(`/csv/csvToProspects/${list}/${user_id}`)\n\n    axios.post(`/csv/csvToProspects/`, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${token}`\n      },\n      params: params\n    }).then(res => {\n      if (res.status === 200) {\n        const ids = [];\n        res.data.map((d, i) => ids.push(d.id));\n        setProspectIds(ids);\n        setReviewModal(!reviewModal);\n      }\n    });\n  }; // function toggleAdd(){\n  //   setAdd(!add)\n  // }\n\n\n  function toggleReview() {\n    return null;\n  }\n\n  function toggleUpload() {\n    setNewUpload(!newUpload);\n  }\n\n  function toggleHome() {\n    setNewUpload(false);\n    setReviewModal(false);\n    setCampaignProspectAdd(false);\n  }\n\n  const selectProgress = number => {\n    setProgress(number);\n  };\n\n  const prevStep = () => {\n    setProgress(progress - 1);\n  };\n\n  const nextStep = () => {\n    if (progress <= 2) {\n      setProgress(progress + 1);\n    }\n  };\n\n  switch (progress) {\n    case 1:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload\",\n        children: [/*#__PURE__*/_jsxDEV(UploadNav, {\n          toggleUpload: toggleUpload,\n          importProspect: importProspect,\n          nextStep: nextStep,\n          prevStep: prevStep,\n          progress: progress,\n          toggleHome: toggleHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload__container\",\n          children: [/*#__PURE__*/_jsxDEV(UploadModalBar, {\n            progress: progress,\n            selectProgress: selectProgress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DragAndDrop, {\n            handleFileUpload: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload\",\n        children: [/*#__PURE__*/_jsxDEV(UploadNav, {\n          toggleUpload: toggleUpload,\n          importProspect: importProspect,\n          nextStep: nextStep,\n          prevStep: prevStep,\n          progress: progress,\n          toggleHome: toggleHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload__container\",\n          children: [/*#__PURE__*/_jsxDEV(UploadModalBar, {\n            progress: progress,\n            selectProgress: selectProgress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MapColumns, {\n            csvHeaders: csvHeaders,\n            prospectData: prospectData,\n            setProspectData: setProspectData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this);\n\n    case 3:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload\",\n        children: [reviewModal ? /*#__PURE__*/_jsxDEV(CampaignReview, {\n          selectedProspects: prospectIds,\n          toggleHome: toggleHome,\n          toggleReview: toggleReview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 26\n        }, this) : null, /*#__PURE__*/_jsxDEV(UploadNav, {\n          toggleUpload: toggleUpload,\n          importProspect: importProspect,\n          nextStep: nextStep,\n          prevStep: prevStep,\n          progress: progress,\n          toggleHome: toggleHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload__container\",\n          children: [/*#__PURE__*/_jsxDEV(UploadModalBar, {\n            progress: progress,\n            selectProgress: selectProgress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AssignList, {\n            list: list,\n            setList: setList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this);\n\n    default:\n      break;\n  }\n}\n\n_s(Upload, \"vjf7PmEO04c0bVVOgHD+/iKomHs=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/lucifer/Projects/softwares/lemty/client/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignUpload.js"],"names":["useState","useContext","useEffect","axios","Cookies","GlobalContext","UploadModalBar","DragAndDrop","UploadNav","MapColumns","AssignList","CampaignReview","cookies","Upload","addProspectCampaign","addProspect","upload","selectedCampaign","review","campaignProspectAdd","setCampaignProspectAdd","progress","setProgress","csvHeaders","setCsvHeaders","prospectData","setProspectData","list","setList","newUpload","setNewUpload","file","setFile","prospectIds","setProspectIds","reviewModal","setReviewModal","token","get","user_id","handleFileUpload","f","data","FormData","append","post","headers","then","res","status","importProspect","firstName","lastName","prospectEmail","prospectCompany","prospectMobileNumber","prospectAccount","prospectCompanyEmail","prospectDepartment","prospectTitle","prospectCompanyDomain","prospectLinkedinUrl","prospectTwitterUrl","prospectLocation","prospectCountry","params","listId","userId","ids","map","d","i","push","id","toggleReview","toggleUpload","toggleHome","selectProgress","number","prevStep","nextStep"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\"\nimport Cookies from 'universal-cookie';\nimport { GlobalContext } from \"../../../../GlobalProvider\";\nimport UploadModalBar from \"./CampaignUploadModalBar\"\nimport DragAndDrop from \"./CampaignDragAndDrop\";\nimport UploadNav from \"./CampaignUploadNav\";\nimport MapColumns from \"./CampaignMapColumns\";\nimport AssignList from \"./CampaignAssignList\";\nimport CampaignReview from \"../../CampaignReview\";\n\nconst cookies = new Cookies();\nfunction Upload(){\n  const {addProspectCampaign, addProspect, upload, selectedCampaign, review} = useContext(GlobalContext)\n  const [campaignProspectAdd, setCampaignProspectAdd] = addProspectCampaign\n  const [progress, setProgress] = useState(1)\n  const [csvHeaders, setCsvHeaders] = useState(null)\n  const [prospectData, setProspectData] = useState([])\n  const [list, setList] = useState(\"\")\n  const [newUpload, setNewUpload] = upload\n  const [file, setFile] = useState(null)\n  const [prospectIds, setProspectIds] = useState([])\n  const [reviewModal, setReviewModal] = review\n\n  const token = cookies.get(\"access_token\")\n  const user_id = cookies.get(\"userId\")\n\n  const handleFileUpload = (f) => {\n    let data = new FormData()\n    setFile(f)\n    data.append('file', f)\n    axios.post(\"/csv/getCsvHeaders\", data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then((res) => {\n      if(res.status === 200){\n        setCsvHeaders(res.data)\n        setProgress(progress + 1)\n      }\n    })\n  }\n\n  const importProspect = () => {\n    let data = new FormData()\n    data.append(\"file\", file)\n    data.append(\"firstName\", prospectData.firstName)\n    data.append(\"lastName\", prospectData.lastName)\n    data.append(\"prospectEmail\", prospectData.prospectEmail)\n    data.append(\"prospectCompany\", prospectData.prospectCompany)\n    data.append(\"prospectMobileNumber\", prospectData.prospectMobileNumber)\n    data.append(\"prospectAccount\", prospectData.prospectAccount)\n    data.append(\"prospectCompanyEmail\", prospectData.prospectCompanyEmail)\n    data.append(\"prospectDepartment\", prospectData.prospectDepartment)\n    data.append(\"prospectTitle\", prospectData.prospectTitle)\n    data.append(\"prospectCompanyDomain\", prospectData.prospectCompanyDomain)\n    data.append(\"prospectLinkedinUrl\", prospectData.prospectLinkedinUrl)\n    data.append(\"prospectTwitterUrl\", prospectData.prospectTwitterUrl)\n    data.append(\"prospectLocation\", prospectData.prospectLocation)\n    data.append(\"prospectCountry\", prospectData.prospectCountry)\n\n    const params = {\n      listId: list,\n      userId: user_id,\n    }\n\n    // axios.post(`/csv/csvToProspects/${list}/${user_id}`)\n    axios.post(`/csv/csvToProspects/`, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${token}`\n      },\n      params: params\n    }).then((res) => {\n      if(res.status === 200){\n        const ids = []\n        res.data.map((d,i) => \n         ids.push(d.id)\n        )\n      setProspectIds(ids)\n      setReviewModal(!reviewModal)\n      }\n    })\n  }\n\n  // function toggleAdd(){\n  //   setAdd(!add)\n  // }\n\n  function toggleReview(){\n    return null;\n  }\n\n  function toggleUpload(){\n    setNewUpload(!newUpload)\n  }\n\n  function toggleHome(){\n    setNewUpload(false)\n    setReviewModal(false)\n    setCampaignProspectAdd(false)\n  }\n\n  const selectProgress = (number) => {\n    setProgress(number)\n  }\n\n  const prevStep = () => {\n      setProgress(progress - 1)\n  }\n\n  const nextStep = () => {\n    if(progress <= 2){\n      setProgress(progress + 1)\n    }\n  }\n\n  switch(progress){\n    case 1:\n      return(\n        <div className=\"upload\">\n          <UploadNav toggleUpload={toggleUpload} importProspect={importProspect} nextStep={nextStep} prevStep={prevStep} progress={progress} toggleHome={toggleHome}/>\n\n          <div className=\"upload__container\">\n              <UploadModalBar progress={progress} selectProgress={selectProgress}/>\n              <DragAndDrop handleFileUpload={handleFileUpload}/>\n          </div>\n        </div>\n      )\n    case 2:\n      return(\n        <div className=\"upload\">\n          <UploadNav toggleUpload={toggleUpload} importProspect={importProspect} nextStep={nextStep} prevStep={prevStep} progress={progress} toggleHome={toggleHome}/>\n          <div className=\"upload__container\">\n              <UploadModalBar progress={progress} selectProgress={selectProgress}/>\n              <MapColumns csvHeaders={csvHeaders} prospectData={prospectData} setProspectData={setProspectData}/>\n          </div>\n        </div>\n      )\n    case 3:\n      return(\n        <div className=\"upload\">\n          {reviewModal ? <CampaignReview selectedProspects={prospectIds} toggleHome={toggleHome} toggleReview={toggleReview}/> : null}\n          <UploadNav toggleUpload={toggleUpload} importProspect={importProspect} nextStep={nextStep} prevStep={prevStep} progress={progress} toggleHome={toggleHome}/>\n          <div className=\"upload__container\">\n              <UploadModalBar progress={progress} selectProgress={selectProgress}/>\n              <AssignList list={list} setList={setList}/>\n          </div>\n        </div>\n      )\n    default: \n      break\n  }\n}\n\nexport default Upload\n"]},"metadata":{},"sourceType":"module"}