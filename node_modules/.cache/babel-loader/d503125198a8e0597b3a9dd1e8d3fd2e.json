{"ast":null,"code":"var _jsxFileName = \"/home/lucifer/Projects/softwares/lemty/client/src/ProtectedRoutes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Routes, Navigate, Route } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [cookies, setCookies] = useCookies(['isAuthenticated']);\n  const isAuthenticated = cookies.isAuthenticated;\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 36\n  }, this);\n};\n\n_s(ProtectedRoute, \"lryTrLk8K0tBiGIsX3uhCr3AS7k=\", false, function () {\n  return [useCookies];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/lucifer/Projects/softwares/lemty/client/src/ProtectedRoutes.js"],"names":["React","Routes","Navigate","Route","useCookies","ProtectedRoute","children","cookies","setCookies","isAuthenticated"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAiBC,QAAjB,EAA2BC,KAA3B,QAAwC,kBAAxC;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,cAAc,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,UAAU,CAAC,CAAC,iBAAD,CAAD,CAAxC;AACA,QAAMK,eAAe,GAAGF,OAAO,CAACE,eAAhC;AAEA,SACIA,eAAe,GAAGH,QAAH,gBAAc,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADjC;AAGD,CAPD;;GAAMD,c;UAC0BD,U;;;KAD1BC,c;AASN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport {Routes,  Navigate, Route } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\n\nconst ProtectedRoute = ({children}) => {\n  const [cookies, setCookies] = useCookies(['isAuthenticated'])\n  const isAuthenticated = cookies.isAuthenticated\n\n  return (\n      isAuthenticated ? children : <Navigate to='/login'/>\n  )\n}\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}