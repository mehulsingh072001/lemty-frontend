{"ast":null,"code":"var _jsxFileName = \"/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Prospects/Prospects.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useNavigate, Outlet, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Prospects() {\n  _s();\n\n  let location = useLocation();\n  let navigate = useNavigate();\n  useEffect(() => {\n    getUrl();\n  }, [location]);\n\n  function getUrl() {\n    if (location.pathname === \"/prospects\") {\n      navigate('/prospects/home');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Prospects, \"fPjCxODVr6jVvib6o2c9VLE4s84=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Prospects;\nexport default Prospects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prospects\");","map":{"version":3,"sources":["/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Prospects/Prospects.js"],"names":["useEffect","useNavigate","Outlet","useLocation","Prospects","location","navigate","getUrl","pathname"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,WAAR,EAAqBC,MAArB,EAA6BC,WAA7B,QAA+C,kBAA/C;;;AAEA,SAASC,SAAT,GAAoB;AAAA;;AAClB,MAAIC,QAAQ,GAAGF,WAAW,EAA1B;AACA,MAAIG,QAAQ,GAAGL,WAAW,EAA1B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,MAAM;AACP,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT;;AAIA,WAASE,MAAT,GAAkB;AAChB,QAAGF,QAAQ,CAACG,QAAT,KAAsB,YAAzB,EAAsC;AACpCF,MAAAA,QAAQ,CAAC,iBAAD,CAAR;AACD;AACF;;AACD,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAjBQF,S;UACQD,W,EACAF,W;;;KAFRG,S;AAmBT,eAAeA,SAAf","sourcesContent":["import {useEffect} from \"react\"\nimport {useNavigate, Outlet, useLocation} from \"react-router-dom\"\n\nfunction Prospects(){\n  let location = useLocation()\n  let navigate = useNavigate()\n  useEffect(() => {\n    getUrl()\n  }, [location])\n\n  function getUrl() {\n    if(location.pathname === \"/prospects\"){\n      navigate('/prospects/home')\n    }\n  }\n  return (\n    <div>\n      <Outlet/>\n    </div>\n  )\n}\n\nexport default Prospects\n"]},"metadata":{},"sourceType":"module"}