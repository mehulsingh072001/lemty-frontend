{"ast":null,"code":"var _jsxFileName = \"/home/lucifer/Projects/softwares/lemty/client/src/GlobalProvider.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/createContext([]);\nexport const GlobalProvider = props => {\n  _s();\n\n  const [add, setAdd] = useState(false);\n  const [campaignProspectAdd, setCampaignProspectAdd] = useState(false);\n  const [newP, setNewP] = useState(false);\n  const [newUpload, setNewUpload] = useState(false);\n  const [list, setList] = useState(false);\n  const [addExistingModal, setAddExistingModal] = useState(false);\n  const [userDataModal, setUserDataModal] = useState(true);\n  const [editorOpen, setEditorOpen] = useState(false);\n  const [campaignId, setCampaignId] = useState(\"\");\n  const [addStep, setAddStep] = useState([]);\n  const [campaignData, setCampaignData] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [editor, setEditor] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [reviewModal, setReviewModal] = useState(false);\n  const [previewModal, setPreviewModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n      value: {\n        addProspect: [add, setAdd],\n        addProspectCampaign: [campaignProspectAdd, setCampaignProspectAdd],\n        addExistingProspect: [addExistingModal, setAddExistingModal],\n        newProspect: [newP, setNewP],\n        createList: [list, setList],\n        editor: [editorOpen, setEditorOpen],\n        step: [addStep, setAddStep],\n        campaign: [campaignData, setCampaignData],\n        userData: [userDataModal, setUserDataModal],\n        upload: [newUpload, setNewUpload],\n        selectedCampaign: [campaignId, setCampaignId],\n        updateCampaign: [modal, setModal],\n        emailEditor: [editor, setEditor],\n        campaignBar: [progress, setProgress],\n        review: [reviewModal, setReviewModal]\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalProvider, \"KiXZbKGVP8hMQjk4eLjb9WEQbsg=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/home/lucifer/Projects/softwares/lemty/client/src/GlobalProvider.js"],"names":["createContext","useState","GlobalContext","GlobalProvider","props","add","setAdd","campaignProspectAdd","setCampaignProspectAdd","newP","setNewP","newUpload","setNewUpload","list","setList","addExistingModal","setAddExistingModal","userDataModal","setUserDataModal","editorOpen","setEditorOpen","campaignId","setCampaignId","addStep","setAddStep","campaignData","setCampaignData","modal","setModal","editor","setEditor","progress","setProgress","reviewModal","setReviewModal","previewModal","setPreviewModal","addProspect","addProspectCampaign","addExistingProspect","newProspect","createList","step","campaign","userData","upload","selectedCampaign","updateCampaign","emailEditor","campaignBar","review","children"],"mappings":"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","sourcesContent":["import {createContext, useState} from \"react\"\n\nexport const GlobalContext = createContext([])\n\nexport const GlobalProvider = (props) => {\n  const [add, setAdd] = useState(false)\n  const [campaignProspectAdd, setCampaignProspectAdd] = useState(false)\n  const [newP, setNewP] = useState(false)\n  const [newUpload, setNewUpload] = useState(false)\n  const [list, setList] = useState(false)\n  const [addExistingModal, setAddExistingModal] = useState(false)\n  const [userDataModal, setUserDataModal] = useState(true)\n  const [editorOpen, setEditorOpen] = useState(false)\n  const [campaignId, setCampaignId] = useState(\"\")\n  const [addStep, setAddStep] = useState([])\n  const [campaignData, setCampaignData] = useState([])\n  const [modal, setModal] = useState(false)\n  const [editor, setEditor] = useState(false)\n  const [progress, setProgress] = useState(0)\n  const [reviewModal, setReviewModal] = useState(false)\n  const [previewModal, setPreviewModal] = useState(false)\n\n  return(\n    <div>\n      <GlobalContext.Provider \n        value={{\n          addProspect:[add, setAdd], \n          addProspectCampaign: [campaignProspectAdd, setCampaignProspectAdd], \n          addExistingProspect: [addExistingModal, setAddExistingModal], \n          newProspect: [newP, setNewP], \n          createList:[list, setList], \n          editor:[editorOpen, setEditorOpen], \n          step:[addStep, setAddStep], \n          campaign:[campaignData, setCampaignData], \n          userData:[userDataModal, setUserDataModal],\n          upload:[newUpload, setNewUpload], \n          selectedCampaign: [campaignId, setCampaignId], \n          updateCampaign: [modal, setModal],\n          emailEditor: [editor, setEditor],\n          campaignBar: [progress, setProgress],\n          review: [reviewModal, setReviewModal]\n        }}\n      >\n        {props.children}\n      </GlobalContext.Provider>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}