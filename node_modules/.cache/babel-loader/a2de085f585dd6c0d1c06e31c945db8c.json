{"ast":null,"code":"var _jsxFileName = \"/home/lucifer/Projects/softwares/lemty/client/src/Pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\nimport { GlobalContext } from '../GlobalProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  let navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [cookies, setCookies] = useCookies([\"userId\", \"auth\", \"isAuthenticated\"]);\n  const {\n    userData\n  } = useContext(GlobalContext);\n  const [userDataModal, setUserDataModal] = userData;\n\n  const handleCookie = (token, id) => {\n    setCookies(\"auth\", token, {\n      path: \"/\"\n    });\n    setCookies(\"userId\", id, {\n      path: \"/\"\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = 'http://localhost:8080';\n    const data = {\n      name: name,\n      username: username,\n      password: password\n    };\n    const headers = {\n      'Accept': 'application/json'\n    };\n\n    try {\n      //make axios post request\n      await axios.post(`${url}/api/register`, data, headers).then(res => {\n        if (res.status === 201) {\n          navigate('/login'); // handleCookie(res.data.token, res.data.user.id);\n          // setCookies(\"isAuthenticated\", true, {path: \"/\"});\n          // navigate('/dashboard')\n          // setUserDataModal(true)\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"registration__form\",\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setName(e.target.value),\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"cta-register\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"dLdzxzBrLK3uO/+dQLpSVubBkf8=\", false, function () {\n  return [useNavigate, useCookies];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/lucifer/Projects/softwares/lemty/client/src/Pages/Register.js"],"names":["useState","useContext","useCookies","useNavigate","axios","GlobalContext","Register","navigate","name","setName","username","setUsername","password","setPassword","cookies","setCookies","userData","userDataModal","setUserDataModal","handleCookie","token","id","path","handleSubmit","e","preventDefault","url","data","headers","post","then","res","status","err","console","log","target","value"],"mappings":"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","sourcesContent":["import { useState, useContext } from 'react'\nimport { useCookies } from 'react-cookie'\nimport { useNavigate } from 'react-router'\nimport axios from 'axios'\nimport {GlobalContext} from '../GlobalProvider'\n\nfunction Register(){\n  let navigate = useNavigate()\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [cookies, setCookies] = useCookies([\"userId\",\"auth\", \"isAuthenticated\"])\n  const {userData} = useContext(GlobalContext)\n  const [userDataModal, setUserDataModal] = userData\n\n  const handleCookie = (token, id) => {\n    setCookies(\"auth\", token, {path: \"/\"})\n    setCookies(\"userId\", id, {path: \"/\"})\n  }\n\n  const handleSubmit = async(e) => {\n    e.preventDefault()\n    const url = 'http://localhost:8080'\n    const data = {\n      name: name,\n      username: username,\n      password: password,\n    }\n\n    const headers = {\n      'Accept': 'application/json'\n    }\n    try {\n      //make axios post request\n      await axios.post(`${url}/api/register`, data, headers).then((res) => {\n        if(res.status===201){\n          navigate('/login')\n          // handleCookie(res.data.token, res.data.user.id);\n          // setCookies(\"isAuthenticated\", true, {path: \"/\"});\n          // navigate('/dashboard')\n          // setUserDataModal(true)\n        }\n      })\n    }\n\n    catch(err){\n      console.log(err)\n    }\n  }\n\n  return(\n    <div>\n      <div className=\"registration\">\n        <form className=\"registration__form\" action=\"\">\n          <input type=\"text\" onChange={(e) => setName(e.target.value)} placeholder=\"Name\"/>\n          <input type=\"email\" onChange={(e) => setUsername(e.target.value)} placeholder=\"Username\" />\n          <input type=\"password\" onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\"/>\n          <button onClick={handleSubmit} className=\"cta-register\">Sign Up</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}