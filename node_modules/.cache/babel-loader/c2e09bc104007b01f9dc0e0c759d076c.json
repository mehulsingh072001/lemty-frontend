{"ast":null,"code":"var _jsxFileName = \"/home/lucifer/Projects/softwares/lemty/client/src/Components/CampaignComponents/StepSettings/Window.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { GlobalContext } from \"../../../GlobalProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Window = _ref => {\n  _s();\n\n  let {\n    toggler,\n    index,\n    startHour,\n    setStartHour,\n    endHour,\n    setEndHour\n  } = _ref;\n  const {\n    step\n  } = useContext(GlobalContext);\n  const hours = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"window\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"window__heading\",\n      children: \"Send Emails between these hours\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"window__form\",\n      action: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"window__form--container\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setStartHour(e.target.value),\n          children: hours.map((d, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            selected: d == startHour ? \"selected\" : \"\",\n            value: d,\n            children: d\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"to\",\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setEndHour(e.target.value),\n          children: [hours.map((d, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            selected: d == endHour ? \"selected\" : \"\",\n            value: d,\n            children: d\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"Midnight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Window, \"AnhL8Ufz080sG5nhqpHVi52rgEs=\");\n\n_c = Window;\nexport default Window;\n\nvar _c;\n\n$RefreshReg$(_c, \"Window\");","map":{"version":3,"sources":["/home/lucifer/Projects/softwares/lemty/client/src/Components/CampaignComponents/StepSettings/Window.js"],"names":["useState","useEffect","useContext","GlobalContext","Window","toggler","index","startHour","setStartHour","endHour","setEndHour","step","hours","e","target","value","map","d","i"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,SAASC,aAAT,QAA8B,yBAA9B;;;AAEA,MAAMC,MAAM,GAAG,QAAoE;AAAA;;AAAA,MAAnE;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA,YAA5B;AAA0CC,IAAAA,OAA1C;AAAmDC,IAAAA;AAAnD,GAAmE;AACjF,QAAM;AAACC,IAAAA;AAAD,MAAST,UAAU,CAACC,aAAD,CAAzB;AACA,QAAMS,KAAK,GAAG,CACZ,CADY,EACV,CADU,EACR,CADQ,EACN,CADM,EACJ,CADI,EACF,CADE,EACA,CADA,EACE,CADF,EACI,CADJ,EACM,EADN,EACS,EADT,EACY,EADZ,EACe,EADf,EACkB,EADlB,EACqB,EADrB,EACwB,EADxB,EAC2B,EAD3B,EAC8B,EAD9B,EACiC,EADjC,EACoC,EADpC,EACuC,EADvC,EAC0C,EAD1C,EAC6C,EAD7C,CAAd;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,MAAM,EAAC,EAAtC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACE;AAAQ,UAAA,QAAQ,EAAGC,CAAD,IAAOL,YAAY,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAArC;AAAA,oBAEIH,KAAK,CAACI,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACN;AACA,YAAA,QAAQ,EAAED,CAAC,IAAIV,SAAL,GAAiB,UAAjB,GAA8B,EADxC;AAC4C,YAAA,KAAK,EAAEU,CADnD;AAAA,sBACuDA;AADvD,aAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAQ,UAAA,QAAQ,EAAGL,CAAD,IAAOH,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnC;AAAA,qBAEIH,KAAK,CAACI,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACN;AACA,YAAA,QAAQ,EAAED,CAAC,IAAIR,OAAL,GAAe,UAAf,GAA4B,EADtC;AAC0C,YAAA,KAAK,EAAEQ,CADjD;AAAA,sBACqDA;AADrD,aAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,kBADJ,CAFJ,eAOE;AAAQ,YAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAlCD;;GAAMd,M;;KAAAA,M;AAoCN,eAAeA,MAAf","sourcesContent":["import {useState, useEffect, useContext} from \"react\"\nimport { GlobalContext } from \"../../../GlobalProvider\"\n\nconst Window = ({toggler, index, startHour, setStartHour, endHour, setEndHour}) => {\n  const {step} = useContext(GlobalContext)\n  const hours = [\n    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\n  ]\n\n\n  return(\n    <div className=\"window\">\n      <h2 className=\"window__heading\">Send Emails between these hours</h2>\n      <form className=\"window__form\" action=\"\">\n          <div className=\"window__form--container\">\n            <select onChange={(e) => setStartHour(e.target.value)}>\n              {\n                hours.map((d, i) => \n                    <option key={i}\n                    selected={d == startHour ? \"selected\" : \"\"} value={d}>{d}</option>\n                )\n              }\n            </select>\n            <h1 className=\"to\">To</h1>\n            <select onChange={(e) => setEndHour(e.target.value)}>\n              {\n                hours.map((d, i) => \n                    <option key={i} \n                    selected={d == endHour ? \"selected\" : \"\"} value={d}>{d}</option>\n                )\n              }\n              <option value=\"0\">Midnight</option>\n            </select>\n          </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Window\n"]},"metadata":{},"sourceType":"module"}