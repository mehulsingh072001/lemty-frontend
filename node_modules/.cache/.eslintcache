[{"/home/lucifer/Projects/softwares/lemty-frontend/src/index.js":"1","/home/lucifer/Projects/softwares/lemty-frontend/src/App.js":"2","/home/lucifer/Projects/softwares/lemty-frontend/src/ProtectedRoutes.js":"3","/home/lucifer/Projects/softwares/lemty-frontend/src/GlobalProvider.js":"4","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Login.js":"5","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Register.js":"6","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Dashboard.js":"7","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Redirect.js":"8","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/UnsubscribeConfirmation.js":"9","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Campaigns.js":"10","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/CampaignHome.js":"11","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Create.js":"12","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Settings/Settings.js":"13","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Prospects/Prospects.js":"14","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Settings/ProspectSettings.js":"15","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Settings/DeliveribilitySettings.js":"16","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Settings/EmailSettings.js":"17","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Prospects/ProspectsHome.js":"18","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Settings/UserSettings.js":"19","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Single/SingleCampaignSteps.js":"20","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Single/SingleCampaignInbox.js":"21","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Single/SingleCampaignProspects.js":"22","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Single/SingleCampaignSettings.js":"23","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Single/SingleCampaignEmails.js":"24","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Single/SingleCampaignReports.js":"25","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignStatus.js":"26","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ToggleSwitch.js":"27","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/Sidebars/CampaignSidebar.js":"28","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/Sidebars/ProspectSeidebar.js":"29","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/Sidebars/AppSidebar.js":"30","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/EditEditor.js":"31","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/EmailEditor.js":"32","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/Topbars/AppTopbar.js":"33","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignSettings.js":"34","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/InputModals/UpdateCampaignName.js":"35","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/AddProspect.js":"36","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignSteps.js":"37","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/InputModals/CreateList.js":"38","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/SingleCampaignNavbar.js":"39","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/AddToCampaign.js":"40","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignAdd.js":"41","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Add.js":"42","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/SingleProspect/SingleProspect.js":"43","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/StepSettings/Modal.js":"44","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/PlaceholderFields.js":"45","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/DelayDropdown.js":"46","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/ProgressBar.js":"47","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignReview.js":"48","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignProspectsExisting.js":"49","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/SingleProspect/BasicFields.js":"50","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/New.js":"51","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignProspectNew.js":"52","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/SingleProspect/AdditionalFields.js":"53","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/StepSettings/Bar.js":"54","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/StepSettings/Window.js":"55","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/StepSettings/Days.js":"56","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/StepSettings/WhichEmail.js":"57","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignUpload.js":"58","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Upload/Upload.js":"59","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/Preview.js":"60","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignDragAndDrop.js":"61","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignUploadNav.js":"62","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignUploadModalBar.js":"63","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignMapColumns.js":"64","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignAssignList.js":"65","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Upload/DragAndDrop.js":"66","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Upload/UploadNav.js":"67","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Upload/UploadModalBar.js":"68","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Upload/AssignList.js":"69","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Upload/MapColumns.js":"70"},{"size":292,"mtime":1653088285545,"results":"71","hashOfConfig":"72"},{"size":3590,"mtime":1653088285532,"results":"73","hashOfConfig":"72"},{"size":322,"mtime":1653088285545,"results":"74","hashOfConfig":"72"},{"size":1931,"mtime":1653088285542,"results":"75","hashOfConfig":"72"},{"size":1353,"mtime":1653088285542,"results":"76","hashOfConfig":"72"},{"size":1338,"mtime":1653088285545,"results":"77","hashOfConfig":"72"},{"size":1683,"mtime":1653088285542,"results":"78","hashOfConfig":"72"},{"size":884,"mtime":1653088285542,"results":"79","hashOfConfig":"72"},{"size":968,"mtime":1653088285545,"results":"80","hashOfConfig":"72"},{"size":422,"mtime":1653088285545,"results":"81","hashOfConfig":"72"},{"size":6136,"mtime":1653088285545,"results":"82","hashOfConfig":"72"},{"size":2826,"mtime":1653088285545,"results":"83","hashOfConfig":"72"},{"size":3303,"mtime":1653088285545,"results":"84","hashOfConfig":"72"},{"size":424,"mtime":1653088285545,"results":"85","hashOfConfig":"72"},{"size":1142,"mtime":1653088285545,"results":"86","hashOfConfig":"72"},{"size":4054,"mtime":1653088285545,"results":"87","hashOfConfig":"72"},{"size":14464,"mtime":1653088285545,"results":"88","hashOfConfig":"72"},{"size":15945,"mtime":1653088285545,"results":"89","hashOfConfig":"72"},{"size":6020,"mtime":1653088285545,"results":"90","hashOfConfig":"72"},{"size":9353,"mtime":1653088285545,"results":"91","hashOfConfig":"72"},{"size":1239,"mtime":1653088285545,"results":"92","hashOfConfig":"72"},{"size":16303,"mtime":1653194327319,"results":"93","hashOfConfig":"72"},{"size":5784,"mtime":1653088285545,"results":"94","hashOfConfig":"72"},{"size":1246,"mtime":1653088285545,"results":"95","hashOfConfig":"72"},{"size":7604,"mtime":1653088285545,"results":"96","hashOfConfig":"72"},{"size":1827,"mtime":1653088285535,"results":"97","hashOfConfig":"72"},{"size":312,"mtime":1653088285535,"results":"98","hashOfConfig":"72"},{"size":651,"mtime":1653088285542,"results":"99","hashOfConfig":"72"},{"size":1817,"mtime":1653088285542,"results":"100","hashOfConfig":"72"},{"size":1047,"mtime":1653088285542,"results":"101","hashOfConfig":"72"},{"size":2762,"mtime":1653088285535,"results":"102","hashOfConfig":"72"},{"size":3539,"mtime":1653088285535,"results":"103","hashOfConfig":"72"},{"size":2259,"mtime":1653088285542,"results":"104","hashOfConfig":"72"},{"size":5271,"mtime":1653088285535,"results":"105","hashOfConfig":"72"},{"size":1269,"mtime":1653088285542,"results":"106","hashOfConfig":"72"},{"size":1019,"mtime":1653088285532,"results":"107","hashOfConfig":"72"},{"size":9558,"mtime":1653090176048,"results":"108","hashOfConfig":"72"},{"size":1186,"mtime":1653088285535,"results":"109","hashOfConfig":"72"},{"size":1378,"mtime":1653088285535,"results":"110","hashOfConfig":"72"},{"size":2339,"mtime":1653088285542,"results":"111","hashOfConfig":"72"},{"size":2074,"mtime":1653088285535,"results":"112","hashOfConfig":"72"},{"size":1378,"mtime":1653088285542,"results":"113","hashOfConfig":"72"},{"size":3517,"mtime":1653088285542,"results":"114","hashOfConfig":"72"},{"size":4222,"mtime":1653088285535,"results":"115","hashOfConfig":"72"},{"size":5069,"mtime":1653088285542,"results":"116","hashOfConfig":"72"},{"size":2249,"mtime":1653088285535,"results":"117","hashOfConfig":"72"},{"size":1799,"mtime":1653088285535,"results":"118","hashOfConfig":"72"},{"size":2759,"mtime":1653088285535,"results":"119","hashOfConfig":"72"},{"size":7055,"mtime":1653088285535,"results":"120","hashOfConfig":"72"},{"size":1074,"mtime":1653088285542,"results":"121","hashOfConfig":"72"},{"size":7807,"mtime":1653088285542,"results":"122","hashOfConfig":"72"},{"size":8326,"mtime":1653088285535,"results":"123","hashOfConfig":"72"},{"size":1917,"mtime":1653088285542,"results":"124","hashOfConfig":"72"},{"size":1215,"mtime":1653088285535,"results":"125","hashOfConfig":"72"},{"size":1298,"mtime":1653088285535,"results":"126","hashOfConfig":"72"},{"size":2314,"mtime":1653088285535,"results":"127","hashOfConfig":"72"},{"size":1315,"mtime":1653088285535,"results":"128","hashOfConfig":"72"},{"size":5279,"mtime":1653088285535,"results":"129","hashOfConfig":"72"},{"size":4729,"mtime":1653088285542,"results":"130","hashOfConfig":"72"},{"size":6894,"mtime":1653088285535,"results":"131","hashOfConfig":"72"},{"size":245,"mtime":1653088285535,"results":"132","hashOfConfig":"72"},{"size":1037,"mtime":1653088285535,"results":"133","hashOfConfig":"72"},{"size":681,"mtime":1653088285535,"results":"134","hashOfConfig":"72"},{"size":13271,"mtime":1653088285535,"results":"135","hashOfConfig":"72"},{"size":1072,"mtime":1653088285535,"results":"136","hashOfConfig":"72"},{"size":245,"mtime":1653088285542,"results":"137","hashOfConfig":"72"},{"size":1037,"mtime":1653088285542,"results":"138","hashOfConfig":"72"},{"size":681,"mtime":1653088285542,"results":"139","hashOfConfig":"72"},{"size":1072,"mtime":1653088285542,"results":"140","hashOfConfig":"72"},{"size":13271,"mtime":1653088285542,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},"1nlzk5u",{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"145"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"145"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"145"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"145"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"145"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"145"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"145"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"145"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"145"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"145"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"145"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"145"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"145"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"145"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"145"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"145"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"145"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"145"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"145"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"145"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"145"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"145"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"145"},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"145"},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"145"},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"145"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"145"},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"145"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"145"},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"145"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"145"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"145"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"145"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"145"},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"145"},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"145"},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},"/home/lucifer/Projects/softwares/lemty-frontend/src/index.js",[],[],["389","390"],"/home/lucifer/Projects/softwares/lemty-frontend/src/App.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/ProtectedRoutes.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/GlobalProvider.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Login.js",["391"],[],"import { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nfunction Login() {\n  let navigate = useNavigate()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleSubmit = async(e) => {\n    e.preventDefault()\n    const url = 'http://localhost:8080'\n    const data = {\n      username: username,\n      password: password\n    }\n    //make axios post request\n    await axios.post(`/login`, data, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then((res) => {\n      if(res.status === 200){\n\n        navigate('/')\n      }\n    })\n    }\n\n  return (\n    <div>\n      <div className=\"login\">\n        <form className=\"login__form\">\n          <input type=\"text\" onChange={(e) => setUsername(e.target.value)} placeholder=\"Username or Email\"/>\n          <input type=\"password\" onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" />\n          <button onClick={handleSubmit} className=\"login__form--submit\">Login</button>\n        </form>\n\n        <div className=\"seprator\">\n          <div className=\"line\"></div>\n          <p>Or</p>\n          <div className=\"line\"></div>\n        </div>\n\n        <Link to=\"/register\" className=\"btn-register\">Register</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Login;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Register.js",["392","393","394","395"],[],"import { useState, useContext } from 'react'\nimport { useNavigate } from 'react-router'\nimport axios from 'axios'\nimport {GlobalContext} from '../GlobalProvider'\n\nfunction Register() {\n  let navigate = useNavigate()\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const {userData} = useContext(GlobalContext)\n  const [userDataModal, setUserDataModal] = userData\n\n\n  const handleSubmit = async(e) => {\n    e.preventDefault()\n    const data = {\n      username: username,\n      password: password,\n    }\n\n    const headers = {\n      'Accept': 'application/json'\n    }\n    try {\n      await axios.post('/register', data, headers).then((res) => {\n        if(res.status===201){\n          navigate('/login')\n        }\n      })\n    }\n\n    catch(err){\n      console.log(err)\n    }\n  }\n\n  return(\n    <div>\n      <div className=\"registration\">\n        <form className=\"registration__form\" action=\"\">\n          <input type=\"email\" onChange={(e) => setUsername(e.target.value)} placeholder=\"Username\" />\n          <input type=\"password\" onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\"/>\n          <button onClick={handleSubmit} className=\"btn-register\">Sign Up</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Register;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Dashboard.js",["396","397","398"],[],"import AppSidebar from \"../Components/Sidebars/AppSidebar\"\nimport AppTopbar from \"../Components/Topbars/AppTopbar\"\nimport {useState, useEffect, useContext} from \"react\"\nimport { GlobalContext } from \"../GlobalProvider\"\n\nfunction Dashboard(){\n  const {userData} = useContext(GlobalContext)\n\n  return(\n    <div className=\"dashboard\">\n      <AppSidebar/>\n      <AppTopbar title={\"Dashboard\"}/>\n      <div className=\"dashboard__container\">\n\n        <div className=\"dashboard__container--left\">\n          <div className=\"dashboard__container--left--data\">\n            <div className=\"topbar\">\n              <h2 className=\"heading-2\">Email Sent</h2>\n              <div className=\"sent-number heading-1\">0</div>\n            </div>\n\n            <div className=\"data\">\n            </div>\n          </div>\n\n          <div className=\"dashboard__container--left--data\">\n            <div className=\"topbar\">\n              <h2 className=\"heading-2\">Email Scheduled</h2>\n              <div className=\"sent-number heading-1\">0</div>\n            </div>\n\n            <div className=\"data\">\n              <div className=\"data__item\">\n                <p className=\"copy__para--medium\">Today</p>\n                <p className=\"heading-1 u-margin-top-small\">0</p>\n              </div>\n              <div className=\"data__item\">\n                <p className=\"copy__para--medium\">Upcoming</p>\n                <p className=\"heading-1 u-margin-top-small\">0</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"dashboard__container--right\">\n          <h1 className=\"heading-2\">Live Feed</h1>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Redirect.js",["399","400","401"],[],"import {useState, useEffect, useContext} from \"react\"\nimport Cookies from \"universal-cookie\"\nimport axios from \"axios\"\nimport { GlobalContext } from \"../GlobalProvider\"\n\nconst cookies = new Cookies();\nfunction Redirect() {\n  useEffect(() => {\n    submit()\n  }, [])\n  const {userData} = useContext(GlobalContext)\n  const [userDataModal, setUserDataModal] = userData\n\n  const submit = () => {\n    var url_string = window.location.href\n    var url = new URL(url_string)\n    var code = url.searchParams.get('code')\n    // console.log(code)\n    axios.get(\"gmail/get-token/\"+cookies.get(\"userId\")+\"?code=\"+code).then((res) => {\n      console.log(res)\n      if(res.status === 200){\n        setUserDataModal(false)\n        window.close()\n      }\n    })\n        // window.close()\n  }\n  return(\n    <div>\n      <button onClick={submit}>Submit</button>\n    </div>\n  )\n}\n\nexport default Redirect\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/UnsubscribeConfirmation.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Campaigns.js",["402"],[],"import {useEffect} from \"react\"\nimport {useNavigate, Outlet, useLocation} from \"react-router-dom\"\n\nfunction Campaigns(){\n  let location = useLocation()\n  let navigate = useNavigate()\n  useEffect(() => {\n    getUrl()\n  }, [location])\n\n  function getUrl() {\n    if(location.pathname === \"/campaigns\"){\n      navigate('/campaigns/home')\n    }\n  }\n  return (\n    <div>\n    <Outlet/>\n    </div>\n  )\n}\n\nexport default Campaigns\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/CampaignHome.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Create.js",["403","404","405"],[],"import {useState, useContext, useEffect} from 'react'\nimport CampaignSteps from '../../Components/CampaignComponents/CampaignSteps'\nimport CampaignSettings from '../../Components/CampaignComponents/CampaignSettings'\nimport AddProspect from '../../Components/CampaignComponents/AddProspect'\nimport { GlobalContext } from '../../GlobalProvider'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\nimport { useNavigate } from 'react-router'\n\n\nconst cookies = new Cookies();\nfunction Create(){\n  const navigate = useNavigate()\n  const {campaignBar, campaign, selectedCampaign, step} = useContext(GlobalContext)\n  const [progress, setProgress] = campaignBar\n  const [campaignData, setCampaignData] = campaign\n  const [campaignId, setCampaignId] = selectedCampaign\n  const [addStep, setAddStep] = step\n\n  const prevStep = () => {\n    setProgress(progress - 1)\n  }\n\n  const nextStep = () => {\n    setProgress(progress + 1)\n  }\n\n  const saveAndExitCampaign = () => {\n    const headers = {\n      'Authorization': `Bearer ${cookies.get(\"access_token\")}`\n    }\n    if(campaignId === \"\"){\n      axios.post(`/campaigns/${cookies.get(\"userId\")}`, campaignData, {headers: headers}).then((res) => {\n        if(res.status===201){\n          setAddStep([])\n          setProgress(0)\n          setCampaignId(res.data.id)\n          navigate(\"/campaigns\")\n        }\n      })\n    }\n    else {\n      axios.put(`/campaigns/${campaignId}`, campaignData, {headers: headers}).then((res) => {\n        if(res.status===200){\n          setAddStep([])\n          setProgress(0)\n          navigate(\"/campaigns\")\n        }\n      })\n    }\n  }\n\n  const saveCampaign = () => {\n    const headers = {\n      'Authorization': `Bearer ${cookies.get(\"access_token\")}`\n    }\n    if(campaignId === \"\"){\n      axios.post(`/campaigns/${cookies.get(\"userId\")}`, campaignData, {headers: headers}).then((res) => {\n        if(res.status===201){\n          setCampaignId(res.data.id)\n        }\n      })\n    }\n    else {\n      axios.put(`/campaigns/${campaignId}`, campaignData, {headers: headers}).then((res) => {\n        if(res.status===200){\n          console.log(res.data.id)\n        }\n      })\n    }\n  }\n\n\n  switch(progress){\n    case 0: \n      return(\n        <CampaignSteps nextStep={nextStep} prevStep={prevStep} saveExit={saveAndExitCampaign} saveCampaign={saveCampaign} addStep={addStep} setAddStep={setAddStep}/>\n      )\n    case 1:\n      return(\n        <CampaignSettings \n          nextStep={nextStep} \n          prevStep={prevStep} \n          saveExit={saveAndExitCampaign} \n          saveCampaign={saveCampaign}\n          addStep={addStep} \n          setAddStep={setAddStep}\n        />\n      )\n    case 2:\n      return(\n        <AddProspect nextStep={nextStep} prevStep={prevStep}/>\n      )\n    default:\n      return progress\n  }\n}\n\nexport default Create\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Settings/Settings.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Prospects/Prospects.js",["406"],[],"import {useEffect} from \"react\"\nimport {useNavigate, Outlet, useLocation} from \"react-router-dom\"\n\nfunction Prospects(){\n  let location = useLocation()\n  let navigate = useNavigate()\n  useEffect(() => {\n    getUrl()\n  }, [location])\n\n  function getUrl() {\n    if(location.pathname === \"/prospects\"){\n      navigate('/prospects/home')\n    }\n  }\n  return (\n    <div>\n      <Outlet/>\n    </div>\n  )\n}\n\nexport default Prospects\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Settings/ProspectSettings.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Settings/DeliveribilitySettings.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Settings/EmailSettings.js",["407","408","409","410","411"],[],"import AppSidebar from \"../../Components/Sidebars/AppSidebar\";\nimport AppTopbar from \"../../Components/Topbars/AppTopbar\"\nimport ToggleSwitch from \"../../Components/ToggleSwitch\";\nimport { NavLink } from \"react-router-dom\";\nimport {useNavigate} from \"react-router-dom\"\nimport axios from \"axios\"\nimport { useEffect, useState } from \"react\";\nimport Cookies from 'universal-cookie';\nimport { Editor } from '@tinymce/tinymce-react'; \n\nconst cookies = new Cookies()\nfunction EmailSettings() {\n  let navigate = useNavigate()\n  const userId = cookies.get(\"userId\")\n  const [creds, setCreds] = useState([])\n  const [displayName, setDisplayName] = useState(\"\")\n  const [signature, setSignature] = useState(\"\")\n  const [getSignature, setGetSignature] = useState([])\n  const [unsubBody, setUnsubBody] = useState(\"\")\n  const [getUnsub, setGetUnsub] = useState([])\n\n  useEffect(() => {\n    getCreds();\n    getSignatureServer();\n    getUnsubServer();\n  }, [])\n\n  const headers = {\n      \"Authorization\": `Bearer ${cookies.get('access_token')}`\n  }\n\n  const getCreds = () => {\n    const params = {\n      userId: userId\n    }\n    axios.get(`/creds/`, {\n      params : params,\n      headers: headers\n    }).then((res) => {\n      setCreds(res.data)\n    })\n  }\n\n  const getSignatureServer = () => {\n    axios.get(\"/signature\", {\n      params: {\n        userId: userId\n      },\n      headers: headers\n    }).then((res) => {\n      setGetSignature(res.data)\n    })\n  }\n\n  const updateDisplayName = (credsId) => {\n    const params = {\n      credsId: credsId\n    }\n    const data = {\n      displayName: displayName\n    }\n    axios.put(\"/creds/name\", data, {\n      params: params,\n      headers: headers\n    }).then((res) => {\n      console.log(res)\n      if(res.status === 201){\n        window.location.reload()\n      }\n    })\n  }\n\n  const submitSignature = () => {\n    const params = {\n      userId: userId\n    }\n\n    const data = {\n      signature: signature\n    }\n\n    axios.post(\"/signature\", data, {\n      headers: headers,\n      params: params\n    }).then((res) => {\n      if(res.status === 201){\n        window.location.reload()\n      }\n    })\n  }\n\n  const getUnsubServer = () => {\n    axios.get(\"/unsubscribe\", {\n      params: {\n        userId: userId\n      },\n      headers: headers\n    }).then((res) => {\n      setGetUnsub(res.data)\n      console.log(res.data)\n    })\n  }\n\n\n  const updateSignature = (id) => {\n    const params = {\n      signatureId: id\n    }\n    const data = {\n      signature: signature\n    }\n    axios.put(\"/signature/update\", data, {\n      headers: headers,\n      params: params\n    }).then((res) => {\n      window.location.reload()\n    })\n  }\n\n  const deleteSignature = (id) => {\n    const params = {\n      signatureId: id\n    }\n    axios.delete(\"/signature\", {\n      params: params,\n      headers: headers\n    }).then((res) => {\n      if(res.status === 200){\n        window.location.reload()\n      }\n    })\n  }\n\n  const submitUnsubBody = () => {\n    const params = {\n      userId: userId\n    }\n    const data = {\n      body: unsubBody\n    }\n    axios.post(\"/unsubscribe\", data, {\n      headers: headers,\n      params: params\n    }).then((res) => {\n      if(res.status === 200){\n        window.location.reload()\n      }\n    })\n  }\n\n  const updateUnsub = (id) => {\n    const params = {\n      unsubId: id\n    }\n    const data = {\n      body: unsubBody\n    }\n    axios.put(\"/unsubscribe\", data, {\n      headers: headers,\n      params: params\n    }).then((res) => {\n      window.location.reload()\n    })\n  }\n\n  const deleteUnsub = (id) => {\n    const params = {\n      unsubId: id\n    }\n    axios.delete(\"/unsubscribe\", {\n      params: params,\n      headers: headers\n    }).then((res) => {\n      if(res.status === 200){\n        window.location.reload()\n      }\n    })\n  }\n\n  const deleteCred = (credsId) => {\n    const params = {\n      credsId: credsId\n    }\n    axios.delete('/creds/', {\n      params: params,\n      headers: headers\n    }).then((res) => {\n      console.log(res.data)\n      window.location.reload()\n    })\n  }\n\n  const oauthSignIn = (e) => {\n    e.preventDefault()\n    const accessType = \"access_type=offline&\";\n    const response_type = \"response_type=code&\";\n    const include_granted_scopes = \"include_granted_scopes=true&\";\n    // const scope = \"scope=https://www.googleapis.com/auth/gmail.compose&\";\n    const scopeArray = \"https://mail.google.com/ https://www.googleapis.com/auth/gmail.compose https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/gmail.settings.basic\";\n    const arrayStr = encodeURIComponent(scopeArray)\n    const scope = \"scope=\"+arrayStr+\"&\"\n    const redirect_uri = \"redirect_uri=http://localhost:3000/redirect&\";\n    const client_id = \"client_id=1087727582839-72qgrk3g3ea46kq65coo7lbgg3f5cteg.apps.googleusercontent.com&\";\n    const auth_url = \"https://accounts.google.com/o/oauth2/v2/auth?\"+scope+accessType+include_granted_scopes+response_type+redirect_uri+client_id;\n    console.log(scope)\n    var newWindow = window.open(auth_url, null, 'height=500,width=450')\n    newWindow.focus()\n  }\n\n  return(\n    <div className=\"email-settings\">\n      <AppSidebar/>\n      <AppTopbar title={\"Settings\"}/>\n      <div className=\"email-settings__container\">\n        <div className=\"email-settings__container--sidebar\">\n          <button className=\"s-back\" onClick={() => navigate(\"/settings\")}><i className=\"fas fa-chevron-left\"></i><span>Back</span></button>\n          <ul>\n            <li onClick={() => document.getElementById(\"account\").scrollIntoView()}><p className=\"copy__para--medium\">Email Account</p></li>\n            <li onClick={() => document.getElementById(\"signatures\").scrollIntoView()}><p className=\"copy__para--medium\">Signatures</p></li>\n            <li onClick={() => document.getElementById(\"unsub\").scrollIntoView()}><p className=\"copy__para--medium\">Unsubscribe Link</p></li>\n            <li onClick={() => document.getElementById(\"tracking\").scrollIntoView()}><p className=\"copy__para--medium\">Tracking</p></li>\n          </ul>\n        </div>\n\n        <div className=\"email-settings__container--content\">\n          <p className=\"path\">Settings/ email</p>\n\n          <div className=\"email-settings__container--content--card\" id=\"account\">\n            <div className=\"email-settings__container--content--card--head\">\n              <h4 className=\"heading-2\">Email account</h4>\n              <button className=\"btn-tertiary\" onClick={oauthSignIn}>+ Add an email account</button>\n            </div>\n\n            {\n              creds.length === 0 ? \n              <p className=\"copy__para--medium\">Connect the email account that you will be using for your campaigns</p>\n              :\n              creds.map(d => \n                <div key={d.id} className=\"creds__container\">\n                  <div>\n                    <h4 className=\"heading-1\">{d.email}</h4>\n                    <div className=\"row\">\n                      <input type=\"text\" defaultValue={d.displayName} onChange={(e) => setDisplayName(e.target.value)}/>\n                      <button className={`btn ${displayName === \"\" ? 'btn--disabled' : \"\"}`} onClick={() => updateDisplayName(d.id)}>Save</button>\n                    </div>\n                  </div>\n                  <button className=\"btn-delete\" onClick={() => deleteCred(d.id)}><i className=\"fas fa-trash\"></i></button>\n                </div>\n              )\n            }\n          </div>\n\n          <div className=\"email-settings__container--content--card\" id=\"signatures\">\n            <div className=\"email-settings__container--content--card--head\">\n              <h4 className=\"heading-2\">Signatures</h4>\n              {\n                getSignature.length === 0 ? \n                  <button className={`btn ${signature === \"\" ? 'btn--disabled' : \"\"}`} onClick={submitSignature}>Save</button> :\n                  getSignature.map((d, index) => \n              <button key={index} className={`cta ${signature === \"\" ? 'btn-disabled' : \"\"}`} onClick={() => updateSignature(d.id)}>Update</button>\n                  )\n              }\n            </div>\n\n            {\n              getSignature.length === 0 ? \n                <div className=\"u-margin-top-medium editor-container\">\n                  <Editor\n                    apiKey=\"fnajkiw2wcz5d1lrgsif3xicw1wdvcj4f9hmzxrngbljd9b6\"\n                    initialValue=\"\"\n                    init={{\n                      height: 200,\n                      menubar: false,\n                      plugins: [\n                        'advlist underline autolink lists link image tinydrive', \n                        'charmap print preview anchor help forecolor',\n                        'searchreplace visualblocks code emoticons link',\n                        'insertdatetime media table paste wordcount table fontselect'\n                      ],\n                      toolbar_mode: \"wrap\",\n                      toolbar:\n                        'fontselect fontsizeselect forecolor  \\\n                        | bold italic underline \\\n                        | alignleft aligncenter alignright alignjustify| \\\n                        bullist numlist outdent indent \\\n                        | table link image code \\\n                        | emoticons ',\n                      image_title: true,\n                      automatic_uploads: true,\n                      paste_data_images: true,\n                      statusbar: false,\n                      theme_advanced_toolbar_location: \"bottom\",\n                    }}\n                    onChange={(e) => setSignature(e.target.getContent())}\n                  />\n                </div>\n              :\n              getSignature.map((d, index) => \n               <div key={index}>\n                  <div className=\"u-margin-top-medium editor-container\">\n                    <Editor\n                      apiKey=\"fnajkiw2wcz5d1lrgsif3xicw1wdvcj4f9hmzxrngbljd9b6\"\n                      initialValue={d.signature}\n                      init={{\n                        height: 200,\n                        menubar: false,\n                        plugins: [\n                          'advlist underline autolink lists link image tinydrive', \n                          'charmap print preview anchor help forecolor',\n                          'searchreplace visualblocks code emoticons link',\n                          'insertdatetime media table paste wordcount table fontselect'\n                        ],\n                        toolbar_mode: \"wrap\",\n                        toolbar:\n                          'fontselect fontsizeselect forecolor  \\\n                          | bold italic underline \\\n                          | alignleft aligncenter alignright alignjustify| \\\n                          bullist numlist outdent indent \\\n                          | table link image code \\\n                          | emoticons ',\n                        image_title: true,\n                        automatic_uploads: true,\n                        paste_data_images: true,\n                        statusbar: false,\n                        theme_advanced_toolbar_location: \"bottom\",\n                      }}\n                      onChange={(e) => setSignature(e.target.getContent())}\n                    />\n                  </div>\n                  <div className=\"u-end u-margin-top-medium\">\n                    <button className=\"btn-delete\" onClick={() => deleteSignature(d.id)}>Delete Signature</button>\n                  </div>\n               </div>\n                ) \n            }\n          </div>\n\n          <div className=\"email-settings__container--content--card\" id=\"unsub\">\n            <div className=\"email-settings__container--content--card--head\">\n              <h4 className=\"heading-2\">Unsubscribe link text</h4>\n              {\n                getUnsub.length === 0 ? \n                  <button className={`btn ${unsubBody === \"\" ? 'btn--disabled' : \"\"}`} onClick={submitUnsubBody}>Save</button> :\n                  <button className={`btn ${unsubBody === \"\" ? 'btn--disabled' : \"\"}`} onClick={() => updateUnsub(getUnsub.id)}>Update</button>\n              }\n            </div>\n\n            {\n               <div>\n                  <div className=\"u-margin-top-medium editor-container\">\n                    <Editor\n                      apiKey=\"fnajkiw2wcz5d1lrgsif3xicw1wdvcj4f9hmzxrngbljd9b6\"\n                      initialValue={getUnsub.body}\n                      init={{\n                        height: 200,\n                        menubar: false,\n                        plugins: [\n                          'advlist underline autolink lists link image tinydrive', \n                          'charmap print preview anchor help forecolor',\n                          'searchreplace visualblocks code emoticons link',\n                          'insertdatetime media table paste wordcount table fontselect'\n                        ],\n                        toolbar_mode: \"wrap\",\n                        toolbar:\n                          'fontselect fontsizeselect forecolor  \\\n                          | bold italic underline \\\n                          | alignleft aligncenter alignright alignjustify| \\\n                          bullist numlist outdent indent \\\n                          | table link image code \\\n                          | emoticons ',\n                        image_title: true,\n                        automatic_uploads: true,\n                        paste_data_images: true,\n                        statusbar: false,\n                        theme_advanced_toolbar_location: \"bottom\",\n                      }}\n                      onChange={(e) => setUnsubBody(e.target.getContent())}\n                    />\n                  </div>\n                  <div className=\"u-end u-margin-top-medium\">\n                    <button className=\"btn-delete\" onClick={() => deleteUnsub(getUnsub.id)}>Delete Signature</button>\n                  </div>\n               </div>\n            }\n          </div>\n\n          <div className=\"email-settings__container--content--card\" id=\"tracking\">\n            <h4 className=\"heading-2\">Email Tracking</h4>\n            <div className=\"row\">\n              <ToggleSwitch/>\n              <p>Track Email Opens</p>\n            </div>\n            <div className=\"row\">\n              <ToggleSwitch/>\n              <p>Track Link Clicks</p>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EmailSettings;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Prospects/ProspectsHome.js",["412"],[],"import {GlobalContext} from \"../../GlobalProvider\"\nimport { useContext, useState, useEffect } from \"react\"\nimport Cookies from \"universal-cookie\"\nimport axios from \"axios\";\n\nimport AppSidebar from \"../../Components/Sidebars/AppSidebar\";\nimport AppTopbar from \"../../Components/Topbars/AppTopbar\";\nimport ProspectSidebar from \"../../Components/Sidebars/ProspectSeidebar\";\nimport CreateList from \"../../Components/InputModals/CreateList\";\nimport Add from \"../../Components/ProspectsComponents/Prospects/Add\"\nimport SingleProspect from \"../../Components/ProspectsComponents/SingleProspect/SingleProspect\";\nimport AddToCampaign from \"../../Components/ProspectsComponents/AddToCampaign\";\n\nconst cookies = new Cookies();\nfunction ProspectsHome(){\n  const {addProspect} = useContext(GlobalContext)\n  const [add, setAdd] = addProspect\n  const [showProspects, setShowProspects] = useState([])\n  const [totalElements, setTotalElements] = useState()\n  const [totalPages, setTotalPages] = useState()\n  const [pageNumber, setPageNumber] = useState(0)\n  const [pageSize, setPageSize] = useState(10)\n  const [selectedProspects, setSelectedProspects] = useState([])\n  const [singleProspect, setSingleProspect] = useState({})\n  const [prospectView, setProspectView] = useState(false)\n  const [status, setStatus] = useState(\"\")\n  const [prospectCount, setProspectCount] = useState({})\n  const [selectedList, setSelectedList] = useState({\n    name: \"all\",\n    id: \"\"\n  })\n  const [createList, setCreateList] = useState(false)\n  const [loading, setLoading] = useState(true)\n  const [addTo, setAddTo] = useState(false)\n\n  function toggleAdd(){\n    setAdd(!add)\n  }\n\n  useEffect(() => {\n    getData()\n    getProspectCounts(selectedList.name, selectedList.id)\n  }, [selectedList, pageNumber, pageSize])\n\n  const toggleProspectView = () => {\n    setProspectView(!prospectView)\n  }\n\n  function previousPage() {\n    if(pageNumber !== 0){\n      setPageNumber(pageNumber - 1)\n    }\n    else{\n    }\n  }\n\n  function nextPage() {\n    if((pageNumber + 1) === totalPages){\n      console.log(totalPages)\n    }\n    else{\n      setPageNumber(pageNumber + 1)\n    }\n  }\n\n\n  const getData = async () => {\n    const name = selectedList.name\n    const id = selectedList.id\n    setStatus(\"all\")\n    const userId = cookies.get(\"userId\")\n    if(name === \"all\"){\n      await axios.get(\"/prospects/prospect/user\", {\n        headers: {\n          \"Authorization\": `Bearer ${cookies.get('access_token')}`\n        },\n        params: {\n          userId: userId,\n          page: pageNumber,\n          size: pageSize\n        }\n      }).then((res) => {\n        if(res.data === \"\"){\n          return null;\n        }\n        else{\n          setShowProspects(res.data.prospects)\n          setTotalElements(res.data.totalElements)\n          setTotalPages(res.data.totalPages)\n        }\n        setLoading(false)\n      })\n    }\n    else{\n      await axios.get(`/prospects/prospect/${id}`, {\n        headers: {\n          \"Authorization\": `Bearer ${cookies.get('access_token')}`\n        },\n        params: {\n          page: pageNumber,\n          size: pageSize\n        }\n      }).then((res) => {\n        if(res.data === \"\"){\n          return null;\n        }\n        else{\n          setShowProspects(res.data.prospects)\n          setTotalElements(res.data.totalElements)\n          setTotalPages(res.data.totalPages)\n        }\n        setLoading(false)\n      })\n    }\n  }\n\n  const getProspectsByStatus = async (status) => {\n    setStatus(status)\n    if(selectedList.name === \"all\"){\n      const userId = cookies.get(\"userId\")\n      await axios.get(\"/prospects/prospect/user/status\", {\n          headers: {\n            \"Authorization\": `Bearer ${cookies.get('access_token')}`\n          },\n          params: {\n            userId: userId,\n            status: status,\n            page: pageNumber,\n            size: pageSize\n          }\n      }).then((res) => {\n          setShowProspects(res.data.prospects)\n          setTotalElements(res.data.totalElements)\n          setTotalPages(res.data.totalPages)\n          setLoading(false)\n      })\n    }\n    else{\n      await axios.get(`/prospects/prospect/${selectedList.id}/status`, {\n          headers: {\n            \"Authorization\": `Bearer ${cookies.get('access_token')}`\n          },\n          params: {\n            status: status,\n            page: pageNumber,\n            size: pageSize\n          }\n      }).then((res) => {\n          setShowProspects(res.data.prospects)\n          setTotalElements(res.data.totalElements)\n          setTotalPages(res.data.totalPages)\n          setLoading(false)\n      })\n    }\n  }\n\n  const getProspectCounts = async (listName, listId) => {\n    if(listName === \"all\"){\n      const userId = cookies.get(\"userId\")\n      await axios.get(`/prospects/prospect/user/${userId}/count`, {\n          headers: {\n            \"Authorization\": `Bearer ${cookies.get('access_token')}`\n          },\n      }).then((res) => {\n        setProspectCount(res.data)\n      })\n    }\n    else{\n      await axios.get(`/prospects/prospect/${listId}/count`, {\n          headers: {\n            \"Authorization\": `Bearer ${cookies.get('access_token')}`\n          },\n      }).then((res) => {\n        setProspectCount(res.data)\n      })\n    }\n  }\n\n\n  const deleteProspects = () => {\n    axios.post(\"/prospects/prospect/deleteAll\", selectedProspects, {\n        headers: {\n          \"Authorization\": `Bearer ${cookies.get('access_token')}`\n        },\n    }).then((res) => {\n      console.log(res)\n    })\n  }\n\n  function toggleCreateList(){\n    setCreateList(!createList)\n  }\n\n  const openContextMenu = () => {\n    let el = document.getElementsByClassName(\"context-menu\")[0]\n    // ReactDOM.findDOMNode(instance)\n    if(el.style.display === \"block\"){\n      el.style.display = \"none\"\n    }\n    else{\n      el.style.display = \"block\"\n    }\n  }\n\n  const handleSelectProspect = (e) => {\n    const prospectId = e.target.value\n    if(!selectedProspects.includes(prospectId)){\n      setSelectedProspects([...selectedProspects, prospectId])\n    }\n    else{\n      setSelectedProspects(selectedProspects.filter((selectedProspectsId) => {\n        return selectedProspectsId !== prospectId;\n      })\n    )\n    }\n  }\n\n  const handleSelectAllProspects = () => {\n    if(selectedProspects.length < showProspects.length){\n      setSelectedProspects(showProspects.map((d, index) => d.id))\n    }\n    else{\n      setSelectedProspects([]);\n    }\n  }\n\n  const toggleAddTo = () => {\n    setAddTo(!addTo)\n  }\n\n\n  return(\n    <div className=\"prospects\">\n      {add===true ? <Add/> : null}\n      {createList ? <CreateList toggleCreateList={toggleCreateList}/> : null}\n      {addTo ? <AddToCampaign toggleAddTo={toggleAddTo} selectedProspects={selectedProspects} getData={getData}/> : null}\n      <AppSidebar/>\n      <AppTopbar title={\"Prospects\"}/>\n      { prospectView ? <SingleProspect prospect={singleProspect} toggleProspectView={toggleProspectView}/> : null}\n        <div className=\"prospects__container\">\n          <div className=\"prospects__container--sidebar\">\n            <ProspectSidebar toggleCreateList={toggleCreateList} selectedList={selectedList} setSelectedList={setSelectedList}/>\n          </div>\n\n          <div className=\"prospects__container--content\">\n            <div className=\"toolbar\">\n              <div className=\"name\">\n                <h4>My Prospects</h4>\n              </div>\n              <div className=\"search\">\n                <input type=\"search\" placeholder=\"Search\"/>\n                <button onClick={toggleAdd} className=\"btn\">Add Prospects</button>\n              </div>\n            </div>\n\n            <div className=\"prospects__container--sorter\">\n              <div className={`prospects__container--sorter--card ${status === \"all\" ? \"active\" : \"\"}`} onClick={() => {getData(selectedList.name, selectedList.id);}}>\n                <h1 className=\"copy__para--medium\">All</h1>\n                <p className=\"heading-1\">{prospectCount.all}</p>\n              </div>\n              <div className={`prospects__container--sorter--card ${status === \"not-contacted\" ? \"active\" : \"\"}`} onClick={() => getProspectsByStatus(\"not-contacted\")}>\n                <h1 className=\"copy__para--medium\">Not Contacted</h1>\n                <p className=\"heading-1\">{prospectCount.not_contacted}</p>\n              </div>\n              <div className={`prospects__container--sorter--card ${status === \"bounced\" ? \"active\" : \"\"}`} onClick={() => getProspectsByStatus(\"bounced\")}>\n                <h1 className=\"copy__para--medium\">Bounced</h1>\n                <p className=\"heading-1\">{prospectCount.bounced}</p>\n              </div>\n              <div className={`prospects__container--sorter--card ${status === \"replied\" ? \"active\" : \"\"}`} onClick={() => getProspectsByStatus(\"replied\")}>\n                <h1 className=\"copy__para--medium\">Replied</h1>\n                <p className=\"heading-1\">{prospectCount.replied}</p>\n              </div>\n              <div className={`prospects__container--sorter--card ${status === \"unsubscribed\" ? \"active\" : \"\"}`} onClick={() => getProspectsByStatus(\"unsubscribed\")}>\n                <h1 className=\"copy__para--medium\">Unsubscribed</h1>\n                <p className=\"heading-1\">{prospectCount.unsubscribed}</p>\n              </div>\n              <div className={`prospects__container--sorter--card ${status === \"not-replied\" ? \"active\" : \"\"}`} onClick={() => getProspectsByStatus(\"not-replied\")}>\n                <h1 className=\"copy__para--medium\">Not Replied</h1>\n                <p className=\"heading-1\">{prospectCount.not_replied}</p>\n              </div>\n            </div>\n              {\n                loading ? \n                  <div className=\"prospects__container--actions loader\">\n                    <div className=\"loader-out\"></div>\n                  </div> : \n                  null\n              }\n\n            {\n              showProspects.length === 0 ? \n                <h1 className=\"prospects__container--actions\">No Data Present</h1> : \n            <>\n              <div className=\"prospects__container--actions\">\n                <div className=\"prospects__container--actions--items\">\n                  <div>\n                  <button onClick={() => toggleAddTo()} className={selectedProspects.length ===0 ? \"btn-white--disabled\" : \"btn-white\"}>Add To Campaign</button>\n                  </div>\n                  <div>\n                    <button className={selectedProspects.length ===0 ? \"btn-white--disabled\" : \"btn-white\"}>Stop Campaign</button>\n                  </div>\n                  <div>\n                    <button onClick={() => openContextMenu()} className={selectedProspects.length ===0 ? \"btn-white--disabled\" : \"btn-white\"}><i className=\"fas fa-ellipsis-v\"></i></button>\n                    <div className=\"context-menu\" style={{display: \"none\"}}>\n                      <div className=\"context-menu__item copy__para--medium\">\n                        <i className=\"fas fa-list\"></i>\n                        <p>Add To List</p>\n                      </div>\n                      <div className=\"context-menu__item copy__para--medium\">\n                        <i className=\"fas fa-tag\"></i>\n                        <p>Add Tags</p>\n                      </div>\n                      <div className=\"context-menu__item copy__para--medium\">\n                        <i className=\"fas fa-minus-circle\"></i>\n                        <p>Remove Tags</p>\n                      </div>\n                      <div className=\"context-menu__item copy__para--medium\" onClick={() => deleteProspects()}>\n                        <i className=\"fas fa-trash\"></i>\n                        <p>Delete</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"prospects__container--actions--page\">\n                    <p className=\"copy__para--medium\">Showing</p>\n                    <select onChange={(e) => setPageSize(e.target.value)}>\n                      <option defaultValue={pageSize === 10 ? 10 : \"\"} value=\"10\">10</option>\n                      <option defaultValue={pageSize === 20 ? 20 : \"\"} value=\"20\">20</option>\n                      <option defaultValue={pageSize === 30 ? 30 : \"\"} value=\"30\">30</option>\n                      <option defaultValue={pageSize === 50 ? 50 : \"\"} value=\"50\">50</option>\n                      <option defaultValue={pageSize === 100 ? 10 : \"\"} value=\"100\">100</option>\n                    </select>\n                    <p className=\"copy__para--medium\">/{totalElements}</p>\n                </div>\n              </div>\n\n              <div className=\"table__container\">\n                <table className=\"data\">\n                  <thead>\n                    <tr className=\"row1\">\n                      <th><input className=\"col-head \" type=\"checkbox\" checked={selectedProspects.length === showProspects.length} onChange={handleSelectAllProspects}/></th>\n                      <th className=\"col-head heading-5\">Prospect</th>\n                      <th className=\"col-head heading-5\">Contact</th>\n                      <th className=\"col-head heading-5\">Company</th>\n                      <th className=\"col-head heading-5\">List</th>\n                      <th className=\"col-head heading-5\">Tags</th>\n                      <th className=\"col-head heading-5\">Status</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {\n                      showProspects.map(d => \n                      <tr key={d.id}>\n                        <td><input type=\"checkbox\" value={d.id} checked={selectedProspects.includes(d.id)} onChange={handleSelectProspect}/></td>\n                        <td><div className=\"col-data\" onClick={() => {setSingleProspect(d); toggleProspectView()}}><span className=\"badge\">{d.firstName.charAt(0).toUpperCase()}</span><p className=\" prospectName copy__para--medium\">{d.firstName} {d.lastName}</p></div></td>\n                        <td className=\"col-data\">\n                          <button className={d.prospectEmail !== null ? \"col-data btn-contact\" : \"col-data btn-contact--disabled\"}>\n                            <i className=\"fas fa-envelope\"></i>\n                              {/* {d.prospectEmail} */}\n                          </button>\n                          <button className={d.prospectLinkedinUrl !== null ? \"col-data btn-contact\" : \"col-data btn-contact--disabled\"}>\n                              <i className=\"fab fa-linkedin-in\"></i>\n                              {d.prospectLinkedinUrl}\n                          </button>\n                          <button className={d.prospectLinkedinUrl !== null ? \"col-data btn-contact\" : \"col-data btn-contact--disabled\"}>\n                              {d.prospectMobileNumber}\n                          </button>\n                        </td>\n                        <td><p className=\"col-data copy__para--medium\">{d.prospectCompany !== null ? d.prospectCompany : \"-\"}</p></td>\n                        <td><p className=\"col-data copy__para--medium\">Campaign 1</p></td>\n                        <td><p className=\"col-data copy__para--medium\">-</p></td>\n                        <td><p className=\"col-data copy__para--medium\">{d.status}</p></td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n\n              <div className=\"add-from-existing__container--page-number\">\n                <div className=\"add-from-existing__container--page-number--prev copy__para--medium\" onClick={() => previousPage()}>Prev</div>\n                  <p className=\"add-from-existing__container--page-number--number copy__para--medium\">{pageNumber + 1}</p>\n                  <div className=\"add-from-existing__container--page-number--next copy__para--medium\" onClick={() => nextPage()}>Next</div>\n              </div>\n          </>\n            }\n          </div>\n        </div>\n   </div>\n  )\n}\n\nexport default ProspectsHome\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Settings/UserSettings.js",["413","414"],[],"import {useNavigate} from \"react-router-dom\"\nimport AppSidebar from \"../../Components/Sidebars/AppSidebar\";\nimport AppTopbar from \"../../Components/Topbars/AppTopbar\"\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\"\n\nconst cookies = new Cookies()\nfunction UserSettings(){\n  let navigate = useNavigate()\n  const [selectedTimezone, selectTimezone] = useState('America/Los_Angeles')\n  const [user, setUser] = useState({})\n  const [firstName, setFirstName] = useState(Object.keys(user).length !== 0 ? user.firstName : \"\")\n  const [lastName, setLastName] = useState(Object.keys(user).length !== 0 ? user.lastName : \"\")\n  const [timezones, setTimezones] = useState([\n    'America/Los_Angeles',\n    'Africa/Accra',\n    'Africa/Addis_Ababa',\n    'Africa/Algiers',\n    'Africa/Cairo',\n    'Africa/Casablanca',\n    'Africa/Dar_es_Salaam',\n    'Africa/Harare',\n    'Africa/Johannesburg',\n    'Africa/Khartoum',\n    'Africa/Kigali',\n    'Africa/Kinshasa',\n    'Africa/Lagos',\n    'Africa/Nairobi',\n    'America/Anchorage',\n    'America/Argentina/Buenos_Aires',\n    'America/Asuncion',\n    'America/Atikokan',\n    'America/Bogota',\n    'America/Caracas',\n    'America/Chicago',\n    'America/Denver',\n    'America/El_Salvador',\n    'America/Havana',\n    'America/Indiana/Indianapolis',\n    'America/La_Paz',\n    'America/Lima',\n    'America/Managua',\n    'America/Mexico_City',\n    'America/Montevideo',\n    'America/Nassau',\n    'America/New_York',\n    'America/Phoenix',\n    'America/Santiago',\n    'America/Santo_Domingo',\n    'America/Sao_Paulo',\n    'America/St_Johns',\n    'America/Tegucigalpa',\n    'America/Vancouver',\n    'America/Winnipeg',\n    'Asia/Almaty',\n    'Asia/Amman',\n    'Asia/Anadyr',\n    'Asia/Baghdad',\n    'Asia/Bangkok',\n    'Asia/Calcutta',\n    'Asia/Dhaka',\n    'Asia/Dubai',\n    'Asia/Hong_Kong',\n    'Asia/Istanbul',\n    'Asia/Jakarta',\n    'Asia/Jayapura',\n    'Asia/Jerusalem',\n    'Asia/Kabul',\n    'Asia/Karachi',\n    'Asia/Kathmandu',\n    'Asia/Kuala_Lumpur',\n    'Asia/Kuwait',\n    'Asia/Manila',\n    'Asia/Qatar',\n    'Asia/Rangoon',\n    'Asia/Riyadh',\n    'Asia/Seoul',\n    'Asia/Shanghai',\n    'Asia/Singapore',\n    'Asia/Taipei',\n    'Asia/Tashkent',\n    'Asia/Tehran',\n    'Asia/Tokyo',\n    'Atlantic/Reykjavik',\n    'Australia/Adelaide',\n    'Australia/Darwin',\n    'Australia/Melbourne',\n    'Australia/Perth',\n    'Australia/Sydney',\n    'Canada/Atlantic',\n    'Europe/Amsterdam',\n    'Europe/Belgrade',\n    'Europe/Berlin',\n    'Europe/Bratislava',\n    'Europe/Brussels',\n    'Europe/Bucharest',\n    'Europe/Budapest',\n    'Europe/Copenhagen',\n    'Europe/Dublin',\n    'Europe/Helsinki',\n    'Europe/Lisbon',\n    'Europe/London',\n    'Europe/Madrid',\n    'Europe/Minsk',\n    'Europe/Moscow',\n    'Europe/Oslo',\n    'Europe/Paris',\n    'Europe/Rome',\n    'Europe/Sofia',\n    'Europe/Stockholm',\n    'Europe/Tallinn',\n    'Europe/Vienna',\n    'Europe/Warsaw',\n    'Europe/Zagreb',\n    'Europe/Zurich',\n    'Pacific/Auckland',\n    'Pacific/Fiji',\n    'Pacific/Honolulu',\n    'Pacific/Kiritimati',\n  ])\n  const Timezones = timezones.map(Timezone => Timezone)\n  const handleTimezoneChange = (e) => {\n    console.clear()\n    selectTimezone(timezones[e.target.value])\n  }\n\n  useEffect(() => {\n    getUserData()\n  }, [])\n\n  const getUserData = () => {\n    const userId = cookies.get(\"userId\")\n    axios.get(`/users/${userId}`, {\n      headers: {\n        \"Authorization\": `Bearer ${cookies.get('access_token')}`\n      }\n    }).then((res) => {\n      setUser(res.data)\n    })\n  }\n\n  const updateData = () => {\n    const data = {\n      firstName: firstName,\n      lastName: lastName,\n    }\n    axios.put(`/users/update/${cookies.get(\"userId\")}`, data, {\n      headers:{\n        \"Authorization\": `Bearer ${cookies.get(\"access_token\")}`\n      }\n    }).then((res) => {\n      if(res.status === 201){\n        getUserData()\n      }\n    })\n  }\n\n  return(\n    <div className=\"user-settings\">\n      <AppSidebar/>\n      <AppTopbar title={\"Settings\"}/>\n\n      <div className=\"user-settings__container\">\n        <div className=\"user-settings__container--sidebar\">\n          <button className=\"s-back\" onClick={() => navigate(\"/settings\")}><i className=\"fas fa-chevron-left\"></i><span>Back</span></button>\n          <ul>\n            <li onClick={() => document.getElementById(\"profile\").scrollIntoView()}><p>Profile</p></li>\n            <li onClick={() => document.getElementById(\"timezone\").scrollIntoView()}><p>Timezone</p></li>\n          </ul>\n        </div>\n\n        <div className=\"user-settings__container--content\">\n          <div className=\"user-settings__container--content--card\" id=\"profile\">\n            <h4 className=\"heading-2\">Profile</h4>\n            <div className=\"row\">\n              <div className=\"field__container\">\n                <label className=\"heading-4\" htmlFor=\"\">First name</label>\n                <input type=\"text\" onChange={(e) => setFirstName(e.target.value)} defaultValue={Object.keys(user).length !== 0 ? user.firstName : \"\"}/>\n              </div>\n              <div className=\"field__container\">\n                <label className=\"heading-4\" htmlFor=\"\">Last name</label>\n                <input type=\"text\" onChange={(e) => setLastName(e.target.value)} defaultValue={Object.keys(user).length !== 0 ? user.lastName : \"\"}/>\n              </div>\n\n              <button className=\"btn\" onClick={() => updateData()}>Save</button>\n            </div>\n            <button className=\"btn-white u-margin-top-small\">Change Password</button>\n          </div>\n\n          <div className=\"user-settings__container--content--card\" id=\"timezone\">\n            <h4>Timezone</h4>\n            <p>This timezone will be used when scheduling emails.</p>\n            <select id=\"\" name=\"\" onChange={e => handleTimezoneChange(e)}>\n              {Timezones.map((adress, key) => <option key={key} value={key}>{adress}</option>)}\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserSettings;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Single/SingleCampaignSteps.js",["415","416","417"],[],"import axios from \"axios\";\nimport AppSidebar from \"../../../Components/Sidebars/AppSidebar\";\nimport AppTopbar from \"../../../Components/Topbars/AppTopbar\"\nimport CampaignSidebar from \"../../../Components/Sidebars/CampaignSidebar\"\nimport SingleCampaignNavbar from \"../../../Components/CampaignComponents/SingleCampaignNavbar\";\nimport CampaignAdd from \"../../../Components/CampaignComponents/CampaignProspects/CampaignAdd\"\nimport {useState, useEffect} from \"react\";\nimport { useParams } from \"react-router\";\nimport Cookies from 'universal-cookie';\nimport ToggleSwitch from \"../../../Components/ToggleSwitch\";\nimport { GlobalContext } from \"../../../GlobalProvider\";\nimport { useContext } from \"react\";\nimport {createBrowserHistory} from \"history\";\nimport StepSettingsModal from \"../../../Components/CampaignComponents/StepSettings/Modal\";\nimport EditEditor from \"../../../Components/EditEditor\";\nimport EmailEditor from \"../../../Components/EmailEditor\";\n\nconst cookies = new Cookies()\nfunction SingleCampaignSteps() {\n  const { id } = useParams()\n  const {addProspectCampaign, emailEditor} = useContext(GlobalContext)\n  const [campaignProspectAdd, setCampaignProspectAdd] = addProspectCampaign\n  const [steps, setSteps] = useState([])\n  const [currentIndex, setCurrentIndex] = useState()\n  const [modalOpen, setModalOpen] = useState(false)\n  const [editEditor, setEditEditor] = useState(false) \n  const [mailIndex, setMailIndex] = useState()\n  const [edited, setEdited] = useState(false)\n  const [plainEmail, setPlainEmail] = useState(\"\")\n  const [editor, setEditor] = emailEditor\n  const [emailAdded, setEmailAdded] = useState(false)\n\n  useEffect(() => {\n    getSteps()\n  }, [])\n\n  const headers = {\n      \"Authorization\": `Bearer ${cookies.get('access_token')}`\n  }\n\n  const getSteps = () => {\n    axios.get(`/steps/${id}`, {\n      headers: headers\n    }).then((res) => {\n      setSteps(res.data)\n    })\n  }\n\n  const discard = () => {\n    getSteps()\n    setEdited(false)\n  }\n\n  const save = () => {\n    const token = cookies.get(\"access_token\")\n    const data = {\n      steps: steps\n    }\n    const params = {\n      campaignId: id\n    }\n    axios.put(`/campaigns/steps`, data, {\n      headers:{\n        \"Authorization\": `Bearer ${token}`\n      },\n      params: params\n    }).then((res) => {\n      if(res.status === 201){\n        getSteps()\n        setEdited(false)\n      }\n    })\n  }\n\n  \n  function toggleSwitch(mailIndex, stepIndex){\n    const list = [...steps];\n    // list[index].enabled = !addStep[index].enabled\n    list[stepIndex].mails[mailIndex].enabled = !list[stepIndex].mails[mailIndex].enabled\n    setSteps(list)\n  }\n\n  function toggleModal(){\n    setModalOpen(!modalOpen)\n  }\n\n  const checkr = (index) => {\n    if (steps[index].mails.length !== 0){\n    }\n    else{\n    console.log(false)}\n  }\n\n  function toggleEditor(index){\n    setEditor(!editor)\n    setCurrentIndex(index)\n  }\n\n\n  const addNewEmail = (subject, email_content) => {\n    const data = {\n      subject: subject,\n      body: email_content,\n      plainBody: plainEmail,\n      enabled: true\n    }\n    let newArr = [...steps]\n    steps[currentIndex].mails.push(data)\n    setSteps(newArr)\n    checkr(currentIndex)\n    setEmailAdded(!emailAdded)\n  }\n\n  const updateEmail = (subject, email_content) => {\n    let arr = [...steps]\n    arr[currentIndex].mails[mailIndex]['subject'] = subject\n    arr[currentIndex].mails[mailIndex]['body'] = email_content\n    arr[currentIndex].mails[mailIndex]['plainBody'] = plainEmail\n    setSteps(arr)\n  }\n\n  const addStepBetween = (index) => {\n    const list = [...steps];\n    const data = {\n      stepNumber: (index + 1) + 1,\n      day: (index + 1) + 1,\n      dayGap: (index + 1) + 1,\n      hour: 0,\n      hourGap: 0,\n      minute: 0,\n      minuteGap: 0,\n      mails: [],\n      days: [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"],\n      enabled: true\n    }\n    list.splice(index + 1, 0, data)\n    list.forEach((e, i) => {\n      e.stepNumber = i + 1\n      e.day = i + 1\n      e.dayGap = i + 1\n    })\n    setSteps(list)\n    // setDaySetter(daySetter + 1);\n    // setStepSetter(stepSetter + 1);\n  }\n\n  function removeStep(index){\n    const list = [...steps];\n    list.splice(index, 1);\n    list.forEach((e, i) => {\n      e.stepNumber = i + 1\n      e.day = i + 1\n      e.dayGap = i + 1\n    })\n    console.log(list)\n    setSteps(list);\n  }\n\n  function toggleEditEditor(index, i){\n    setEditEditor(!editEditor)\n    setCurrentIndex(index)\n    setMailIndex(i)\n  }\n  \n  return(\n    <div className=\"single-campaign\">\n      {campaignProspectAdd===true ? <CampaignAdd/> : null}\n      <AppSidebar/>\n      {editor ? <EmailEditor currentIndex={currentIndex} handleCallback={addNewEmail} setPlainEmail={setPlainEmail}/> : null}\n      {editEditor ? <EditEditor currentIndex={currentIndex} mailIndex={mailIndex} handleCallback={updateEmail} setPlainEmail={setPlainEmail} steps={steps} setEditEditor={setEditEditor}/> : null}\n      <AppTopbar title={\"Campaign\"}/>\n      <div className=\"single-campaign__container\">\n          <div className=\"single-campaign__container--sidebar\">\n            <CampaignSidebar/>\n          </div>\n          <div className=\"single-campaign__container--content\">\n            <SingleCampaignNavbar/>\n            {\n               steps.map((e, i) => \n\n             <div key={i} className=\"timeline\">\n                <div key={i} className={`single-campaign__container--content--steps ${e.enabled ? \"\" : \"step-disabled\"}`}>\n                  <div className=\"row-1\">\n                    <div className=\"row-1__left\">\n                      <h3 className=\"heading-2\">Step {e.stepNumber}, Day {e.day}</h3>\n                    </div>\n\n                    <div className=\"settings\">\n                      {\n                        e.mails.length === 0 ?\n                          null\n                          :\n                        <div className=\"row-1__right\">\n                          <div className=\"row-1__right--item\"><p className=\"copy__para--small\">Assigned to: {e.whichEmail}</p></div>\n                          <div className=\"row-1__right--item\">\n                            {\n                              e.days.map( (d, index) => \n                                <p key={index} className=\"days copy__para--small\">{d}</p>\n                             )\n                            }\n                          </div>\n\n                          <div onClick={() => {toggleModal(); setCurrentIndex(i)}} className=\"btn-tertiary row-1__right--item\"> <p>Step Settings</p></div>\n                        </div>\n                      }\n                    </div>\n                  </div>\n\n                  <div className=\"row-2\">\n                    {\n                      e.mails.length === 0 ? \n                      <div className=\"row-2__container\">\n                        <button onClick={() => toggleEditor(i)} className=\"btn-tertiary\">Add Email</button> \n                          {i === 0 \n                            ? \n                              null\n                            : \n                              <button onClick={() => removeStep(i)} className=\"btn-sec\">Remove Step</button>\n                          }\n                      </div>\n                    :\n                    <div className=\"row-2__container\">\n                        {\n                          e.mails.map((d, index) => \n                          <div key={i} className=\"email\">\n                          <ToggleSwitch enabled={steps[i].mails[index].enabled} toggleSwitch={toggleSwitch} stepIndex={i} mailIndex={index}/>\n                            <div className=\"email__info\">\n                              <p className=\"head copy__para--medium-light\">Email</p>\n                              <p onClick={() => toggleEditEditor(i, index)} className=\"copy__para--medium\">{d.subject}: {d.plainBody}</p>\n                            </div>\n                          </div>\n                         )\n                        }\n                      <div className=\"options\">\n                        {\n                          e.enabled ? null :  <button key={i} onClick={() => console.log(\"ff\")} className=\"delete\">Delete Step</button>\n                        }\n                      </div>\n                    </div>\n                    }\n                  </div>\n\n                   <div className=\"row-3\">\n                     <p className=\"btn-simple\">+A/B Test</p>\n                   </div>\n                </div>\n                {\n                  steps.length !== i + 1 ? <button onClick={() => addStepBetween(i)} className=\"btn-add--sec\"><i className=\"fas fa-plus-circle\"></i></button> \n                    : \n                    <button onClick={() => addStepBetween(i)} className=\"btn-add\"><i className=\"fas fa-plus\"></i></button>\n                }\n                </div>\n              )\n            }\n            {\n              edited ? \n            <div class=\"save-discard\">\n              <button onClick={() => discard()} className=\"btn-sec\">Discard</button>\n              <button onClick={() => save()} className=\"btn\">Save</button>\n            </div>\n              : \n                null\n            }\n          </div>\n      </div>\n      { modalOpen ? <StepSettingsModal toggler={toggleModal} index={currentIndex} addStep={steps} setEdited={setEdited} />: null}\n    </div>\n  )\n}\n\nexport default SingleCampaignSteps;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Single/SingleCampaignInbox.js",["418","419"],[],"import axios from \"axios\";\n\nimport AppSidebar from \"../../../Components/Sidebars/AppSidebar\";\nimport AppTopbar from \"../../../Components/Topbars/AppTopbar\"\n\nimport CampaignSidebar from \"../../../Components/Sidebars/CampaignSidebar\"\nimport SingleCampaignNavbar from \"../../../Components/CampaignComponents/SingleCampaignNavbar\";\nimport CampaignAdd from \"../../../Components/CampaignComponents/CampaignProspects/CampaignAdd\"\n\nimport {GlobalContext} from \"../../../GlobalProvider\"\nimport { useContext } from \"react\";\n\nfunction SingleCampaignInbox() {\n  const {addProspectCampaign} = useContext(GlobalContext)\n  const [campaignProspectAdd, setCampaignProspectAdd] = addProspectCampaign\n  return(\n    <div className=\"single-campaign\">\n      {campaignProspectAdd===true ? <CampaignAdd/> : console.log('null')}\n      <AppSidebar/>\n      <AppTopbar title={\"Campaign\"}/>\n      <div className=\"single-campaign__container\">\n          <div className=\"single-campaign__container--sidebar\">\n            <CampaignSidebar/>\n          </div>\n          <div className=\"single-campaign__container--content\">\n            <SingleCampaignNavbar/>\n            <h1>Settings</h1>\n          </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SingleCampaignInbox;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Single/SingleCampaignProspects.js",["420","421","422","423","424","425"],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Single/SingleCampaignSettings.js",["426"],[],"import AppSidebar from \"../../../Components/Sidebars/AppSidebar\";\nimport AppTopbar from \"../../../Components/Topbars/AppTopbar\"\nimport axios from \"axios\";\n\nimport CampaignSidebar from \"../../../Components/Sidebars/CampaignSidebar\"\nimport SingleCampaignNavbar from \"../../../Components/CampaignComponents/SingleCampaignNavbar\";\nimport CampaignAdd from \"../../../Components/CampaignComponents/CampaignProspects/CampaignAdd\"\nimport ToggleSwitch from \"../../../Components/ToggleSwitch\";\n\nimport {GlobalContext} from \"../../../GlobalProvider\"\nimport { useContext, useState, useEffect } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { useParams } from \"react-router\";\n\nconst cookies = new Cookies()\nfunction SingleCampaignSettings() {\n  const {addProspectCampaign} = useContext(GlobalContext)\n  const [campaignProspectAdd] = addProspectCampaign\n  const { id } = useParams()\n  const [campaign, setCampaign] = useState({})\n  const timezones = [\n    'America/Los_Angeles',\n    'Africa/Accra',\n    'Africa/Addis_Ababa',\n    'Africa/Algiers',\n    'Africa/Cairo',\n    'Africa/Casablanca',\n    'Africa/Dar_es_Salaam',\n    'Africa/Harare',\n    'Africa/Johannesburg',\n    'Africa/Khartoum',\n    'Africa/Kigali',\n    'Africa/Kinshasa',\n    'Africa/Lagos',\n    'Africa/Nairobi',\n    'America/Anchorage',\n    'America/Argentina/Buenos_Aires',\n    'America/Asuncion',\n    'America/Atikokan',\n    'America/Bogota',\n    'America/Caracas',\n    'America/Chicago',\n    'America/Denver',\n    'America/El_Salvador',\n    'America/Havana',\n    'America/Indiana/Indianapolis',\n    'America/La_Paz',\n    'America/Lima',\n    'America/Managua',\n    'America/Mexico_City',\n    'America/Montevideo',\n    'America/Nassau',\n    'America/New_York',\n    'America/Phoenix',\n    'America/Santiago',\n    'America/Santo_Domingo',\n    'America/Sao_Paulo',\n    'America/St_Johns',\n    'America/Tegucigalpa',\n    'America/Vancouver',\n    'America/Winnipeg',\n    'Asia/Almaty',\n    'Asia/Amman',\n    'Asia/Anadyr',\n    'Asia/Baghdad',\n    'Asia/Bangkok',\n    'Asia/Calcutta',\n    'Asia/Dhaka',\n    'Asia/Dubai',\n    'Asia/Hong_Kong',\n    'Asia/Istanbul',\n    'Asia/Jakarta',\n    'Asia/Jayapura',\n    'Asia/Jerusalem',\n    'Asia/Kabul',\n    'Asia/Karachi',\n    'Asia/Kathmandu',\n    'Asia/Kuala_Lumpur',\n    'Asia/Kuwait',\n    'Asia/Manila',\n    'Asia/Qatar',\n    'Asia/Rangoon',\n    'Asia/Riyadh',\n    'Asia/Seoul',\n    'Asia/Shanghai',\n    'Asia/Singapore',\n    'Asia/Taipei',\n    'Asia/Tashkent',\n    'Asia/Tehran',\n    'Asia/Tokyo',\n    'Atlantic/Reykjavik',\n    'Australia/Adelaide',\n    'Australia/Darwin',\n    'Australia/Melbourne',\n    'Australia/Perth',\n    'Australia/Sydney',\n    'Canada/Atlantic',\n    'Europe/Amsterdam',\n    'Europe/Belgrade',\n    'Europe/Berlin',\n    'Europe/Bratislava',\n    'Europe/Brussels',\n    'Europe/Bucharest',\n    'Europe/Budapest',\n    'Europe/Copenhagen',\n    'Europe/Dublin',\n    'Europe/Helsinki',\n    'Europe/Lisbon',\n    'Europe/London',\n    'Europe/Madrid',\n    'Europe/Minsk',\n    'Europe/Moscow',\n    'Europe/Oslo',\n    'Europe/Paris',\n    'Europe/Rome',\n    'Europe/Sofia',\n    'Europe/Stockholm',\n    'Europe/Tallinn',\n    'Europe/Vienna',\n    'Europe/Warsaw',\n    'Europe/Zagreb',\n    'Europe/Zurich',\n    'Pacific/Auckland',\n    'Pacific/Fiji',\n    'Pacific/Honolulu',\n    'Pacific/Kiritimati',\n  ]\n\n  const Timezones = timezones.map(Timezone => Timezone)\n\n  const headers = {\n      \"Authorization\": `Bearer ${cookies.get('access_token')}`\n  }\n\n  useEffect(() => {\n    getCampaignSettings()\n  }, [])\n\n  const getCampaignSettings = () => {\n    axios.get(`/campaigns/single/${id}`, {\n      headers: headers\n    }).then((res) => {\n      setCampaign(res.data)\n    })\n  }\n\n  const toggleSwitch = () => {\n    setCampaign({...campaign, campaignStop: !campaign.campaignStop})\n  }\n\n  return(\n    <div className=\"single-campaign\">\n      {campaignProspectAdd===true ? <CampaignAdd/> : null}\n      <AppSidebar/>\n      <AppTopbar title={\"Campaign\"}/>\n      <div className=\"single-campaign__container\">\n          <div className=\"single-campaign__container--sidebar\">\n            <CampaignSidebar/>\n          </div>\n          <div className=\"single-campaign__container--content\">\n            <SingleCampaignNavbar/>\n            <div className=\"single-campaign__container--content__settings\">\n              <div className=\"single-campaign__container--content__settings--item\">\n                <div>\n                  <h4 className=\"heading-4\">Stop Campaign On Reply</h4>\n                  <p className=\"copy__para--small u-margin-top-small\">Stop follow up emails when a Prospect replies.</p>\n                </div>\n                <ToggleSwitch enabled={campaign.campaignStop} toggleSwitch={toggleSwitch}/>\n              </div>\n\n              <div className=\"single-campaign__container--content__settings--item\">\n                <div>\n                  <h4 className=\"heading-4\">Set Time Zone</h4>\n                  <p className=\"copy__para--small u-margin-top-small\">Delivery windows used in this Cadence will follow this time zone.</p>\n                </div>\n                <select value={campaign.timezone}>\n                  {Timezones.map((adress, key) => <option key={key} value={adress}>{adress}</option>)}\n                </select>\n              </div>\n\n              <div className=\"single-campaign__container--content__settings--item\">\n                <div>\n                  <h4 className=\"heading-4\">Daily Email Limit</h4>\n                  <p className=\"copy__para--small u-margin-top-small\">Maximum number of emails to be sent in a day</p>\n                </div>\n                <input type=\"number\" defaultValue={campaign.dailyLimit}/>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SingleCampaignSettings;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Single/SingleCampaignEmails.js",["427","428","429","430","431"],[],"import axios from \"axios\";\n\nimport AppSidebar from \"../../../Components/Sidebars/AppSidebar\";\nimport AppTopbar from \"../../../Components/Topbars/AppTopbar\"\n\nimport CampaignSidebar from \"../../../Components/Sidebars/CampaignSidebar\"\nimport SingleCampaignNavbar from \"../../../Components/CampaignComponents/SingleCampaignNavbar\";\nimport CampaignAdd from \"../../../Components/CampaignComponents/CampaignProspects/CampaignAdd\"\n\nimport {GlobalContext} from \"../../../GlobalProvider\"\nimport { useContext } from \"react\";\n\nfunction SingleCampaignEmails() {\n  const {addProspect, newProspect, upload, addProspectCampaign} = useContext(GlobalContext)\n  const [campaignProspectAdd, setCampaignProspectAdd] = addProspectCampaign\n\n  return(\n    <div className=\"single-campaign\">\n      {campaignProspectAdd===true ? <CampaignAdd/> : console.log('null')}\n      <AppSidebar/>\n      <AppTopbar title={\"Campaign\"}/>\n      <div className=\"single-campaign__container\">\n          <div className=\"single-campaign__container--sidebar\">\n            <CampaignSidebar/>\n          </div>\n          <div className=\"single-campaign__container--content\">\n            <SingleCampaignNavbar/>\n          </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SingleCampaignEmails;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Pages/Campaign/Single/SingleCampaignReports.js",["432","433","434","435","436"],[],"import axios from \"axios\";\n\nimport AppSidebar from \"../../../Components/Sidebars/AppSidebar\";\nimport AppTopbar from \"../../../Components/Topbars/AppTopbar\"\n\nimport CampaignSidebar from \"../../../Components/Sidebars/CampaignSidebar\"\nimport SingleCampaignNavbar from \"../../../Components/CampaignComponents/SingleCampaignNavbar\";\nimport CampaignAdd from \"../../../Components/CampaignComponents/CampaignProspects/CampaignAdd\"\nimport ToggleSwitch from \"../../../Components/ToggleSwitch\";\n\nimport {GlobalContext} from \"../../../GlobalProvider\"\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies()\nfunction SingleCampaignReports() {\n  const {addProspect, newProspect, upload, addProspectCampaign} = useContext(GlobalContext)\n  const [campaignProspectAdd, setCampaignProspectAdd] = addProspectCampaign\n  const [overview, setOverview] = useState({})\n  const [stepMetrics, setStepMetrics] = useState([])\n  const { id } = useParams()\n\n  useEffect(() => {\n    getOverviewData()\n    getStepMetrics()\n  }, [])\n\n  const headers = {\n      \"Authorization\": `Bearer ${cookies.get('access_token')}`\n  }\n\n  const getOverviewData = () => {\n    axios.get(`/reports/overview`, {\n      headers: headers,\n      params: {\n        campaignId: id\n      }\n    }).then((res) => {\n      if(res.status === 200){\n        setOverview(res.data)\n      }\n    })\n  }\n\n  const getStepMetrics = () => {\n    axios.get(`/reports/steps`, {\n      headers: headers,\n      params: {\n        campaignId: id\n      }\n    }).then((res) => {\n      if(res.status === 200){\n        setStepMetrics(res.data)\n      }\n    })\n  }\n\n  return(\n    <div className=\"single-campaign\">\n      {campaignProspectAdd===true ? <CampaignAdd/> : null}\n      <AppSidebar/>\n      <AppTopbar title={\"Campaign\"}/>\n      <div className=\"single-campaign__container\">\n          <div className=\"single-campaign__container--sidebar\">\n            <CampaignSidebar/>\n          </div>\n          <div className=\"single-campaign__container--content\">\n            <SingleCampaignNavbar/>\n            <div className=\"reports\">\n              <section className=\"reports__filter\">\n                <button className=\"btn-transparent\">All Prospects<i className=\"fas fa-caret-down\"></i></button>\n                <button className=\"btn-plain\">Prospects Added: All Time</button>\n              </section>\n\n              <section className=\"reports__overview\">\n                <h1 className=\"heading-1\">Overview</h1>\n                <div className=\"reports__overview--data\">\n                  <div className=\"reports__overview--data--prospects\">\n                    <div className=\"prospects-number heading-1\">{overview.totalProspects}</div>\n                    <p className=\"heading-4\">Total Prospects</p>\n                  </div>\n\n                  <div className=\"reports__overview--data--items\">\n                    <div className=\"item\">\n                      <h1 className=\"heading-1\">{overview.inCampaign}</h1>\n                      <p className=\"heading-4\">In Campaign</p>\n                    </div>\n                    <div className=\"item\">\n                      <h1 className=\"heading-1\">{overview.completedNoReply}</h1>\n                      <p className=\"heading-4\">Completed - No Reply</p>\n                    </div>\n                    <div className=\"item\">\n                      <h1 className=\"heading-1\">{overview.stopped}</h1>\n                      <p className=\"heading-4\">Stopped</p>\n                    </div>\n                    <div className=\"item\">\n                      <h1 className=\"heading-1\">{overview.unsubscribed}</h1>\n                      <p className=\"heading-4\">Unsubscribed</p>\n                    </div>\n                    <div className=\"item\">\n                      <h1 className=\"heading-1\">{overview.bounced}</h1>\n                      <p className=\"heading-4\">Bounced</p>\n                    </div>\n                    <div className=\"item\">\n                      <h1 className=\"heading-1\">{overview.opened}</h1>\n                      <p className=\"heading-4\">Opened</p>\n                    </div>\n                    <div className=\"item\">\n                      <h1 className=\"heading-1\">{overview.replied}</h1>\n                      <p className=\"heading-4\">Replied</p>\n                    </div>\n                    <div className=\"item\">\n                      <h1 className=\"heading-1\">{overview.clicked}</h1>\n                      <p className=\"heading-4\">Clicked</p>\n                    </div>\n                  </div>\n                </div>\n              </section>\n\n              <section className=\"reports__metrics\">\n                <div className=\"reports__metrics--header\">\n                  <h1 className=\"heading-1\">Stepwise Metrics</h1>\n                  <div className=\"reports__metrics--header--actions\">\n                    <p className=\"heading-4\"><ToggleSwitch/> View A/B test reports</p>\n                    <button className=\"btn\">Download</button>\n                  </div>\n                </div>\n\n                {\n                  stepMetrics.map((d, i) => \n                <div className=\"reports__metrics--data\">\n                  <div className=\"info\">\n                    <h1 className=\"heading-2\"><i class=\"fas fa-envelope\"></i> Step {d.stepNumber}</h1>\n                    <div>\n                      <p className=\"heading-3\">{d.emails}</p>\n                      <p className=\"heading-3\">Email(s)</p>\n                    </div>\n                  </div>\n                  <div className=\"metrics\">\n                    <div className=\"metrics__card\">\n                      <div className=\"metrics__card--top\">\n                        <p className=\"copy__para--medium\">{d.opens} Opens</p>\n                        <i class=\"fas fa-eye\"></i>\n                      </div>\n                      <div className=\"metrics__card--progress\">\n                        <p>Percentage</p>\n                      </div>\n                      <div className=\"metrics__card--percentage\">\n                        <p className=\"copy__para--medium\">0%</p>\n                      </div>\n                    </div>\n\n                    <div className=\"metrics__card\">\n                      <div className=\"metrics__card--top\">\n                        <p className=\"copy__para--medium\">{d.clicks} Clicks</p>\n                        <i class=\"fas fa-hand-pointer\"></i>\n                      </div>\n                      <div className=\"metrics__card--progress\">\n                        <p>Percentage</p>\n                      </div>\n                      <div className=\"metrics__card--percentage\">\n                        <p className=\"copy__para--medium\">0%</p>\n                      </div>\n                    </div>\n\n                    <div className=\"metrics__card\">\n                      <div className=\"metrics__card--top\">\n                        <p className=\"copy__para--medium\">{d.replies} Replies</p>\n                        <i class=\"fas fa-reply\"></i>\n                      </div>\n                      <div className=\"metrics__card--progress\">\n                        <p>Percentage</p>\n                      </div>\n                      <div className=\"metrics__card--percentage\">\n                        <p className=\"copy__para--medium\">0%</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                   )\n                }\n              </section>\n            </div>\n          </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SingleCampaignReports;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignStatus.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ToggleSwitch.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/Sidebars/CampaignSidebar.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/Sidebars/ProspectSeidebar.js",["437"],[],"import {NavLink} from \"react-router-dom\"\nimport axios from \"axios\"\nimport {useState, useEffect} from \"react\"\n\nimport Cookies from \"universal-cookie\"\n\nconst cookies = new Cookies()\nfunction ProspectSidebar({toggleCreateList, selectedList, setSelectedList}){\n\n  useEffect(() => {\n    getListData()\n  }, [])\n\n  const [lists, setLists] = useState([])\n\n  const getListData = async () => {\n    const userId = cookies.get(\"userId\")\n    await axios.get(`/prospects/prospect_lists/list?userId=${userId}`, {\n      headers: {\n        \"Authorization\": `Bearer ${cookies.get('access_token')}`\n      }\n    }).then((res) => {\n      setLists(res.data)\n    })\n  }\n  return(\n    <div className=\"prospect-sidebar\">\n      <div className=\"prospect-sidebar__container\">\n        <div className=\"prospect-sidebar__container--sidebar\">\n\n          <input className=\"prospect-sidebar__container--sidebar--search\" type=\"search\" placeholder=\"Search\"/>\n\n          <div className=\"header\">\n            <h6>ALL LISTS</h6>\n            <button className=\"btn-tertiary\" onClick={() => toggleCreateList()}>Create List</button>\n          </div>\n          <ul className=\"prospect-sidebar__container--sidebar__links\">\n            <li className={`prospect-sidebar__container--sidebar__links--link ${selectedList.name === \"all\" ? \"active\" : \"\"}`} onClick={() => setSelectedList({name: \"all\", id: \"\"})} ><button>All Prospects</button></li>\n            {\n              lists.map((d, i) => \n                        <li key={i} className={`prospect-sidebar__container--sidebar__links--link ${selectedList.name === d.name ? \"active\" : \"\"}`} onClick={() => setSelectedList({name: d.name, id: d.id})} ><button>{d.name}</button></li>\n                       )\n            }\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProspectSidebar\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/Sidebars/AppSidebar.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/EditEditor.js",["438","439","440"],[],"import { useContext, useState } from \"react\"\nimport { GlobalContext } from \"../GlobalProvider\"\nimport { Editor } from \"@tinymce/tinymce-react\"\n\nfunction EditEditor(props) {\n  const [subject, setSubject] = useState(props.steps[props.currentIndex].mails[props.mailIndex]['subject'])\n  const [emailBody, setEmailBody] = useState(\"\")\n\n  const handleEditorChange = (e) => {\n    props.setPlainEmail(e.target.getContent({format: \"text\"}))\n    setEmailBody(e.target.getContent())\n    // console.log(e.target.getContent())\n  }\n\n  const toggleEditor = () => {\n    props.setEditEditor(false)\n  }\n\n  const lp = () => {\n    props.handleCallback(subject, emailBody)\n    toggleEditor()\n  }\n\n\n  return(\n    <div className=\"editor\">\n      <div className=\"editor__modal\">\n        <div className=\"editor__modal--row-1\">\n          <h2 className=\"heading-1\">Add Email</h2>\n          <button onClick={toggleEditor}>&times;</button>\n        </div>\n\n        <div className=\"editor__modal--row-2\">\n          <p className=\"copy__para--medium\">Subject</p>\n          <input className=\"copy__para--medium\" defaultValue={props.steps[props.currentIndex].mails[props.mailIndex]['subject']} onChange={(e) => setSubject(e.target.value)} type=\"text\"/>\n          <p className=\"copy__para--medium placeholder\">Add Placeholder</p>\n        </div>\n\n        <div className=\"editor__modal--row-3\">\n          <Editor\n            apiKey=\"fnajkiw2wcz5d1lrgsif3xicw1wdvcj4f9hmzxrngbljd9b6\"\n            initialValue={props.steps[props.currentIndex].mails[props.mailIndex]['body']}\n            init={{\n              height: 800,\n              menubar: false,\n              plugins: [\n                'advlist underline autolink lists link image tinydrive', \n                'charmap print preview anchor help forecolor',\n                'searchreplace visualblocks code emoticons link',\n                'insertdatetime media table paste wordcount table fontselect'\n              ],\n              toolbar_mode: \"wrap\",\n              toolbar:\n                'fontselect fontsizeselect forecolor  \\\n                | bold italic underline \\\n                | alignleft aligncenter alignright alignjustify| \\\n                bullist numlist outdent indent \\\n                | table link image code \\\n                | emoticons ',\n              image_title: true,\n              automatic_uploads: true,\n              paste_data_images: true,\n              statusbar: false,\n              theme_advanced_toolbar_location: \"bottom\",\n            }}\n            onChange={(e) => handleEditorChange(e)}\n          />\n        </div>\n\n        <div className=\"editor__modal--row-4\">\n          <button onClick={lp} className=\"btn\">Add Email</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EditEditor;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/EmailEditor.js",["441"],[],"import { useContext, useRef, useState } from \"react\"\nimport { GlobalContext } from \"../GlobalProvider\"\nimport { Editor } from \"@tinymce/tinymce-react\"\nimport PlaceholderFields from \"./PlaceholderFields\"\n\nfunction EmailEditor(props) {\n  const [subject, setSubject] = useState(\"\")\n  const [emailBody, setEmailBody] = useState(\"\")\n  const {emailEditor} = useContext(GlobalContext)\n  const [editor, setEditor] = emailEditor\n  const [placeholderModal, setPlaceholderModal] = useState(false)\n  const [toPlace, setToPlace] = useState(\"\")\n  const edito = useRef(null);\n\n  const handleEditorChange = (e) => {\n    props.setPlainEmail(e.target.getContent({format: \"text\"}))\n    setEmailBody(e.target.getContent())\n  }\n\n  const toggleEditor = () => {\n    setEditor(!editor)\n  }\n\n  const lp = () => {\n    props.handleCallback(subject, emailBody)\n    toggleEditor()\n  }\n\n  const toggleSubjectPlaceholderModal = () => {\n    setToPlace(\"subject\")\n    setPlaceholderModal(!placeholderModal)\n  }\n  const togglePlaceholderModal = () => {\n    setToPlace(\"\")\n    setPlaceholderModal(!placeholderModal)\n  }\n\n  return(\n    <div className=\"editor\">\n      {placeholderModal ? <PlaceholderFields id={\"subject\"} toPlace={toPlace} togglePlaceholderModal={togglePlaceholderModal} toggleSubjectPlaceholderModal={toggleSubjectPlaceholderModal}/> : null}\n      <div className=\"editor__modal\">\n        <div className=\"editor__modal--row-1\">\n          <h2 className=\"heading-1\">Add Email</h2>\n          <button onClick={toggleEditor}>&times;</button>\n        </div>\n\n        <div className=\"editor__modal--row-2\">\n          <p className=\"copy__para--medium\">Subject</p>\n          <input id=\"subject\" className=\"copy__para--medium\" onChange={(e) => setSubject(e.target.value)} type=\"text\"/>\n          <p className=\"copy__para--medium placeholder\" onClick={toggleSubjectPlaceholderModal}>Add Placeholder</p>\n        </div>\n\n        <div className=\"editor__modal--row-3\">\n          <Editor\n            ref={edito}\n            apiKey=\"fnajkiw2wcz5d1lrgsif3xicw1wdvcj4f9hmzxrngbljd9b6\"\n            initialValue=\"\"\n            init={{\n              height: 800,\n              menubar: false,\n              plugins: [\n                'advlist underline autolink lists link image tinydrive', \n                'charmap print preview anchor help forecolor',\n                'searchreplace visualblocks code emoticons link',\n                'insertdatetime media table paste wordcount table fontselect'\n              ],\n              toolbar_mode: \"wrap\",\n              toolbar:\n                'fontselect fontsizeselect forecolor  \\\n                | bold italic underline \\\n                | alignleft aligncenter alignright alignjustify| \\\n                bullist numlist outdent indent \\\n                | table link image code \\\n                | emoticons | placeholderBtn ',\n              image_title: true,\n              automatic_uploads: true,\n              paste_data_images: true,\n              statusbar: false,\n              theme_advanced_toolbar_location: \"bottom\",\n              setup: function(editor){\n                editor.ui.registry.addButton('placeholderBtn', {\n                  text: \"Placeholder\",\n                  onAction: togglePlaceholderModal\n              })\n              },\n            }}\n            onChange={handleEditorChange}\n          />\n        </div>\n\n        <div className=\"editor__modal--row-4\">\n          <button onClick={lp} className=\"btn\">Add Email</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EmailEditor;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/Topbars/AppTopbar.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignSettings.js",["442"],[],"import ProgressBar from \"./ProgressBar\"\nimport AppSidebar from \"../Sidebars/AppSidebar\"\nimport AppTopbar from \"../Topbars/AppTopbar\"\nimport {useContext, useEffect, useState} from \"react\"\nimport ToggleSwitch from \"../ToggleSwitch\"\nimport {GlobalContext} from \"../../GlobalProvider\"\n\nconst CampaignSettings = (props) => {\n  const {campaign} = useContext(GlobalContext)\n  const [selectedTimezone] = useState('America/Los_Angeles')\n  const [stop, setStop] = useState(true)\n  const [campaignData, setCampaignData] = campaign\n  const [limit] = useState(100)\n  const [campaignName] = useState(\"\")\n  const [timezones] = useState([\n    'America/Los_Angeles',\n    'Africa/Accra',\n    'Africa/Addis_Ababa',\n    'Africa/Algiers',\n    'Africa/Cairo',\n    'Africa/Casablanca',\n    'Africa/Dar_es_Salaam',\n    'Africa/Harare',\n    'Africa/Johannesburg',\n    'Africa/Khartoum',\n    'Africa/Kigali',\n    'Africa/Kinshasa',\n    'Africa/Lagos',\n    'Africa/Nairobi',\n    'America/Anchorage',\n    'America/Argentina/Buenos_Aires',\n    'America/Asuncion',\n    'America/Atikokan',\n    'America/Bogota',\n    'America/Caracas',\n    'America/Chicago',\n    'America/Denver',\n    'America/El_Salvador',\n    'America/Havana',\n    'America/Indiana/Indianapolis',\n    'America/La_Paz',\n    'America/Lima',\n    'America/Managua',\n    'America/Mexico_City',\n    'America/Montevideo',\n    'America/Nassau',\n    'America/New_York',\n    'America/Phoenix',\n    'America/Santiago',\n    'America/Santo_Domingo',\n    'America/Sao_Paulo',\n    'America/St_Johns',\n    'America/Tegucigalpa',\n    'America/Vancouver',\n    'America/Winnipeg',\n    'Asia/Almaty',\n    'Asia/Amman',\n    'Asia/Anadyr',\n    'Asia/Baghdad',\n    'Asia/Bangkok',\n    'Asia/Calcutta',\n    'Asia/Dhaka',\n    'Asia/Dubai',\n    'Asia/Hong_Kong',\n    'Asia/Istanbul',\n    'Asia/Jakarta',\n    'Asia/Jayapura',\n    'Asia/Jerusalem',\n    'Asia/Kabul',\n    'Asia/Karachi',\n    'Asia/Kathmandu',\n    'Asia/Kolkata',\n    'Asia/Kuala_Lumpur',\n    'Asia/Kuwait',\n    'Asia/Manila',\n    'Asia/Qatar',\n    'Asia/Rangoon',\n    'Asia/Riyadh',\n    'Asia/Seoul',\n    'Asia/Shanghai',\n    'Asia/Singapore',\n    'Asia/Taipei',\n    'Asia/Tashkent',\n    'Asia/Tehran',\n    'Asia/Tokyo',\n    'Atlantic/Reykjavik',\n    'Australia/Adelaide',\n    'Australia/Darwin',\n    'Australia/Melbourne',\n    'Australia/Perth',\n    'Australia/Sydney',\n    'Canada/Atlantic',\n    'Europe/Amsterdam',\n    'Europe/Belgrade',\n    'Europe/Berlin',\n    'Europe/Bratislava',\n    'Europe/Brussels',\n    'Europe/Bucharest',\n    'Europe/Budapest',\n    'Europe/Copenhagen',\n    'Europe/Dublin',\n    'Europe/Helsinki',\n    'Europe/Lisbon',\n    'Europe/London',\n    'Europe/Madrid',\n    'Europe/Minsk',\n    'Europe/Moscow',\n    'Europe/Oslo',\n    'Europe/Paris',\n    'Europe/Rome',\n    'Europe/Sofia',\n    'Europe/Stockholm',\n    'Europe/Tallinn',\n    'Europe/Vienna',\n    'Europe/Warsaw',\n    'Europe/Zagreb',\n    'Europe/Zurich',\n    'Pacific/Auckland',\n    'Pacific/Fiji',\n    'Pacific/Honolulu',\n    'Pacific/Kiritimati',\n  ])\n\n  useEffect(() => {\n    handleChange()\n  }, [])\n\n  const Timezones = timezones.map(Timezone => Timezone)\n\n  function toggleSwitch(){\n    setStop(!stop)\n    setCampaignData({...campaignData, campaignStop: !stop})\n  }\n\n\n  const handleChange = () => {\n    setCampaignData({...campaignData, campaign_name: campaignName, campaignStop: stop, dailyLimit: limit, timezone: selectedTimezone})\n  }\n\n  return(\n    <div className=\"campaign-settings\">\n      <AppSidebar/>\n      <AppTopbar title={\"Campaigns\"}/>\n      <div className=\"campaign-create__container\">\n        <ProgressBar saveExit={props.saveExit} saveCampaign={props.saveCampaign} handleChange={handleChange} prevStep={props.prevStep} nextStep={props.nextStep} step={props.step}/>\n        <div className=\"campaign-settings__container--name\">\n          <p className=\"u-settings-title u-margin-bottom-small heading-4-light\">Cadence Name</p>\n          <input type=\"text\" name=\"name\" value={campaignData.campaign_name} required onChange={(e) => setCampaignData({...campaignData, campaign_name: e.target.value})}/>\n        </div>\n\n        <div className=\"campaign-settings__container--settings\">\n          <p className=\"u-settings-title u-margin-bottom-small heading-4-light\">Cadence Settings</p>\n\n          <div className=\"timezone\">\n            <p className=\"copy__para--medium\">Set Time Zone</p>\n            <select id=\"\" name=\"\" onChange={(e) => setCampaignData({...campaignData, timezone: timezones[e.target.value]})}>\n              {Timezones.map((adress, key) => <option key={key} value={key}>{adress}</option>)}\n            </select>\n          </div>\n\n          <div className=\"limit\">\n            <p>Set Number of emails to be sent in a day</p>\n            <input type=\"number\" value={campaignData.dailyLimit} required onChange={(e) => setCampaignData({...campaignData, dailyLimit: e.target.value})}/>\n          </div>\n\n          <div className=\"stop\">\n            <p className=\"copy__para--medium\">Stop Cadence on Reply</p>\n            <ToggleSwitch\n              enabled={stop}\n              toggleSwitch={toggleSwitch}\n            />\n          </div>\n          {/* <button onClick={handleChange, sendData}>Save</button> */}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CampaignSettings\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/InputModals/UpdateCampaignName.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/AddProspect.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignSteps.js",["443","444","445","446","447"],[],"import { useContext, useState, useEffect } from \"react\"\nimport { GlobalContext } from \"../../GlobalProvider\"\n\nimport AppSidebar from \"../Sidebars/AppSidebar\";\nimport AppTopbar from \"../Topbars/AppTopbar\";\nimport EmailEditor from \"../EmailEditor\";\nimport ProgressBar from \"./ProgressBar\";\nimport ToggleSwitch from \"../ToggleSwitch\";\nimport StepSettingsModal from \"./StepSettings/Modal\";\nimport DelayDropdown from \"../DelayDropdown\";\nimport EditEditor from \"../EditEditor\";\n\nfunction CampaignSteps(props){\n  const {emailEditor, campaign, step, selectedCampaign} = useContext(GlobalContext)\n  const [editor, setEditor] = emailEditor\n  const [campaignId, setCampaignId] = selectedCampaign\n  const [campaignData, setCampaignData] = campaign\n  const [modalOpen, setModalOpen] = useState(false)\n  const [editEditor, setEditEditor] = useState(false) \n  const [addStep, setAddStep] = step\n  const [currentIndex, setCurrentIndex] = useState()\n  const [mailIndex, setMailIndex] = useState()\n  const [emailAdded, setEmailAdded] = useState(false)\n  const [daySetter, setDaySetter] = useState(0)\n  const [stepSetter, setStepSetter] = useState(0)\n  const [stepBtn, setBtn] = useState(true)\n  const [plainEmail, setPlainEmail] = useState(\"\")\n  const [edited, setEdited] = useState(false)\n  const alphabets = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\n\n  useEffect(() => {\n    initialStep()\n  }, [])\n\n  function toggleEditor(index){\n    setEditor(!editor)\n    setCurrentIndex(index)\n  }\n\n  function toggleEditEditor(index, i){\n    setEditEditor(!editEditor)\n    setCurrentIndex(index)\n    setMailIndex(i)\n  }\n\n\n  function toggleModal(){\n    setModalOpen(!modalOpen)\n  }\n\n  function toggleSwitch(mailIndex, stepIndex){\n    const list = [...addStep];\n    // list[index].enabled = !addStep[index].enabled\n    list[stepIndex].mails[mailIndex].enabled = !list[stepIndex].mails[mailIndex].enabled\n    setAddStep(list)\n  }\n\n  function initialStep() {\n    if(addStep.length === 0) {\n       newStep()\n    }\n    else{\n      return null\n    }\n    setCampaignId(\"\")\n  }\n\n  function newStep(){\n      const data = {\n        stepNumber: stepSetter + 1,\n        day: daySetter + 1,\n        dayGap: daySetter,\n        hour: 0,\n        hourGap: 0,\n        minute: 0,\n        minuteGap: 0,\n        mails: [],\n        days: [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"],\n        startHour: \"9\",\n        endHour: \"17\",\n        enabled: true,\n        opens: 0,\n        replies: 0,\n        clicks: 0\n      }\n      setAddStep(addStep => [...addStep, data]) \n      setDaySetter(daySetter + 1);\n      setStepSetter(stepSetter + 1);\n  }\n\n  const addNewEmail = (subject, email_content) => {\n    const data = {\n      subject: subject,\n      body: email_content,\n      plainBody: plainEmail,\n      enabled: true\n    }\n    let newArr = [...addStep]\n    addStep[currentIndex].mails.push(data)\n    setAddStep(newArr)\n    checkr(currentIndex)\n    setEmailAdded(!emailAdded)\n    setCampaignData({...campaignData, steps: addStep})\n  }\n\n  const updateEmail = (subject, email_content) => {\n    let arr = [...addStep]\n    arr[currentIndex].mails[mailIndex]['subject'] = subject\n    arr[currentIndex].mails[mailIndex]['body'] = email_content\n    arr[currentIndex].mails[mailIndex]['plainBody'] = plainEmail\n    setAddStep(arr)\n  }\n\n  function removeStep(index){\n    const list = [...addStep];\n    list.splice(index, 1);\n    setDaySetter(daySetter - 1);\n    setStepSetter(stepSetter - 1);\n    list.forEach((e, i) => {\n      e.stepNumber = i + 1\n      e.day = i + 1\n      e.dayGap = i + 1\n    })\n    console.log(list)\n    setAddStep(list);\n  }\n\n  const checkr = (index) => {\n    if (addStep[index].mails.length !== 0){\n    }\n    else{\n    console.log(false)}\n  }\n\n  const addStepBetween = (index) => {\n    const list = [...addStep];\n    const data = {\n      stepNumber: (index + 1) + 1,\n      day: (index + 1) + 1,\n      dayGap: (index + 1) + 1,\n      hour: 0,\n      hourGap: 0,\n      minute: 0,\n      minuteGap: 0,\n      mails: [],\n      days: [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"],\n      enabled: true\n    }\n    list.splice(index + 1, 0, data)\n    list.forEach((e, i) => {\n      e.stepNumber = i + 1\n      e.day = i + 1\n      e.dayGap = i + 1\n    })\n    setAddStep(list)\n    setDaySetter(daySetter + 1);\n    setStepSetter(stepSetter + 1);\n  }\n\n  return (\n    <div className=\"campaign-create\">\n      <AppSidebar/>\n      {editor ? <EmailEditor currentIndex={currentIndex} handleCallback={addNewEmail} setPlainEmail={setPlainEmail}/> : null}\n      {editEditor ? <EditEditor currentIndex={currentIndex} mailIndex={mailIndex} handleCallback={updateEmail} setPlainEmail={setPlainEmail} steps={addStep} setEditEditor={setEditEditor}/> : null}\n      <AppTopbar title={\"Campaigns\"}/>\n        <div className=\"campaign-create__container\">\n          {\n            addStep.length === 0 \n            ?\n              null \n            :\n            <ProgressBar prevStep={props.prevStep} nextStep={props.nextStep} addStep={addStep} saveExit={props.saveExit}/>\n          }\n        {addStep.map((d, index) => \n             <>\n             <div key={index} className=\"timeline\">\n                <div className={`campaign-create__container--step ${addStep[index].enabled ? \"\" : \"step-disabled\"}`}>\n                  <div className=\"row-1\">\n                    <div className=\"row-1__left\">\n                      {\n                        index !== 0 && addStep[index].mails.length !==0 ? \n                          <DelayDropdown steps={addStep} setStep={setAddStep} stepNumber={d.stepNumber} day={d.day} index={index}/>:\n                          <h3 key={index} className=\"heading-2\">Step {d.stepNumber}, Day {d.day}</h3>\n                      }\n                    </div>\n                    <div className={`campaign-create__container--step--settings `}>\n                    {addStep[index].mails.length!==0 ? \n                      <div className=\"row-1__right\">\n                        <div className=\"row-1__right--item\"><p>Assigned to: {addStep[index].whichEmail}</p></div>\n                        <div className=\"row-1__right--item\">\n                          {\n                            addStep[index].days.map( (d, i) => \n                              <p key={i} className=\"days\">{d}</p>\n                           )\n                          }\n                        </div>\n\n                    <button onClick={() => {toggleModal(); setCurrentIndex(index)}} className=\"btn-tertiary row-1__right--item\">Step Settings</button>\n                      </div>\n                        : null\n                    }\n                    </div>\n                  </div>\n\n                  <div className=\"row-2\">\n                    {\n                      addStep[index].mails.length===0 ? \n                      <div className=\"row-2__container--row\">\n                        <button onClick={() => toggleEditor(index)} className=\"btn-tertiary\">Add Email</button> \n                          {index === 0 \n                            ? \n                              null\n                            : \n                              <button onClick={() => removeStep(index)} className=\"btn-sec\">Remove Step</button>\n                          }\n                      </div>\n                    : \n                    <div className=\"row-2__container\">\n                      {addStep[index].mails.map((m, i) => \n                      <div className=\"email\" key={i}>\n                        <div className=\"email__container\">\n                          <ToggleSwitch enabled={addStep[index].mails[i].enabled} toggleSwitch={toggleSwitch} stepIndex={index} mailIndex={i}/>\n                          <div className=\"email__info\">\n                            {\n                              addStep[index].mails[i].length === 1 ?\n                              <p className=\"copy__para--medium-light\">Email</p>\n                              :\n                              <p className=\"copy__para--medium-light\">{alphabets[i]}</p>\n                            }\n                            <p className=\"copy__para--medium\" onClick={() => toggleEditEditor(index, i)}>{m.subject}: {m.plainBody}</p>\n                          </div>\n                          <div className=\"options\">\n                            <button key={index} onClick={() => removeStep(index)} className={`delete-btn`}><i className=\"fas fa-trash-alt\"></i></button>\n                          </div>\n                        </div>\n                      </div>\n                      )}\n                    </div>\n                    }\n                  </div>\n\n                 {\n                  \n                  addStep[index].mails.length===0 ? \n                    null\n                    :\n                    <div className=\"row-3\">\n                    <p className=\"btn-simple\" onClick={() => toggleEditor(index)}>+A/B Test</p>\n                    </div>\n                 }\n                </div>\n\n                {addStep.length !== index + 1? <button onClick={() => addStepBetween(index)} className=\"btn-add--sec\"><i className=\"fas fa-plus-circle\"></i></button> \n                  : \n                <button onClick={newStep} className=\"btn-add\"><i className=\"fas fa-plus\"></i></button>\n                }\n             </div>\n             </>\n            )}\n        </div>\n      { modalOpen ? <StepSettingsModal toggler={toggleModal} addStep={addStep} index={currentIndex} setEdited={setEdited}/> : null}\n    </div>\n  )\n}\n\nexport default CampaignSteps;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/InputModals/CreateList.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/SingleCampaignNavbar.js",["448","449","450","451","452","453","454"],[],"import { NavLink } from \"react-router-dom\";\nimport {useNavigate} from \"react-router-dom\"\nimport { useParams } from \"react-router\";\nimport {useContext, useState, useEffect} from \"react\"\n\nimport { GlobalContext } from \"../../GlobalProvider\"\n\nfunction SingleCampaignNavbar(){\n  let navigate = useNavigate()\n  const { id } = useParams()\n  const {addProspect, newProspect, upload, addProspectCampaign, selectedCampaign} = useContext(GlobalContext)\n  const [campaignProspectAdd, setCampaignProspectAdd] = addProspectCampaign;\n  const [campaignId, setCampaignId] = selectedCampaign\n\n  useEffect(() => {\n    setCampaignId(id)\n  })\n\n  return(\n    <div className=\"single-campaign-navbar\">\n        <ul className=\"single-campaign-navbar__links\">\n          <li><NavLink to={`/campaigns/${id}/step`}>Steps</NavLink></li>\n          <li><NavLink to={`/campaigns/${id}/prospects`}>Prospects</NavLink></li>\n          <li><NavLink to={`/campaigns/${id}/inbox`}>Inbox</NavLink></li>\n          <li><NavLink to={`/campaigns/${id}/emails`}>Emails</NavLink></li>\n          <li><NavLink to={`/campaigns/${id}/reports`}>Reports</NavLink></li>\n          <li><NavLink to={`/campaigns/${id}/settings`}>Settings</NavLink></li>\n        </ul>\n      <button className=\"btn\" onClick={() => setCampaignProspectAdd(true)}>+ Add Prospects To Campaign</button>\n    </div>\n  )\n}\n\nexport default SingleCampaignNavbar;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/AddToCampaign.js",["455"],[],"import {useState, useEffect, useContext} from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport { GlobalContext } from \"../../GlobalProvider\";\n\nimport CampaignReview from \"../CampaignComponents/CampaignReview\";\nconst cookies = new Cookies()\nconst AddToCampaign = ({toggleAddTo, selectedProspects}) => {\n  const {selectedCampaign} = useContext(GlobalContext)\n  const [campaignId, setCampaignId] = selectedCampaign\n  const [campaigns, setCampaigns] = useState([])\n  const [review, setReview] = useState(false)\n\n  useEffect(() => {\n    getData()\n  }, [])\n  const getData = async () => {\n    const userId = cookies.get(\"userId\")\n    await axios.get(`/campaigns/${userId}`, {\n      headers: {\n        \"Authorization\": `Bearer ${cookies.get('access_token')}`\n      }\n    }).then((res) => {\n      if(res.data === \"\"){\n      }\n      else{\n       setCampaigns(res.data)\n      }\n    })\n  }\n\n  const toggleReview = () => {\n    setReview(!review)\n  }\n\n  const toggleHome = () => {\n    getData()\n    setReview(false)\n    toggleAddTo()\n  }\n\n  return(\n    <div className=\"add-to-campaign\">\n      {review ? <CampaignReview selectedProspects={selectedProspects} toggleReview={toggleReview} toggleHome={toggleHome}/> : null}\n      <nav className=\"nav\">\n        <h1 className=\"heading-2\">Add Prospects</h1>\n        <button onClick={toggleHome} className=\"btn-close\">&times;</button>\n      </nav>\n      <div className=\"add-to-campaign__container\">\n        <div className=\"add-to-campaign__container--filters\">\n          <p className=\"copy__para--medium\">Filter Campaigns By</p>\n          <ul className=\"links\">\n            <li className=\"copy__para--medium active\">My Campaigns</li>\n            <li className=\"copy__para--medium\">All Campaigns</li>\n          </ul>\n        </div>\n        <div className=\"add-to-campaign__container--list\">\n          <p className=\"copy__para--medium\">Select Campaign</p>\n          <input type=\"search\" className=\"search\" placeholder=\"Search\"/>\n          {\n            campaigns.map((d, index) =>\n                <div key={index} onClick={() => {setCampaignId(d.id); toggleReview()}} className=\"campaigns\">\n                <h1 className=\"heading-4\">{d.campaign_name}</h1>\n              </div>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddToCampaign;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignAdd.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Add.js",["456","457"],[],"import {useContext, useState, useEffect} from \"react\"\nimport { GlobalContext } from \"../../../GlobalProvider\"\nimport Upload from \"./Upload/Upload\"\nimport New from \"./New\"\n\nfunction Add(){\n  const {addProspect, newProspect, upload} = useContext(GlobalContext)\n  const [newUpload, setNewUpload] = upload\n  const [add, setAdd] = addProspect\n  const [newP, setNewP] = newProspect\n\n  function toggleAdd(){\n    setAdd(!add)\n  }\n\n  function toggleNew(){\n    setNewP(!newP)\n  }\n\n  function toggleUpload(){\n    setNewUpload(!newUpload)\n  }\n  return(\n    <div class=\"add\">\n      {newP===true ? <New/> : console.log('null')}\n      {newUpload===true ? <Upload/> : console.log('null')}\n      <nav class=\"nav\">\n        <h1>Add Prospects</h1>\n        <button onClick={toggleAdd} className=\"close\">&times;</button>\n      </nav>\n\n      <div className=\"add__container\">\n        <h2>How would you like to add Prospects?</h2>\n\n        <button onClick={toggleUpload} className=\"add__container--card\">\n          <i class=\"fas fa-file-csv\"></i>\n          <p>Upload CSV file</p>\n          <i class=\"fas fa-arrow-right\"></i>\n        </button>\n        <button onClick={toggleNew} className=\"add__container--card\">\n          <i class=\"fas fa-user\"></i>\n          <p>Create A New Prospect</p>\n          <i class=\"fas fa-arrow-right\"></i>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Add\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/SingleProspect/SingleProspect.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/StepSettings/Modal.js",["458","459","460","461"],[],"import { useState, useContext, useEffect } from \"react\"\nimport StepSettingsBar from \"./Bar\"\nimport Window from \"./Window\"\nimport Days from \"./Days\"\nimport WhichEmail from \"./WhichEmail\"\nimport {GlobalContext} from \"../../../GlobalProvider\"\n\nconst StepSettingsModal = (props) => {\n  const [progress, setProgress] = useState(1)\n  const {step} = useContext(GlobalContext)\n  const [startHour, setStartHour] = useState(props.addStep[props.index][\"startHour\"])\n  const [endHour, setEndHour] = useState(props.addStep[props.index][\"endHour\"])\n  const [selectedDays, setSelectedDays] = useState(props.addStep[props.index][\"days\"]  !== null ? props.addStep[props.index][\"days\"] : [\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\",\"SUN\"])\n  const [selectedEmail, setSelectedEmail] = useState(props.addStep[props.index][\"whichEmail\"])\n\n  const prevStep = () => {\n    setProgress(progress!==0 ? progress - 1 : null)\n  }\n\n  const nextStep = () => {\n    setProgress(progress!==5 ? progress + 1 : null)\n  }\n\n  const selectProgress = (number) => {\n    setProgress(number)\n  }\n\n  const handleCallback = () => {\n    props.addStep[props.index][\"startHour\"] = startHour\n    props.addStep[props.index][\"endHour\"] = endHour\n    props.addStep[props.index][\"days\"] = selectedDays\n    props.addStep[props.index][\"whichEmail\"] = selectedEmail\n    props.setEdited(true)\n    props.toggler()\n  }\n\n  switch(progress){\n    case 1:\n      return(\n        <div className=\"step-settings\">\n          <div className=\"step-settings__modal\">\n            <StepSettingsBar progress={progress} selectProgress={selectProgress}/>\n            <Window toggler={props.toggler} index={props.index} startHour={startHour} setStartHour={setStartHour} endHour={endHour} setEndHour={setEndHour}/>\n\n            <div className=\"step-settings__modal--btns\">\n              <button onClick={props.toggler} className=\"btn-sec\">Cancel</button>\n              <button onClick={handleCallback} className=\"btn\">Save</button>\n            </div>\n          </div>\n        </div>\n      )\n    case 2:\n      return(\n        <div className=\"step-settings\">\n          <div className=\"step-settings__modal\">\n            <StepSettingsBar progress={progress} selectProgress={selectProgress}/>\n            <Days selectedDays={selectedDays} setSelectedDays={setSelectedDays}/>\n\n            <div className=\"step-settings__modal--btns\">\n              <button onClick={props.toggler} className=\"btn-sec\">Cancel</button>\n              <button onClick={handleCallback} className=\"btn\">Save</button>\n            </div>\n\n          </div>\n        </div>\n      )\n    case 3:\n      return(\n        <div className=\"step-settings\">\n          <div className=\"step-settings__modal\">\n            <StepSettingsBar progress={progress} selectProgress={selectProgress}/>\n            <WhichEmail selectedEmail={selectedEmail} setSelectedEmail={setSelectedEmail}/>\n\n            <div className=\"step-settings__modal--btns\">\n              <button onClick={props.toggler} className=\"btn-sec\">Cancel</button>\n              <button onClick={handleCallback} className=\"btn\">Save</button>\n            </div>\n          </div>\n        </div>\n      )\n    case 4:\n      return(\n        <div className=\"step-settings\">\n          <div className=\"step-settings__modal\">\n            <StepSettingsBar progress={progress} selectProgress={selectProgress}/>\n            <h1>Hello4</h1>\n\n            <div className=\"step-settings__modal--btns\">\n              <button onClick={props.toggler} className=\"btn-sec\">Cancel</button>\n              <button onClick={handleCallback} className=\"btn\">Save</button>\n            </div>\n          </div>\n        </div>\n      )\n    case 5:\n      return(\n        <div className=\"step-settings\">\n          <div className=\"step-settings__modal\">\n            <StepSettingsBar progress={progress} selectProgress={selectProgress}/>\n            <h1>Hello5</h1>\n\n            <div className=\"step-settings__modal--btns\">\n              <button onClick={props.toggler} className=\"btn-sec\">Cancel</button>\n              <button onClick={handleCallback} className=\"btn\">Save</button>\n            </div>\n          </div>\n        </div>\n      )\n    default:\n      return(\n        \"hello\"\n    )\n  }\n}\n\nexport default StepSettingsModal\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/PlaceholderFields.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/DelayDropdown.js",["462"],[],"import {useEffect} from \"react\"\n\nconst DelayDropdown = ({index, day, stepNumber, steps, setStep}) => {\n\n  const toggleDropdown = () => {\n    let el = document.getElementsByClassName(\"dropdown__container--content\")[index-1]\n    if(el.style.display === \"block\"){\n      el.style.display = \"none\";\n    }\n    else{\n      el.style.display = \"block\";\n    }\n  }\n\n  const handleDayChange = (e) => {\n    let arr = [...steps]\n    console.log(arr[index].day)\n    arr[index].day = e.target.value\n    arr[index].day++;\n    arr[index].dayGap = e.target.value\n    setStep(arr)\n    // step.day = e.target.value;\n    // step.dayGap = e.target.value;\n  }\n\n  const handleHourChange = (e) => {\n    let arr = [...steps]\n    arr[index].hour = e.target.value;\n    arr[index].hour++;\n    arr[index].hourGap = e.target.value\n    setStep(arr)\n  }\n\n  const handleMinuteChange = (e) => {\n    let arr = [...steps]\n    arr[index].minute = e.target.value;\n    arr[index].minute++;\n    arr[index].minuteGap = e.target.value\n    setStep(arr)\n  }\n\n\n  return(\n    <div className=\"dropdown__container\">\n      <h3 className=\"heading-2\">\n        <span> Step {stepNumber}, </span> \n        <button className=\"btn-sec\" onClick={toggleDropdown}>Day {steps[index].day} <i className=\"fas fa-caret-down\"></i></button>\n      </h3>\n      <div className=\"dropdown__container--content\" style={{display: \"none\"}}>\n        <h3 className=\"heading-2\">Schedule after a delay of</h3>\n\n        <div className=\"dropdown__container--content--items\">\n          <div>\n            <input type=\"number\" value={steps[index].dayGap} id=\"days\" onChange={(e) => handleDayChange(e)}/>\n            <label className=\"copy__para--medium\" htmlFor=\"days\">days</label>\n          </div>\n          <div>\n            <input type=\"number\" value={steps[index].hourGap} onChange={(e) => handleHourChange(e)} id=\"hours\"/>\n            <label className=\"copy__para--medium\" htmlFor=\"hours\">hours</label>\n          </div>\n          <div>\n            <input type=\"number\" value={steps[index].minuteGap} onChange={(e) => handleMinuteChange(e)} id=\"minute\"/>\n            <label className=\"copy__para--medium\" htmlFor=\"minute\">minutes</label>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DelayDropdown;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/ProgressBar.js",["463","464","465","466"],[],"import { useContext, useEffect, useState } from \"react\"\nimport { GlobalContext } from '../../GlobalProvider'\nimport { useNavigate } from \"react-router\"\n\nconst ProgressBar = (props) => {\n  let navigate = useNavigate()\n  const {campaignBar, step} = useContext(GlobalContext)\n  const [progress, setProgress] = campaignBar\n  const [addStep, setAddStep] = step\n\n  const saveExit = () => {\n    props.saveExit()\n  }\n\n  const nextStep = () => {\n    if(progress === 1){\n      props.saveCampaign()\n    }\n    props.nextStep()\n  }\n\n  return(\n    <div className=\"progress-bar\">\n      <div className=\"progress-bar__container\">\n        <div className={`heading-3 progress-bar__container--progress ${progress===0 ? 'active' : 'unactive'}`}><div className=\"bullet\"/><p>Add Cadence Steps</p></div>\n        <div className={`heading-3 progress-bar__container--progress ${progress===1 ? 'active' : 'unactive'}`}><div className=\"bullet\"/><p>Cadence Name & Settings</p></div>\n        <div className={`heading-3 progress-bar__container--progress ${progress===2 ? 'active' : 'unactive'}`}><div className=\"bullet\"/><p>Add Prospects</p></div>\n      </div>\n\n      <div className=\"btns u-margin-bottom-small\">\n        <button onClick={() => saveExit()} className={`btn-sec ${addStep.length !== 0 ? addStep[0].mails.length !== 0 ? 'active' : 'unactive' : null}`}>Save & Exit</button>\n        <button onClick={() => navigate(\"/campaigns/home\")} className={`btn-sec ${addStep.length !== 0 ? addStep[0].mails.length === 0 ? 'active' : 'unactive' : null}`}>Exit</button>\n        <button onClick={() => props.prevStep()} className={`btn-sec ${progress===0 ? 'unactive' : 'active'}`}>Previous</button>\n        <button onClick={() => nextStep()} className={`btn`}>Next</button>\n      </div>\n    </div>\n  )\n}\n\nexport default ProgressBar\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignReview.js",["467","468","469","470","471"],[],"import { GlobalContext } from \"../../GlobalProvider\";\nimport { useContext } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport moment from \"moment\";\n\nimport Preview from \"./Preview\";\n\nconst cookies = new Cookies()\nfunction CampaignReview({selectedProspects, toggleHome, toggleReview}) {\n  const {addProspect, selectedCampaign, preview, step, campaignBar} = useContext(GlobalContext)\n  const [progress, setProgress] = campaignBar\n  const [addStep, setAddStep] = step\n  const [campaignId, setCampaignId] = selectedCampaign\n  const [add, setAdd] = addProspect\n  const [previewModal, setPreviewModal] = preview\n  const navigate = useNavigate();\n\n  const togglePreview = () => {\n    setPreviewModal(!previewModal)\n  }\n\n  const campaignStart = () => {\n    const x = moment().format();\n    console.log(x)\n\n    const data = {\n      selectedProspects: selectedProspects,\n      selectedCampaign: campaignId,\n      startAt: x\n    }\n    axios.post(\"/job/campaign/start\", data, {\n        headers: {\n          \"Authorization\": `Bearer ${cookies.get('access_token')}`\n        },\n        params: {\n          userId: cookies.get(\"userId\")\n        }\n    }).then((res) => {\n      if(res.status === 200){\n        toggleHome()\n        setAddStep([])\n        navigate(`/campaigns/${campaignId}/step`)\n        setProgress(0)\n      }\n    })\n  }\n\n  return (\n    <div className=\"campaign-review\">\n      {previewModal ? <Preview selectedProspects={selectedProspects} togglePreview={togglePreview} toggleHome={toggleHome} campaignId={campaignId} setProgress={setProgress} setAddStep={setAddStep}/> : null}\n      <nav className=\"nav\">\n        <div className=\"col-1\">\n          <button onClick={toggleReview} className=\"btn-back\"><i className=\"fas fa-chevron-left\"></i></button>\n          <h1 className=\"copy__para--big\">Add Prospects To Campaign</h1>\n        </div>\n        <div className=\"col-2\">\n          <button className=\"btn-sec\" onClick={togglePreview}>Preview & Start</button>\n          <button className=\"btn\" onClick={() => campaignStart()}>Start Campaign</button>\n          <button onClick={toggleHome} className=\"btn-close\">&times;</button>\n        </div>\n      </nav>\n\n      <div className=\"campaign-review__container\">\n        <h1 className=\"heading-3-black\">{selectedProspects.length} prospect(s) selected for Campaign Name</h1>\n        <div className=\"campaign-review__container--item\">\n          <div>\n            <h1 className=\"heading-2\"><i className=\"fas fa-user-circle\"></i> Prospects</h1>\n          </div>\n\n          <div>\n            <p className=\"heading-4\">{selectedProspects.length}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CampaignReview;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignProspectsExisting.js",["472","473","474","475","476","477"],[],"import axios from \"axios\"\nimport { useState, useEffect, useContext } from \"react\"\nimport { GlobalContext } from \"../../../GlobalProvider\";\nimport Cookies from 'universal-cookie';\nimport CampaignReview from \"../CampaignReview\";\nimport {useParams} from \"react-router\"\n\nconst cookies = new Cookies()\nfunction CampaignProspectsExisting() {\n  const {addProspectCampaign, addExistingProspect, selectedCampaign, review} = useContext(GlobalContext)\n  const [campaignProspectAdd, setCampaignProspectAdd] = addProspectCampaign\n  const [addExistingModal, setAddExistingModal] = addExistingProspect\n  const [prospects, setProspects] = useState([])\n  const [selectedProspects, setSelectedProspects] = useState([])\n  const [campaignId, setCampaignId] = selectedCampaign\n  const [reviewModal, setReviewModal] = review\n  const [prospectIds, setProspectIds] = useState([])\n  const [totalElements, setTotalElements] = useState()\n  const [totalPages, setTotalPages] = useState()\n  const [pageNumber, setPageNumber] = useState(0)\n  const [pageSize, setPageSize] = useState(10)\n\n  useEffect(() => {\n    getListData()\n  }, [pageNumber, pageSize])\n\n  function toggleReview(){\n    setReviewModal(false)\n  }\n\n  function toggleHome(){\n    setReviewModal(false)\n    setAddExistingModal(false)\n    setCampaignProspectAdd(false)\n  }\n\n  function previousPage() {\n    if(pageNumber !== 0){\n      setPageNumber(pageNumber - 1)\n    }\n    else{\n    }\n  }\n\n  function nextPage() {\n    if((pageNumber + 1) === totalPages){\n      console.log(totalPages)\n    }\n    else{\n      setPageNumber(pageNumber + 1)\n    }\n  }\n\n  const getListData = async () => {\n    const userId = cookies.get(\"userId\")\n    const params = {\n      userId: userId,\n      campaignId: campaignId,\n      page: pageNumber,\n      size: pageSize\n    }\n    await axios.get(`/prospects/prospect/not-in-campaign/`, {\n      headers: {\n        \"Authorization\": `Bearer ${cookies.get('access_token')}`\n      },\n      params: params\n    }).then((res) => {\n      if(res.data === \"\"){\n        return null;\n      }\n      else{\n        setProspects(res.data.prospects)\n        setTotalElements(res.data.totalElements)\n        setTotalPages(res.data.totalPages)\n      }\n    })\n  }\n\n  const handleSelectProspect = (e) => {\n    const prospectId = e.target.value\n    if(!selectedProspects.includes(prospectId)){\n      setSelectedProspects([...selectedProspects, prospectId])\n    }\n    else{\n      setSelectedProspects(selectedProspects.filter((selectedProspectsId) => {\n        return selectedProspectsId !== prospectId;\n      })\n    )\n    }\n  }\n\n  const handleSelectAllProspects = () => {\n    if(selectedProspects.length < prospects.length){\n      setSelectedProspects(prospects.map((d, index) => d.id))\n    }\n    else{\n      setSelectedProspects([]);\n    }\n  }\n\n  return(\n    <>\n    <div class=\"add-from-existing\">\n      {reviewModal ? <CampaignReview campaignId={campaignId} selectedProspects={selectedProspects} toggleHome={toggleHome} toggleReview={toggleReview}/> : null}\n      <nav class=\"nav\">\n        <div className=\"col-1\">\n          <button onClick={() => setAddExistingModal(!addExistingModal)} className=\"btn-back\"><i class=\"fas fa-chevron-left\"></i></button>\n          <h1 className=\"copy__para--big\">Add Prospects To Campaign</h1>\n        </div>\n        <div className=\"col-2\">\n          <button className=\"btn\" onClick={() => setReviewModal(!reviewModal)}>Review</button>\n          <button onClick={toggleHome} className=\"btn-close\">&times;</button>\n        </div>\n      </nav>\n\n      <div className=\"add-from-existing__container\">\n            <div className=\"toolbar\">\n              <div className=\"name\">\n                <h4 className=\"heading-5\">My Prospects</h4>\n              </div>\n              <div className=\"search\">\n                <input type=\"search\" placeholder=\"Search\"/>\n              </div>\n            </div>\n\n            <div className=\"add-from-existing__container--page-size\">\n                <p className=\"copy__para--medium\">Showing</p>\n                <select onChange={(e) => setPageSize(e.target.value)}>\n                  <option selected={pageSize === 10 ? \"selected\" : \"\"} value=\"10\">10</option>\n                  <option selected={pageSize === 20 ? \"selected\" : \"\"} value=\"20\">20</option>\n                  <option selected={pageSize === 30 ? \"selected\" : \"\"} value=\"30\">30</option>\n                  <option selected={pageSize === 50 ? \"selected\" : \"\"} value=\"50\">50</option>\n                  <option selected={pageSize === 100 ? \"selected\" : \"\"} value=\"100\">100</option>\n                </select>\n                <p className=\"copy__para--medium\">/{totalElements}</p>\n            </div>\n\n            <div className=\"table__container\">\n              <table className=\"data\">\n                <thead>\n                  <tr className=\"row1\">\n                    <input className=\"col-head \" type=\"checkbox\" checked={selectedProspects.length === prospects.length} onChange={handleSelectAllProspects}/>\n                    <th className=\"col-head heading-5\">Prospect</th>\n                    <th className=\"col-head heading-5\">Contact</th>\n                    <th className=\"col-head heading-5\">Company</th>\n                    <th className=\"col-head heading-5\">List</th>\n                    <th className=\"col-head heading-5\">Tags</th>\n                    <th className=\"col-head heading-5\">Status</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {prospects.map(d => \n                    <tr key={d.id}>\n                      <input type=\"checkbox\" value={d.id} checked={selectedProspects.includes(d.id)} onChange={handleSelectProspect}/>\n                      <td><p className=\"col-data copy__para--medium\">{d.firstName} {d.lastName}</p></td>\n                      <td><p className=\"col-data copy__para--medium\">\n                            {d.prospectLinkedinUrl}\n                            {d.prospectMobileNumber}\n                            {d.prospectEmail}\n                      </p></td>\n                      <td><p className=\"col-data copy__para--medium\">{d.prospectCompany}</p></td>\n                      <td><p className=\"col-data copy__para--medium\">Campaign 1</p></td>\n                      <td><p className=\"col-data copy__para--medium\">-</p></td>\n                      <td><p className=\"col-data copy__para--medium\">Not Contacted</p></td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n\n            <div className=\"add-from-existing__container--page-number\">\n              <div className=\"add-from-existing__container--page-number--prev copy__para--medium\" onClick={() => previousPage()}>Prev</div>\n                <p className=\"add-from-existing__container--page-number--number copy__para--medium\">{pageNumber + 1}</p>\n                <div className=\"add-from-existing__container--page-number--next copy__para--medium\" onClick={() => nextPage()}>Next</div>\n            </div>\n          </div>\n      </div>\n    </>\n  )\n}\n\nexport default CampaignProspectsExisting;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/SingleProspect/BasicFields.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/New.js",["478"],[],"import {useContext, useEffect, useState} from \"react\"\nimport { GlobalContext } from \"../../../GlobalProvider\";\nimport axios from \"axios\"\nimport Cookies from 'universal-cookie';\nimport { useParams } from \"react-router\";\n\nconst cookies = new Cookies()\nfunction New(){\n  const {addProspect, newProspect} = useContext(GlobalContext)\n  const [newP, setNewP] = newProspect\n  const [add, setAdd] = addProspect\n  const [showLists, setShowLists] = useState([])\n  const [list, setList] = useState('')\n  const [prospectData, setProspectData] = useState({})\n\n  useEffect(() => {\n    getListData()\n  }, [])\n\n\n  function toggleAdd(){\n    setAdd(!add)\n  }\n\n  function toggleNew(){\n    setNewP(!newP)\n  }\n\n  function toggleHome(){\n    toggleNew()\n    toggleAdd()\n  }\n\n  const getListData = async () => {\n    const userId = cookies.get(\"userId\")\n    await axios.get(`/prospects/prospect_lists/list?userId=${userId}`, {\n      headers: {\n        \"Authorization\": `Bearer ${cookies.get('access_token')}`\n      }\n    }).then((res) => {\n      setShowLists(res.data)\n    })\n  }\n\n  const createProspect = async () => {\n    const token = cookies.get(\"access_token\")\n    const params = {\n      listId: list,\n      userId: cookies.get(\"userId\"),\n    }\n\n    await axios.post(`/prospects/prospect/`, prospectData, {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      },\n      params: params\n    }).then((res) => {\n      if(res.status === 201){\n        window.location.reload()\n      }\n    })\n  }\n\n\n  return(\n    <div class=\"new-prospect\">\n      <nav class=\"nav\">\n        <div className=\"col-1\">\n          <button onClick={toggleNew} className=\"btn-back\"><i class=\"fas fa-chevron-left\"></i></button>\n          <h1 className=\"copy__para--big\">Add Prospects</h1>\n        </div>\n        <div className=\"col-2\">\n          <button className=\"btn\" onClick={createProspect}>Create Prospect</button>\n          <button onClick={toggleHome} className=\"btn-close\">&times;</button>\n        </div>\n      </nav>\n\n      <div className=\"new-prospect__container\">\n        <form className=\"new-prospect__container--form\">\n          <div>\n            <h1 className=\"u-margin-bottom-medium\">Basic Fields</h1>\n            <div className=\"row-1\">\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"first-name\" onChange={(e) => setProspectData({...prospectData, firstName: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"first-name\">First Name</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"last-name\" onChange={(e) => setProspectData({...prospectData, lastName: e.target.value})}/>\n                <label htmlFor=\"first-name\" className=\"heading-4\">Last Name</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"email\" name=\"email\" onChange={(e) => setProspectData({...prospectData, prospectEmail: e.target.value})}/>\n                <label htmlFor=\"first-name\" className=\"heading-4\">Email</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"company\" onChange={(e) => setProspectData({...prospectData, prospectCompany: e.target.value})}/>\n                <label htmlFor=\"first-name\" className=\"heading-4\">Company</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"phone\" onChange={(e) => setProspectData({...prospectData, prospectMobileNumber: e.target.value})}/>\n                <label htmlFor=\"phone\" className=\"heading-4\">Phone No.</label>\n              </div>\n              <div className=\"input-block\">\n                <select onChange={(e) => setList(e.target.value)} id=\"\" name=\"prospect-list\">\n                  <option value=\"\">default</option>\n                  {showLists.map(d => \n                    <option key={d.id} value={d.id}>{d.name}</option>\n                  )}\n                </select>\n                <label htmlFor=\"prospect-list\" className=\"heading-4\">Prospect list name</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"tag\"/>\n                <label htmlFor=\"tag\" className=\"heading-4\">Tag Prospects</label>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <h1 className=\"u-margin-bottom-medium u-margin-top-big\">Additional Fields</h1>\n            <div className=\"row-2\">\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"account\" onChange={(e) => setProspectData({...prospectData, prospect_account: e.target.value})}/>\n                <label htmlFor=\"account\" className=\"heading-4\">Account</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"email\" name=\"company-email\" onChange={(e) => setProspectData({...prospectData, prospect_company_email: e.target.value})}/>\n                <label htmlFor=\"company-email\" className=\"heading-4\">Company Email</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"department\" onChange={(e) => setProspectData({...prospectData, prospect_department: e.target.value})}/>\n                <label htmlFor=\"department\" className=\"heading-4\">Department</label>\n              </div>\n              {/* <div className=\"input-block\"> */}\n              {/*   <input type=\"text\" name=\"company-phone\" onChange={(e) => setProspectData({...prospectData, prospect_company_: e.target.value})}/> */}\n              {/*   <label htmlFor=\"company-phone\">Company Phone no.</label> */}\n              {/* </div> */}\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"title\" onChange={(e) => setProspectData({...prospectData, prospect_title: e.target.value})}/>\n                <label htmlFor=\"title\" className=\"heading-4\">Title</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"company-domain\" onChange={(e) => setProspectData({...prospectData, prospect_company_domain: e.target.value})}/>\n                <label htmlFor=\"company-domain\" className=\"heading-4\">Company Domain</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"linkedin-url\" onChange={(e) => setProspectData({...prospectData, prospect_linkedin_url: e.target.value})}/>\n                <label htmlFor=\"linkedin-url\" className=\"heading-4\">Linkedin Url</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"twitter-id\" onChange={(e) => setProspectData({...prospectData, prospect_twitter_url: e.target.value})}/>\n                <label htmlFor=\"twitter-id\" className=\"heading-4\">Twitter Id</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"location\" onChange={(e) => setProspectData({...prospectData, prospect_location: e.target.value})}/>\n                <label htmlFor=\"location\" className=\"heading-4\">Location</label>\n              </div>\n              {/* <div className=\"input-block\"> */}\n              {/*   <input type=\"text\" name=\"city\" onChange={(e) => setProspectData({...prospectData, prospect_country: e.target.value})}/> */}\n              {/*   <label htmlFor=\"city\">City</label> */}\n              {/* </div> */}\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"country\" onChange={(e) => setProspectData({...prospectData, prospect_country: e.target.value})}/>\n                <label htmlFor=\"country\" className=\"heading-4\">Country</label>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default New\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignProspectNew.js",["479","480"],[],"import {useContext, useEffect, useState} from \"react\"\nimport { GlobalContext } from \"../../../GlobalProvider\";\nimport axios from \"axios\"\nimport Cookies from 'universal-cookie';\nimport CampaignReview from \"../CampaignReview\";\nimport { useParams } from \"react-router\";\n\nconst cookies = new Cookies()\nfunction CampaignProspectNew(){\n  const {addProspectCampaign, newProspect, review} = useContext(GlobalContext)\n  const [campaignProspectAdd, setCampaignProspectAdd] = addProspectCampaign\n  const [newP, setNewP] = newProspect\n  const [showLists, setShowLists] = useState([])\n  const [list, setList] = useState('')\n  const [prospectData, setProspectData] = useState({})\n  const [prospectIds, setProspectIds] = useState([])\n  const [reviewModal, setReviewModal] = review\n  //const [campaignId, setCampaignId] = selectedCampaign\n\n  useEffect(() => {\n    getListData()\n  }, [])\n\n  function toggleReview() {\n    return null;\n  }\n\n  function toggleNew(){\n    setNewP(!newP)\n  }\n\n  function toggleHome(){\n    setNewP(false)\n    setReviewModal(false)\n    setCampaignProspectAdd(false)\n  }\n\n  const getListData = async () => {\n    const userId = cookies.get(\"userId\")\n    await axios.get(`/prospects/prospect_lists/list?userId=${userId}`, {\n      headers: {\n        \"Authorization\": `Bearer ${cookies.get('access_token')}`\n      }\n    }).then((res) => {\n      setShowLists(res.data)\n    })\n  }\n\n  const createProspect = async () => {\n    const token = cookies.get(\"access_token\")\n    const params = {\n      listId: list,\n      userId: cookies.get(\"userId\")\n    }\n\n    await axios.post(`/prospects/prospect/`, prospectData, {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      },\n      params: params\n    }).then((res) => {\n      if(res.status === 201){\n        const list = []\n        list.push(res.data.id)\n        setProspectIds(list)\n        setReviewModal(!reviewModal)\n      }\n    })\n  }\n\n\n  return(\n    <div class=\"new-prospect\">\n      {reviewModal ? <CampaignReview selectedProspects={prospectIds} toggleHome={toggleHome} toggleReview={toggleReview}/> : null}\n      <nav class=\"nav\">\n        <div className=\"col-1\">\n          <button onClick={toggleNew} className=\"btn-back\"><i class=\"fas fa-chevron-left\"></i></button>\n          <h1 className=\"copy__para--big\">Add Prospects</h1>\n        </div>\n        <div className=\"col-2\">\n          <button className=\"btn\" onClick={createProspect}>Create Prospect</button>\n          <button onClick={toggleHome} className=\"btn-close\">&times;</button>\n        </div>\n      </nav>\n\n      <div className=\"new-prospect__container\">\n        <form className=\"new-prospect__container--form\">\n          <div>\n            <h1 className=\"heading-1\">Basic Fields</h1>\n            <div className=\"row-1\">\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"first-name\" onChange={(e) => setProspectData({...prospectData, firstName: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"first-name\">First Name</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"last-name\" onChange={(e) => setProspectData({...prospectData, lastName: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"first-name\">Last Name</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"email\" name=\"email\" onChange={(e) => setProspectData({...prospectData, prospectEmail: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"first-name\">Email</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"company\" onChange={(e) => setProspectData({...prospectData, prospectCompany: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"first-name\">Company</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"phone\" onChange={(e) => setProspectData({...prospectData, prospectMobileNumber: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"phone\">Phone No.</label>\n              </div>\n              <div className=\"input-block\">\n                <select onChange={(e) => setList(e.target.value)} id=\"\" name=\"prospect-list\">\n                  <option value=\"\">default</option>\n                  {showLists.map(d => \n                    <option key={d.id} value={d.id}>{d.name}</option>\n                  )}\n                </select>\n                <label className=\"heading-4\" htmlFor=\"prospect-list\">Prospect list name</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"tag\"/>\n                <label className=\"heading-4\" htmlFor=\"tag\">Tag Prospects</label>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <h1 className=\"heading-1\">Additional Fields</h1>\n            <div className=\"row-2\">\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"account\" onChange={(e) => setProspectData({...prospectData, prospect_account: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"account\">Account</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"email\" name=\"company-email\" onChange={(e) => setProspectData({...prospectData, prospect_company_email: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"company-email\">Company Email</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"department\" onChange={(e) => setProspectData({...prospectData, prospect_department: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"department\">Department</label>\n              </div>\n              {/* <div className=\"input-block\"> */}\n              {/*   <input type=\"text\" name=\"company-phone\" onChange={(e) => setProspectData({...prospectData, prospect_company_: e.target.value})}/> */}\n              {/*   <label htmlFor=\"company-phone\">Company Phone no.</label> */}\n              {/* </div> */}\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"title\" onChange={(e) => setProspectData({...prospectData, prospect_title: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"title\">Title</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"company-domain\" onChange={(e) => setProspectData({...prospectData, prospect_company_domain: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"company-domain\">Company Domain</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"linkedin-url\" onChange={(e) => setProspectData({...prospectData, prospect_linkedin_url: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"linkedin-url\">Linkedin Url</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"twitter-id\" onChange={(e) => setProspectData({...prospectData, prospect_twitter_url: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"twitter-id\">Twitter Id</label>\n              </div>\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"location\" onChange={(e) => setProspectData({...prospectData, prospect_location: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"location\">Location</label>\n              </div>\n              {/* <div className=\"input-block\"> */}\n              {/*   <input type=\"text\" name=\"city\" onChange={(e) => setProspectData({...prospectData, prospect_country: e.target.value})}/> */}\n              {/*   <label htmlFor=\"city\">City</label> */}\n              {/* </div> */}\n              <div className=\"input-block\">\n                <input type=\"text\" name=\"country\" onChange={(e) => setProspectData({...prospectData, prospect_country: e.target.value})}/>\n                <label className=\"heading-4\" htmlFor=\"country\">Country</label>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default CampaignProspectNew;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/SingleProspect/AdditionalFields.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/StepSettings/Bar.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/StepSettings/Window.js",["481","482","483","484","485"],[],"import {useState, useEffect, useContext} from \"react\"\nimport { GlobalContext } from \"../../../GlobalProvider\"\n\nconst Window = ({toggler, index, startHour, setStartHour, endHour, setEndHour}) => {\n  const {step} = useContext(GlobalContext)\n  const hours = [\n    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\n  ]\n\n\n  return(\n    <div className=\"window\">\n      <h2 className=\"window__heading\">Send Emails between these hours</h2>\n      <form className=\"window__form\" action=\"\">\n          <div className=\"window__form--container\">\n            <select onChange={(e) => setStartHour(e.target.value)}>\n              {\n                hours.map((d, i) => \n                    <option key={i}\n                    selected={d == startHour ? \"selected\" : \"\"} value={d}>{d}</option>\n                )\n              }\n            </select>\n            <h1 className=\"to\">To</h1>\n            <select onChange={(e) => setEndHour(e.target.value)}>\n              {\n                hours.map((d, i) => \n                    <option key={i} \n                    selected={d == endHour ? \"selected\" : \"\"} value={d}>{d}</option>\n                )\n              }\n              <option value=\"0\">Midnight</option>\n            </select>\n          </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Window\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/StepSettings/Days.js",["486","487","488"],[],"import { useState, useContext } from \"react\"\nimport { GlobalContext } from \"../../../GlobalProvider\"\n\nconst Days = ({selectedDays, setSelectedDays}) => {\n\n  const handleSelectProspect = (e) => {\n    const prospectId = e.target.value\n    if(!selectedDays.includes(prospectId)){\n      setSelectedDays([...selectedDays, prospectId])\n    }\n    else{\n      setSelectedDays(selectedDays.filter((selectedProspectsId) => {\n        return selectedProspectsId !== prospectId;\n      })\n    )\n    }\n  }\n\n  return(\n    <div className=\"days\">\n      <form className=\"days__form\">\n        <div className=\"days__form--field\">\n          <input type=\"checkbox\" id=\"sunday\" value=\"SUN\"  onChange={handleSelectProspect} checked={selectedDays.includes(\"SUN\")}/>\n          <label htmlFor=\"sunday\">Sunday</label>\n        </div>\n        <div className=\"days__form--field\">\n          <input type=\"checkbox\" id=\"monday\" value=\"MON\"  onChange={handleSelectProspect} checked={selectedDays.includes(\"MON\")}/>\n          <label htmlFor=\"monday\">Monday</label>\n        </div>\n        <div className=\"days__form--field\">\n          <input type=\"checkbox\" id=\"tuesday\" value=\"TUE\"  onChange={handleSelectProspect} checked={selectedDays.includes(\"TUE\")}/>\n          <label htmlFor=\"tuesday\">Tuesday</label>\n        </div>\n        <div className=\"days__form--field\">\n          <input type=\"checkbox\" id=\"wednesday\" value=\"WED\"  onChange={handleSelectProspect} checked={selectedDays.includes(\"WED\")}/>\n          <label htmlFor=\"wednesday\">Wednesday</label>\n        </div>\n        <div className=\"days__form--field\">\n          <input type=\"checkbox\" id=\"thursday\" value=\"THU\"  onChange={handleSelectProspect} checked={selectedDays.includes(\"THU\")}/>\n          <label htmlFor=\"thursday\">Thursday</label>\n        </div>\n        <div className=\"days__form--field\">\n          <input type=\"checkbox\" id=\"friday\" value=\"FRI\"  onChange={handleSelectProspect} checked={selectedDays.includes(\"FRI\")}/>\n          <label htmlFor=\"friday\">Friday</label>\n        </div>\n        <div className=\"days__form--field\">\n          <input type=\"checkbox\" id=\"saturday\" value=\"SAT\"  onChange={handleSelectProspect} checked={selectedDays.includes(\"SAT\")}/>\n          <label htmlFor=\"saturday\">Saturday</label>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Days\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/StepSettings/WhichEmail.js",["489","490","491","492"],[],"import axios from \"axios\"\nimport { useState, useEffect, useContext } from \"react\"\nimport Cookies from 'universal-cookie';\nimport { GlobalContext } from \"../../../GlobalProvider\"\n\nconst cookies = new Cookies()\nconst WhichEmail = ({selectedEmail, setSelectedEmail}) => {\n  const {step} = useContext(GlobalContext)\n  const [addStep, setAddStep] = step\n  const [creds, setCreds] = useState([])\n  const userId = cookies.get(\"userId\")\n\n  useEffect(() => {\n    getCreds()\n  }, [])\n\n  const headers = {\n      \"Authorization\": `Bearer ${cookies.get('access_token')}`\n  }\n\n  const getCreds = () => {\n    const params = {\n      userId: userId\n    }\n    axios.get(`/creds/`, {\n      params : params,\n      headers: headers\n    }).then((res) => {\n      setCreds(res.data)\n    })\n  }\n\n  return(\n    <div className=\"assign\">\n      <h3 className=\"assign__heading\">Email Sent from the selected email</h3>\n      <form className=\"assign__form\" action=\"\">\n        <select id=\"\" name=\"\" onChange={(e) => setSelectedEmail(e.target.value)}>\n          <option value=\"\">None</option>\n          {\n            creds.map(d => \n                <option selected={ d.email == selectedEmail ? \"selected\" : \"\"} value={d.email}>{d.email}</option>\n            )\n          }\n        </select>\n      </form>\n    </div>\n  )\n}\n\nexport default WhichEmail\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignUpload.js",["493","494","495","496"],[],"import { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\"\nimport Cookies from 'universal-cookie';\nimport { GlobalContext } from \"../../../../GlobalProvider\";\nimport UploadModalBar from \"./CampaignUploadModalBar\"\nimport DragAndDrop from \"./CampaignDragAndDrop\";\nimport UploadNav from \"./CampaignUploadNav\";\nimport MapColumns from \"./CampaignMapColumns\";\nimport AssignList from \"./CampaignAssignList\";\nimport CampaignReview from \"../../CampaignReview\";\n\nconst cookies = new Cookies();\nfunction Upload(){\n  const {addProspectCampaign, addProspect, upload, selectedCampaign, review} = useContext(GlobalContext)\n  const [campaignProspectAdd, setCampaignProspectAdd] = addProspectCampaign\n  const [progress, setProgress] = useState(1)\n  const [csvHeaders, setCsvHeaders] = useState(null)\n  const [prospectData, setProspectData] = useState([])\n  const [list, setList] = useState(\"\")\n  const [newUpload, setNewUpload] = upload\n  const [file, setFile] = useState(null)\n  const [prospectIds, setProspectIds] = useState([])\n  const [reviewModal, setReviewModal] = review\n\n  const token = cookies.get(\"access_token\")\n  const user_id = cookies.get(\"userId\")\n\n  const handleFileUpload = (f) => {\n    let data = new FormData()\n    setFile(f)\n    data.append('file', f)\n    axios.post(\"/csv/getCsvHeaders\", data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then((res) => {\n      if(res.status === 200){\n        setCsvHeaders(res.data)\n        setProgress(progress + 1)\n      }\n    })\n  }\n\n  const importProspect = () => {\n    let data = new FormData()\n    data.append(\"file\", file)\n    data.append(\"firstName\", prospectData.firstName)\n    data.append(\"lastName\", prospectData.lastName)\n    data.append(\"prospectEmail\", prospectData.prospectEmail)\n    data.append(\"prospectCompany\", prospectData.prospectCompany)\n    data.append(\"prospectMobileNumber\", prospectData.prospectMobileNumber)\n    data.append(\"prospectAccount\", prospectData.prospectAccount)\n    data.append(\"prospectCompanyEmail\", prospectData.prospectCompanyEmail)\n    data.append(\"prospectDepartment\", prospectData.prospectDepartment)\n    data.append(\"prospectTitle\", prospectData.prospectTitle)\n    data.append(\"prospectCompanyDomain\", prospectData.prospectCompanyDomain)\n    data.append(\"prospectLinkedinUrl\", prospectData.prospectLinkedinUrl)\n    data.append(\"prospectTwitterUrl\", prospectData.prospectTwitterUrl)\n    data.append(\"prospectLocation\", prospectData.prospectLocation)\n    data.append(\"prospectCountry\", prospectData.prospectCountry)\n\n    const params = {\n      listId: list,\n      userId: user_id,\n    }\n\n    // axios.post(`/csv/csvToProspects/${list}/${user_id}`)\n    axios.post(`/csv/csvToProspects/`, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${token}`\n      },\n      params: params\n    }).then((res) => {\n      if(res.status === 200){\n        const ids = []\n        res.data.map((d,i) => \n         ids.push(d.id)\n        )\n      setProspectIds(ids)\n      setReviewModal(!reviewModal)\n      }\n    })\n  }\n\n  // function toggleAdd(){\n  //   setAdd(!add)\n  // }\n\n  function toggleReview(){\n    return null;\n  }\n\n  function toggleUpload(){\n    setNewUpload(!newUpload)\n  }\n\n  function toggleHome(){\n    setNewUpload(false)\n    setReviewModal(false)\n    setCampaignProspectAdd(false)\n  }\n\n  const selectProgress = (number) => {\n    setProgress(number)\n  }\n\n  const prevStep = () => {\n      setProgress(progress - 1)\n  }\n\n  const nextStep = () => {\n    if(progress <= 2){\n      setProgress(progress + 1)\n    }\n  }\n\n  switch(progress){\n    case 1:\n      return(\n        <div className=\"upload\">\n          <UploadNav toggleUpload={toggleUpload} importProspect={importProspect} nextStep={nextStep} prevStep={prevStep} progress={progress} toggleHome={toggleHome}/>\n\n          <div className=\"upload__container\">\n              <UploadModalBar progress={progress} selectProgress={selectProgress}/>\n              <DragAndDrop handleFileUpload={handleFileUpload}/>\n          </div>\n        </div>\n      )\n    case 2:\n      return(\n        <div className=\"upload\">\n          <UploadNav toggleUpload={toggleUpload} importProspect={importProspect} nextStep={nextStep} prevStep={prevStep} progress={progress} toggleHome={toggleHome}/>\n          <div className=\"upload__container\">\n              <UploadModalBar progress={progress} selectProgress={selectProgress}/>\n              <MapColumns csvHeaders={csvHeaders} prospectData={prospectData} setProspectData={setProspectData}/>\n          </div>\n        </div>\n      )\n    case 3:\n      return(\n        <div className=\"upload\">\n          {reviewModal ? <CampaignReview selectedProspects={prospectIds} toggleHome={toggleHome} toggleReview={toggleReview}/> : null}\n          <UploadNav toggleUpload={toggleUpload} importProspect={importProspect} nextStep={nextStep} prevStep={prevStep} progress={progress} toggleHome={toggleHome}/>\n          <div className=\"upload__container\">\n              <UploadModalBar progress={progress} selectProgress={selectProgress}/>\n              <AssignList list={list} setList={setList}/>\n          </div>\n        </div>\n      )\n    default: \n      break\n  }\n}\n\nexport default Upload\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Upload/Upload.js",["497","498","499"],[],"import { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\"\nimport Cookies from 'universal-cookie';\nimport { GlobalContext } from \"../../../../GlobalProvider\";\nimport UploadModalBar from \"./UploadModalBar\"\nimport DragAndDrop from \"./DragAndDrop\";\nimport UploadNav from \"./UploadNav\";\nimport MapColumns from \"./MapColumns\";\nimport AssignList from \"./AssignList\";\nimport {useParams} from \"react-router\"\n\nconst cookies = new Cookies();\nfunction Upload(){\n  const {addProspect, upload, selectedCampaign} = useContext(GlobalContext)\n  const [add, setAdd] = addProspect\n  const [progress, setProgress] = useState(1)\n  const [csvHeaders, setCsvHeaders] = useState(null)\n  const [prospectData, setProspectData] = useState([])\n  const [list, setList] = useState(\"\")\n  const [newUpload, setNewUpload] = upload\n  const [file, setFile] = useState(null)\n  const token = cookies.get(\"access_token\")\n  const user_id = cookies.get(\"userId\")\n\n  const handleFileUpload = (f) => {\n    let data = new FormData()\n    setFile(f)\n    data.append('file', f)\n    axios.post(\"/csv/getCsvHeaders\", data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then((res) => {\n      if(res.status === 200){\n        setCsvHeaders(res.data)\n        setProgress(progress + 1)\n      }\n    })\n  }\n\n  const importProspect = () => {\n    let data = new FormData()\n    data.append(\"file\", file)\n    data.append(\"firstName\", prospectData.firstName)\n    data.append(\"lastName\", prospectData.lastName)\n    data.append(\"prospectEmail\", prospectData.prospectEmail)\n    data.append(\"prospectCompany\", prospectData.prospectCompany)\n    data.append(\"prospectMobileNumber\", prospectData.prospectMobileNumber)\n    data.append(\"prospectAccount\", prospectData.prospectAccount)\n    data.append(\"prospectCompanyEmail\", prospectData.prospectCompanyEmail)\n    data.append(\"prospectDepartment\", prospectData.prospectDepartment)\n    data.append(\"prospectTitle\", prospectData.prospectTitle)\n    data.append(\"prospectCompanyDomain\", prospectData.prospectCompanyDomain)\n    data.append(\"prospectLinkedinUrl\", prospectData.prospectLinkedinUrl)\n    data.append(\"prospectTwitterUrl\", prospectData.prospectTwitterUrl)\n    data.append(\"prospectLocation\", prospectData.prospectLocation)\n    data.append(\"prospectCountry\", prospectData.prospectCountry)\n\n    const params = {\n      listId: list,\n      userId: user_id,\n    }\n\n    // axios.post(`/csv/csvToProspects/${list}/${user_id}`)\n    axios.post(`/csv/csvToProspects/`, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${token}`\n      },\n      params: params\n    }).then((res) => {\n      console.log(\"Submitted1\")\n      if(res.status === 200){\n        window.location.reload()\n      }\n    })\n  }\n\n  function toggleAdd(){\n    setAdd(!add)\n  }\n\n  function toggleUpload(){\n    setNewUpload(!newUpload)\n  }\n\n  function toggleHome(){\n    toggleUpload()\n    toggleAdd()\n  }\n\n  const selectProgress = (number) => {\n    setProgress(number)\n  }\n\n  const nextStep = () => {\n    if(progress <= 2){\n      setProgress(progress + 1)\n    }\n  }\n\n  switch(progress){\n    case 1:\n      return(\n        <div className=\"upload\">\n          <UploadNav toggleUpload={toggleUpload} importProspect={importProspect} nextStep={nextStep} progress={progress} toggleHome={toggleHome}/>\n\n          <div className=\"upload__container\">\n              <UploadModalBar progress={progress} selectProgress={selectProgress}/>\n              <DragAndDrop handleFileUpload={handleFileUpload}/>\n          </div>\n        </div>\n      )\n    case 2:\n      return(\n        <div className=\"upload\">\n          <UploadNav toggleUpload={toggleUpload} importProspect={importProspect} nextStep={nextStep} progress={progress} toggleHome={toggleHome}/>\n          <div className=\"upload__container\">\n              <UploadModalBar progress={progress} selectProgress={selectProgress}/>\n              <MapColumns csvHeaders={csvHeaders} prospectData={prospectData} setProspectData={setProspectData}/>\n          </div>\n        </div>\n      )\n    case 3:\n      return(\n        <div className=\"upload\">\n          <UploadNav toggleUpload={toggleUpload} importProspect={importProspect} nextStep={nextStep} progress={progress} toggleHome={toggleHome}/>\n          <div className=\"upload__container\">\n              <UploadModalBar progress={progress} selectProgress={selectProgress}/>\n              {/* <MapColumns csvHeaders={csvHeaders} prospectData={prospectData} setProspectData={setProspectData}/> */}\n              <AssignList list={list} setList={setList}/>\n          </div>\n        </div>\n      )\n    default: \n      break\n  }\n}\n\nexport default Upload\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/Preview.js",["500","501"],[],"import axios from \"axios\"\nimport Cookies from \"universal-cookie\"\nimport { useEffect, useState } from \"react\"\nimport moment from \"moment\"\nimport {useNavigate} from \"react-router\"\n\nimport { Editor } from \"@tinymce/tinymce-react\"\n\nconst cookies = new Cookies()\nfunction Preview({selectedProspects, togglePreview, toggleHome, campaignId, setProgress, setAddStep}) {\n  const [previews, setPreviews] = useState([])\n  const [selectedPreview, setSelectedPreview] = useState(0)\n  const [selectedStep, setSelectedStep] = useState(0)\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    generatePreview()\n  }, [])\n  \n  const generatePreview = () => {\n    const x = moment().format();\n    const data = {\n      selectedProspects: selectedProspects,\n      selectedCampaign: campaignId,\n      startAt: x\n    }\n    axios.post(\"/campaigns/generateProspectPreview\", data, {\n        headers: {\n          \"Authorization\": `Bearer ${cookies.get('access_token')}`\n        },\n        params: {\n          \"userId\": cookies.get(\"userId\")\n        }\n    }).then((res) => {\n      setPreviews(res.data)\n    })\n  }\n\n  const campaignStart = () => {\n    axios.post(\"/job/campaign/preview-start\", previews, {\n        headers: {\n          \"Authorization\": `Bearer ${cookies.get('access_token')}`\n        },\n        params: {\n          userId: cookies.get(\"userId\"),\n          campaignId: campaignId\n        }\n    }).then((res) => {\n      console.log(res)\n      if(res.status === 200){\n        // toggleHome()\n        // navigate(\"/campaigns\")\n        toggleHome()\n        setAddStep([])\n        navigate(`/campaigns/${campaignId}/step`)\n        setProgress(0)\n      }\n    })\n  }\n\n  const selectProspect = (index) => {\n    setSelectedPreview(index)\n    setSelectedStep(0)\n  }\n\n  const subjectChange = (e) => {\n    const list = [...previews];\n    list[selectedPreview].previews[selectedPreview].subject = e.target.value\n    list[selectedPreview].previews[selectedPreview].edited = true\n    setPreviews(list)\n  }\n\n  const bodyChange = (e) => {\n    const list = [...previews];\n    list[selectedPreview].previews[selectedPreview].body = e.target.getContent()\n    list[selectedPreview].previews[selectedPreview].edited = true\n    setPreviews(list)\n  }\n\n  return(\n    <div className=\"preview\">\n      <nav className=\"nav\">\n        <div className=\"col-1\">\n          <button onClick={togglePreview} className=\"btn-back\"><i class=\"fas fa-chevron-left\"></i></button>\n          <h1 className=\"copy__para--big\">Preview Campaign</h1>\n        </div>\n        <div className=\"col-2\">\n          <button className=\"btn\" onClick={campaignStart}>Start Campaign</button>\n          <button onClick={toggleHome} className=\"btn-close\">&times;</button>\n        </div>\n      </nav>\n\n      <div className=\"preview__container\">\n        <div className=\"preview__container--item\">\n          <div className=\"header\">\n            <ul className=\"header__links\">\n              <li className=\"copy__para--big\">Total Prospects: <strong>{previews.length}</strong></li>\n            </ul>\n          </div>\n          {\n            previews.map((d, index) => \n               <>\n               <div className={selectedPreview === index ? \"selector active\" : \"selector\"} onClick={() => selectProspect(index)}>\n                  <p key={index} className=\"copy__para--medium\">{d.prospectEmail}</p>\n               </div>\n               </>\n            )\n          }\n        </div>\n\n        <div className=\"preview__container--item\">\n          <div className=\"header\">\n            <ul className=\"header__links\">\n              {\n                previews.length !== 0 ? previews[selectedPreview].previews.map((d, i) =>\n                  <li key={i} onClick={() => setSelectedStep(i)} className={`header__links--link ${i === selectedStep ? \"active heading-4\" : \"copy__para--medium-light\"}`}><i class=\"fas fa-envelope\"></i> Step: {d.stepNumber}</li>\n                ) : null\n              }\n            </ul>\n          </div>\n\n          <div className=\"mail-body__container\">\n            <div className=\"row\">\n              <div className=\"mail-body__container--item\">\n                  <p className=\"copy__para--medium-light head\">From-Id</p>\n                  <p className=\"copy__para--medium para\">{previews.length !== 0 ? previews[selectedPreview].previews[selectedStep].from : null}</p>\n              </div>\n              <div className=\"mail-body__container--item\">\n                  <p className=\"copy__para--medium-light head\">StartDate</p>\n                  <p className=\"copy__para--medium para\">{previews.length !== 0 ? new Date(previews[selectedPreview].previews[selectedStep].startDate).toString() : null}</p>\n              </div>\n            </div>\n\n            <div className=\"mail-body__container--item\">\n                <p className=\"copy__para--medium-light head\">To</p>\n                <p className=\"copy__para--medium para\">{previews.length !== 0 ? previews[selectedPreview].previews[selectedStep].to : null}</p>\n            </div>\n\n            <div className=\"mail-body__container--item\">\n              <p className=\"copy__para--medium-light head\">Subject</p>\n              <input className=\"copy__para--medium para\" defaultValue={previews.length !== 0 ? previews[selectedPreview].previews[selectedStep].subject : null} onChange={(e) => subjectChange(e)}/>\n            </div>\n\n            <div className=\"mail-body__container--item\">\n              <Editor\n                apiKey=\"fnajkiw2wcz5d1lrgsif3xicw1wdvcj4f9hmzxrngbljd9b6\"\n                initialValue={previews.length !== 0 ? previews[selectedPreview].previews[selectedStep].body : null}\n                init={{\n                  height: 500,\n                  menubar: false,\n                  plugins: [\n                    'advlist underline autolink lists link image tinydrive', \n                    'charmap print preview anchor help forecolor',\n                    'searchreplace visualblocks code emoticons link',\n                    'insertdatetime media table paste wordcount table fontselect'\n                  ],\n                  toolbar_mode: \"wrap\",\n                  toolbar:\n                    'fontselect fontsizeselect forecolor  \\\n                    | bold italic underline \\\n                    | alignleft aligncenter alignright alignjustify| \\\n                    bullist numlist outdent indent \\\n                    | table link image code \\\n                    | emoticons ',\n                  image_title: true,\n                  automatic_uploads: true,\n                  paste_data_images: true,\n                  statusbar: false,\n                }}\n                onChange={(e) => bodyChange(e)}\n              />\n            </div>\n\n            <div className=\"mail-body__container--item\">\n              <button className=\"btn-sec\">Send Test Email</button>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Preview;\n","/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignDragAndDrop.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignUploadNav.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignUploadModalBar.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignMapColumns.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/CampaignComponents/CampaignProspects/CampaignUpload/CampaignAssignList.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Upload/DragAndDrop.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Upload/UploadNav.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Upload/UploadModalBar.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Upload/AssignList.js",[],[],"/home/lucifer/Projects/softwares/lemty-frontend/src/Components/ProspectsComponents/Prospects/Upload/MapColumns.js",[],[],{"ruleId":"502","replacedBy":"503"},{"ruleId":"504","replacedBy":"505"},{"ruleId":"506","severity":1,"message":"507","line":12,"column":11,"nodeType":"508","messageId":"509","endLine":12,"endColumn":14},{"ruleId":"506","severity":1,"message":"510","line":8,"column":10,"nodeType":"508","messageId":"509","endLine":8,"endColumn":14},{"ruleId":"506","severity":1,"message":"511","line":8,"column":16,"nodeType":"508","messageId":"509","endLine":8,"endColumn":23},{"ruleId":"506","severity":1,"message":"512","line":12,"column":10,"nodeType":"508","messageId":"509","endLine":12,"endColumn":23},{"ruleId":"506","severity":1,"message":"513","line":12,"column":25,"nodeType":"508","messageId":"509","endLine":12,"endColumn":41},{"ruleId":"506","severity":1,"message":"514","line":3,"column":9,"nodeType":"508","messageId":"509","endLine":3,"endColumn":17},{"ruleId":"506","severity":1,"message":"515","line":3,"column":19,"nodeType":"508","messageId":"509","endLine":3,"endColumn":28},{"ruleId":"506","severity":1,"message":"516","line":7,"column":10,"nodeType":"508","messageId":"509","endLine":7,"endColumn":18},{"ruleId":"506","severity":1,"message":"514","line":1,"column":9,"nodeType":"508","messageId":"509","endLine":1,"endColumn":17},{"ruleId":"517","severity":1,"message":"518","line":10,"column":6,"nodeType":"519","endLine":10,"endColumn":8,"suggestions":"520"},{"ruleId":"506","severity":1,"message":"512","line":12,"column":10,"nodeType":"508","messageId":"509","endLine":12,"endColumn":23},{"ruleId":"517","severity":1,"message":"521","line":9,"column":6,"nodeType":"519","endLine":9,"endColumn":16,"suggestions":"522"},{"ruleId":"506","severity":1,"message":"514","line":1,"column":9,"nodeType":"508","messageId":"509","endLine":1,"endColumn":17},{"ruleId":"506","severity":1,"message":"515","line":1,"column":31,"nodeType":"508","messageId":"509","endLine":1,"endColumn":40},{"ruleId":"506","severity":1,"message":"523","line":16,"column":24,"nodeType":"508","messageId":"509","endLine":16,"endColumn":39},{"ruleId":"517","severity":1,"message":"521","line":9,"column":6,"nodeType":"519","endLine":9,"endColumn":16,"suggestions":"524"},{"ruleId":"506","severity":1,"message":"525","line":4,"column":10,"nodeType":"508","messageId":"509","endLine":4,"endColumn":17},{"ruleId":"517","severity":1,"message":"526","line":26,"column":6,"nodeType":"519","endLine":26,"endColumn":8,"suggestions":"527"},{"ruleId":"528","severity":1,"message":"529","line":282,"column":25,"nodeType":"530","messageId":"531","endLine":287,"endColumn":38},{"ruleId":"528","severity":1,"message":"529","line":315,"column":27,"nodeType":"530","messageId":"531","endLine":320,"endColumn":40},{"ruleId":"528","severity":1,"message":"529","line":365,"column":27,"nodeType":"530","messageId":"531","endLine":370,"endColumn":40},{"ruleId":"517","severity":1,"message":"532","line":43,"column":6,"nodeType":"519","endLine":43,"endColumn":42,"suggestions":"533"},{"ruleId":"506","severity":1,"message":"534","line":11,"column":10,"nodeType":"508","messageId":"509","endLine":11,"endColumn":26},{"ruleId":"506","severity":1,"message":"535","line":15,"column":21,"nodeType":"508","messageId":"509","endLine":15,"endColumn":33},{"ruleId":"506","severity":1,"message":"536","line":13,"column":9,"nodeType":"508","messageId":"509","endLine":13,"endColumn":29},{"ruleId":"506","severity":1,"message":"537","line":22,"column":31,"nodeType":"508","messageId":"509","endLine":22,"endColumn":53},{"ruleId":"517","severity":1,"message":"538","line":35,"column":6,"nodeType":"519","endLine":35,"endColumn":8,"suggestions":"539"},{"ruleId":"506","severity":1,"message":"540","line":1,"column":8,"nodeType":"508","messageId":"509","endLine":1,"endColumn":13},{"ruleId":"506","severity":1,"message":"537","line":15,"column":31,"nodeType":"508","messageId":"509","endLine":15,"endColumn":53},{"ruleId":"506","severity":1,"message":"541","line":18,"column":10,"nodeType":"508","messageId":"509","endLine":18,"endColumn":21},{"ruleId":"506","severity":1,"message":"542","line":18,"column":23,"nodeType":"508","messageId":"509","endLine":18,"endColumn":34},{"ruleId":"506","severity":1,"message":"543","line":18,"column":36,"nodeType":"508","messageId":"509","endLine":18,"endColumn":42},{"ruleId":"506","severity":1,"message":"537","line":19,"column":31,"nodeType":"508","messageId":"509","endLine":19,"endColumn":53},{"ruleId":"506","severity":1,"message":"544","line":25,"column":10,"nodeType":"508","messageId":"509","endLine":25,"endColumn":15},{"ruleId":"517","severity":1,"message":"545","line":39,"column":6,"nodeType":"519","endLine":39,"endColumn":8,"suggestions":"546"},{"ruleId":"517","severity":1,"message":"547","line":137,"column":6,"nodeType":"519","endLine":137,"endColumn":8,"suggestions":"548"},{"ruleId":"506","severity":1,"message":"540","line":1,"column":8,"nodeType":"508","messageId":"509","endLine":1,"endColumn":13},{"ruleId":"506","severity":1,"message":"541","line":14,"column":10,"nodeType":"508","messageId":"509","endLine":14,"endColumn":21},{"ruleId":"506","severity":1,"message":"542","line":14,"column":23,"nodeType":"508","messageId":"509","endLine":14,"endColumn":34},{"ruleId":"506","severity":1,"message":"543","line":14,"column":36,"nodeType":"508","messageId":"509","endLine":14,"endColumn":42},{"ruleId":"506","severity":1,"message":"537","line":15,"column":31,"nodeType":"508","messageId":"509","endLine":15,"endColumn":53},{"ruleId":"506","severity":1,"message":"541","line":18,"column":10,"nodeType":"508","messageId":"509","endLine":18,"endColumn":21},{"ruleId":"506","severity":1,"message":"542","line":18,"column":23,"nodeType":"508","messageId":"509","endLine":18,"endColumn":34},{"ruleId":"506","severity":1,"message":"543","line":18,"column":36,"nodeType":"508","messageId":"509","endLine":18,"endColumn":42},{"ruleId":"506","severity":1,"message":"537","line":19,"column":31,"nodeType":"508","messageId":"509","endLine":19,"endColumn":53},{"ruleId":"517","severity":1,"message":"549","line":27,"column":6,"nodeType":"519","endLine":27,"endColumn":8,"suggestions":"550"},{"ruleId":"506","severity":1,"message":"525","line":1,"column":9,"nodeType":"508","messageId":"509","endLine":1,"endColumn":16},{"ruleId":"506","severity":1,"message":"551","line":1,"column":10,"nodeType":"508","messageId":"509","endLine":1,"endColumn":20},{"ruleId":"506","severity":1,"message":"552","line":2,"column":10,"nodeType":"508","messageId":"509","endLine":2,"endColumn":23},{"ruleId":"528","severity":1,"message":"529","line":54,"column":17,"nodeType":"530","messageId":"531","endLine":59,"endColumn":30},{"ruleId":"528","severity":1,"message":"529","line":69,"column":17,"nodeType":"530","messageId":"531","endLine":74,"endColumn":47},{"ruleId":"517","severity":1,"message":"553","line":126,"column":6,"nodeType":"519","endLine":126,"endColumn":8,"suggestions":"554"},{"ruleId":"506","severity":1,"message":"555","line":16,"column":10,"nodeType":"508","messageId":"509","endLine":16,"endColumn":20},{"ruleId":"506","severity":1,"message":"556","line":26,"column":10,"nodeType":"508","messageId":"509","endLine":26,"endColumn":17},{"ruleId":"506","severity":1,"message":"557","line":26,"column":19,"nodeType":"508","messageId":"509","endLine":26,"endColumn":25},{"ruleId":"506","severity":1,"message":"558","line":28,"column":10,"nodeType":"508","messageId":"509","endLine":28,"endColumn":16},{"ruleId":"517","severity":1,"message":"559","line":33,"column":6,"nodeType":"519","endLine":33,"endColumn":8,"suggestions":"560"},{"ruleId":"506","severity":1,"message":"514","line":4,"column":21,"nodeType":"508","messageId":"509","endLine":4,"endColumn":29},{"ruleId":"506","severity":1,"message":"561","line":9,"column":7,"nodeType":"508","messageId":"509","endLine":9,"endColumn":15},{"ruleId":"506","severity":1,"message":"541","line":11,"column":10,"nodeType":"508","messageId":"509","endLine":11,"endColumn":21},{"ruleId":"506","severity":1,"message":"542","line":11,"column":23,"nodeType":"508","messageId":"509","endLine":11,"endColumn":34},{"ruleId":"506","severity":1,"message":"543","line":11,"column":36,"nodeType":"508","messageId":"509","endLine":11,"endColumn":42},{"ruleId":"506","severity":1,"message":"562","line":12,"column":10,"nodeType":"508","messageId":"509","endLine":12,"endColumn":29},{"ruleId":"506","severity":1,"message":"555","line":13,"column":10,"nodeType":"508","messageId":"509","endLine":13,"endColumn":20},{"ruleId":"506","severity":1,"message":"555","line":10,"column":10,"nodeType":"508","messageId":"509","endLine":10,"endColumn":20},{"ruleId":"506","severity":1,"message":"514","line":1,"column":21,"nodeType":"508","messageId":"509","endLine":1,"endColumn":29},{"ruleId":"506","severity":1,"message":"515","line":1,"column":31,"nodeType":"508","messageId":"509","endLine":1,"endColumn":40},{"ruleId":"506","severity":1,"message":"515","line":1,"column":32,"nodeType":"508","messageId":"509","endLine":1,"endColumn":41},{"ruleId":"506","severity":1,"message":"563","line":10,"column":10,"nodeType":"508","messageId":"509","endLine":10,"endColumn":14},{"ruleId":"506","severity":1,"message":"564","line":16,"column":9,"nodeType":"508","messageId":"509","endLine":16,"endColumn":17},{"ruleId":"506","severity":1,"message":"565","line":20,"column":9,"nodeType":"508","messageId":"509","endLine":20,"endColumn":17},{"ruleId":"506","severity":1,"message":"515","line":1,"column":9,"nodeType":"508","messageId":"509","endLine":1,"endColumn":18},{"ruleId":"506","severity":1,"message":"515","line":1,"column":22,"nodeType":"508","messageId":"509","endLine":1,"endColumn":31},{"ruleId":"506","severity":1,"message":"514","line":1,"column":33,"nodeType":"508","messageId":"509","endLine":1,"endColumn":41},{"ruleId":"506","severity":1,"message":"566","line":8,"column":20,"nodeType":"508","messageId":"509","endLine":8,"endColumn":31},{"ruleId":"506","severity":1,"message":"567","line":9,"column":19,"nodeType":"508","messageId":"509","endLine":9,"endColumn":29},{"ruleId":"506","severity":1,"message":"568","line":13,"column":10,"nodeType":"508","messageId":"509","endLine":13,"endColumn":18},{"ruleId":"506","severity":1,"message":"569","line":14,"column":10,"nodeType":"508","messageId":"509","endLine":14,"endColumn":17},{"ruleId":"506","severity":1,"message":"570","line":15,"column":22,"nodeType":"508","messageId":"509","endLine":15,"endColumn":35},{"ruleId":"506","severity":1,"message":"571","line":16,"column":10,"nodeType":"508","messageId":"509","endLine":16,"endColumn":13},{"ruleId":"506","severity":1,"message":"572","line":16,"column":15,"nodeType":"508","messageId":"509","endLine":16,"endColumn":21},{"ruleId":"506","severity":1,"message":"573","line":6,"column":9,"nodeType":"508","messageId":"509","endLine":6,"endColumn":18},{"ruleId":"506","severity":1,"message":"562","line":11,"column":10,"nodeType":"508","messageId":"509","endLine":11,"endColumn":29},{"ruleId":"506","severity":1,"message":"570","line":15,"column":22,"nodeType":"508","messageId":"509","endLine":15,"endColumn":35},{"ruleId":"506","severity":1,"message":"574","line":17,"column":10,"nodeType":"508","messageId":"509","endLine":17,"endColumn":21},{"ruleId":"506","severity":1,"message":"575","line":17,"column":23,"nodeType":"508","messageId":"509","endLine":17,"endColumn":37},{"ruleId":"517","severity":1,"message":"576","line":25,"column":6,"nodeType":"519","endLine":25,"endColumn":28,"suggestions":"577"},{"ruleId":"506","severity":1,"message":"573","line":5,"column":10,"nodeType":"508","messageId":"509","endLine":5,"endColumn":19},{"ruleId":"506","severity":1,"message":"573","line":6,"column":10,"nodeType":"508","messageId":"509","endLine":6,"endColumn":19},{"ruleId":"506","severity":1,"message":"562","line":11,"column":10,"nodeType":"508","messageId":"509","endLine":11,"endColumn":29},{"ruleId":"506","severity":1,"message":"514","line":1,"column":9,"nodeType":"508","messageId":"509","endLine":1,"endColumn":17},{"ruleId":"506","severity":1,"message":"515","line":1,"column":19,"nodeType":"508","messageId":"509","endLine":1,"endColumn":28},{"ruleId":"506","severity":1,"message":"563","line":5,"column":10,"nodeType":"508","messageId":"509","endLine":5,"endColumn":14},{"ruleId":"578","severity":1,"message":"579","line":20,"column":33,"nodeType":"580","messageId":"581","endLine":20,"endColumn":35},{"ruleId":"578","severity":1,"message":"579","line":29,"column":33,"nodeType":"580","messageId":"581","endLine":29,"endColumn":35},{"ruleId":"506","severity":1,"message":"514","line":1,"column":10,"nodeType":"508","messageId":"509","endLine":1,"endColumn":18},{"ruleId":"506","severity":1,"message":"551","line":1,"column":20,"nodeType":"508","messageId":"509","endLine":1,"endColumn":30},{"ruleId":"506","severity":1,"message":"552","line":2,"column":10,"nodeType":"508","messageId":"509","endLine":2,"endColumn":23},{"ruleId":"506","severity":1,"message":"569","line":9,"column":10,"nodeType":"508","messageId":"509","endLine":9,"endColumn":17},{"ruleId":"506","severity":1,"message":"567","line":9,"column":19,"nodeType":"508","messageId":"509","endLine":9,"endColumn":29},{"ruleId":"517","severity":1,"message":"582","line":15,"column":6,"nodeType":"519","endLine":15,"endColumn":8,"suggestions":"583"},{"ruleId":"578","severity":1,"message":"579","line":41,"column":44,"nodeType":"580","messageId":"581","endLine":41,"endColumn":46},{"ruleId":"506","severity":1,"message":"515","line":1,"column":32,"nodeType":"508","messageId":"509","endLine":1,"endColumn":41},{"ruleId":"506","severity":1,"message":"541","line":14,"column":31,"nodeType":"508","messageId":"509","endLine":14,"endColumn":42},{"ruleId":"506","severity":1,"message":"584","line":14,"column":52,"nodeType":"508","messageId":"509","endLine":14,"endColumn":68},{"ruleId":"506","severity":1,"message":"562","line":15,"column":10,"nodeType":"508","messageId":"509","endLine":15,"endColumn":29},{"ruleId":"506","severity":1,"message":"515","line":1,"column":32,"nodeType":"508","messageId":"509","endLine":1,"endColumn":41},{"ruleId":"506","severity":1,"message":"573","line":10,"column":9,"nodeType":"508","messageId":"509","endLine":10,"endColumn":18},{"ruleId":"506","severity":1,"message":"584","line":14,"column":31,"nodeType":"508","messageId":"509","endLine":14,"endColumn":47},{"ruleId":"517","severity":1,"message":"585","line":18,"column":6,"nodeType":"519","endLine":18,"endColumn":8,"suggestions":"586"},{"ruleId":"528","severity":1,"message":"529","line":159,"column":21,"nodeType":"530","messageId":"531","endLine":164,"endColumn":34},"no-native-reassign",["587"],"no-negated-in-lhs",["588"],"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'userDataModal' is assigned a value but never used.","'setUserDataModal' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'userData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'submit'. Either include it or remove the dependency array.","ArrayExpression",["589"],"React Hook useEffect has a missing dependency: 'getUrl'. Either include it or remove the dependency array.",["590"],"'setCampaignData' is assigned a value but never used.",["591"],"'NavLink' is defined but never used.","React Hook useEffect has missing dependencies: 'getCreds', 'getSignatureServer', and 'getUnsubServer'. Either include them or remove the dependency array.",["592"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["593"],"'selectedTimezone' is assigned a value but never used.","'setTimezones' is assigned a value but never used.","'createBrowserHistory' is defined but never used.","'setCampaignProspectAdd' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSteps'. Either include it or remove the dependency array.",["594"],"'axios' is defined but never used.","'addProspect' is assigned a value but never used.","'newProspect' is assigned a value but never used.","'upload' is assigned a value but never used.","'steps' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllProspects', 'getProspectCounts', and 'getSteps'. Either include them or remove the dependency array.",["595"],"React Hook useEffect has a missing dependency: 'getCampaignSettings'. Either include it or remove the dependency array.",["596"],"React Hook useEffect has missing dependencies: 'getOverviewData' and 'getStepMetrics'. Either include them or remove the dependency array.",["597"],"'useContext' is defined but never used.","'GlobalContext' is defined but never used.","React Hook useEffect has a missing dependency: 'handleChange'. Either include it or remove the dependency array.",["598"],"'campaignId' is assigned a value but never used.","'stepBtn' is assigned a value but never used.","'setBtn' is assigned a value but never used.","'edited' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initialStep'. Either include it or remove the dependency array.",["599"],"'navigate' is assigned a value but never used.","'campaignProspectAdd' is assigned a value but never used.","'step' is assigned a value but never used.","'prevStep' is assigned a value but never used.","'nextStep' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'setAddStep' is assigned a value but never used.","'progress' is assigned a value but never used.","'addStep' is assigned a value but never used.","'setCampaignId' is assigned a value but never used.","'add' is assigned a value but never used.","'setAdd' is assigned a value but never used.","'useParams' is defined but never used.","'prospectIds' is assigned a value but never used.","'setProspectIds' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getListData'. Either include it or remove the dependency array.",["600"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getCreds'. Either include it or remove the dependency array.",["601"],"'selectedCampaign' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'generatePreview'. Either include it or remove the dependency array.",["602"],"no-global-assign","no-unsafe-negation",{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"605","fix":"607"},{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"616","fix":"617"},{"desc":"618","fix":"619"},{"desc":"620","fix":"621"},{"desc":"622","fix":"623"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},"Update the dependencies array to be: [submit]",{"range":"630","text":"631"},"Update the dependencies array to be: [getUrl, location]",{"range":"632","text":"633"},{"range":"634","text":"633"},"Update the dependencies array to be: [getCreds, getSignatureServer, getUnsubServer]",{"range":"635","text":"636"},"Update the dependencies array to be: [selectedList, pageNumber, pageSize, getData]",{"range":"637","text":"638"},"Update the dependencies array to be: [getSteps]",{"range":"639","text":"640"},"Update the dependencies array to be: [getAllProspects, getProspectCounts, getSteps]",{"range":"641","text":"642"},"Update the dependencies array to be: [getCampaignSettings]",{"range":"643","text":"644"},"Update the dependencies array to be: [getOverviewData, getStepMetrics]",{"range":"645","text":"646"},"Update the dependencies array to be: [handleChange]",{"range":"647","text":"648"},"Update the dependencies array to be: [initialStep]",{"range":"649","text":"650"},"Update the dependencies array to be: [getListData, pageNumber, pageSize]",{"range":"651","text":"652"},"Update the dependencies array to be: [getCreds]",{"range":"653","text":"654"},"Update the dependencies array to be: [generatePreview]",{"range":"655","text":"656"},[261,263],"[submit]",[221,231],"[getUrl, location]",[221,231],[942,944],"[getCreds, getSignatureServer, getUnsubServer]",[1742,1778],"[selectedList, pageNumber, pageSize, getData]",[1675,1677],"[getSteps]",[1682,1684],"[getAllProspects, getProspectCounts, getSteps]",[3517,3519],"[getCampaignSettings]",[1110,1112],"[getOverviewData, getStepMetrics]",[3057,3059],"[handleChange]",[1467,1469],"[initialStep]",[1101,1123],"[getListData, pageNumber, pageSize]",[470,472],"[getCreds]",[605,607],"[generatePreview]"]